<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WindowsAzure.Security.Authentication</name>
    </assembly>
    <members>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AbsoluteUriEqualityComparer">
            <summary>
            Represents an <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for a <see cref="T:System.Uri"/> that makes decisions based on
            <see cref="P:System.Uri.AbsoluteUri"/>.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AdfsRetryPolicy">
            <summary>
            Represents the retry policy when requesting a security token from ADFS.
            </summary>
            <remarks>
            The ADFS retry policy:
            - Try up to 3 times.
            - The initial timeout is 10s. For each TimeoutException, add 10s to the timeout.
            - Only retry if the exception from ADFS is one of the following:
                + TimeoutException
                + CommunicationException that is not a FaultException nor MessageSecurityException.
                FaultException indicates that that the server has received the request. The 
                MessageSecurityException is thrown when the client fails to authenticate to the ADFS. In
                both cases, we should not retry because it is not network-related issues.
            - If the exception is not TimeoutException, pause for 5 seconds before retrying.
            </remarks>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AdfsRetryPolicy.MaxNumberOfTrial">
            <summary>
            The maximum number of trial.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AdfsRetryPolicy.WaitTimeInSeconds">
            <summary>
            The wait time before retrying if waiting is necessary.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AdfsRetryPolicy.InitialTimeoutInSeconds">
            <summary>
            The timeout used to request a security token from ADFS.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AggressiveCertificateValidationCallbackRegistrar">
            <summary>Represents a registrar that aggressively re-registers a certificate validation callback.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AggressiveCertificateValidationCallbackRegistrar.#ctor(System.Type,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackContext,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistrarLog)">
            <summary>
            Initializes a new instance of the <see 
            cref="T:Microsoft.WindowsAzure.Security.Authentication.AggressiveCertificateValidationCallbackRegistrar"/> class.
            </summary>
            <param name="callbackDeclaringType">The declaring type of the callback delegate to be registered.</param>
            <param name="context">The context in which to register.</param>
            <param name="log">The log to which to write events.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AggressiveCertificateValidationCallbackRegistrar.RegisterAsNeeded(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackFactory)">
            <summary>
            Registers the callback, if necessary according to current state and this registrar's policy.
            </summary>
            <param name="factory">The factory to use to create the callback, if registration is necessary.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AllCertificateValidator">
            <summary>Represents a validator that validates only when all contained validators validate.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AnyCertificateValidator">
            <summary>Represents a validator that validates when any contained validator validates.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AssemblyInfoConstants">
            <summary>
            Defines the assembly information constants. These constants are defined under the assembly's 
            namespace. Otherwise, the class name could potentially conflict with the test 
            assemblies, to whom this class's internals are made visible.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AudienceRestrictionConfigurationElement">
            <summary>
            Encapsulates how the audience restriction is configured in the service host.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AudienceRestrictionConfigurationElement.#ctor(System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AudienceRestrictionConfigurationElement"/> class.
            </summary>
            <param name="audienceUris">The list of audience URIs.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AudienceRestrictionConfigurationElement.ApplyConfiguration(Microsoft.IdentityModel.Configuration.ServiceConfiguration)">
            <summary>
            Implements the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IServiceConfigurationElement"/> interface.
            </summary>
            <param name="configuration">The service configuration.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticateParameterNames">
            <summary>
            Represents the names of parameters in the challenge of the WWW-Authenticate
            response header.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AuthenticateParameterNames.MetadataVersion">
            <summary>
            The version of the authentication metadata.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AuthenticateParameterNames.StsRealmName">
            <summary>
            The realm of the dSTS (e.g. realm://dsts.core.windows.net/).
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AuthenticateParameterNames.DnsHostName">
            <summary>
            The DNS name of the service. This parameter is used only when the client does not
            know the DNS name of the service, such as when an IP address is used.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AuthenticateParameterNames.CertificateStsAddress">
            <summary>
            The address of the dSTS endpoint to request a security token using a certificate credential.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AuthenticateParameterNames.IssuedTokenStsAddress">
            <summary>
            The address of the dSTS endpoint to request a security token using an issued token credential.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AuthenticateParameterNames.DstsDiscoveryAddress">
            <summary>
            The dSTS URL from which the client can retrieve the ADFS token issuance endpoint.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AuthenticateParameterNames.KnownStsThumbprints">
            <summary>
            The list of thumbprints of dSTS certificates configured with the service.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AuthenticateParameterNames.TrustedStsThumbprints">
            <summary>
            The list of thumbprints of dSTS certificates trusted by the service.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AuthenticateParameterNames.ErrorCode">
            <summary>
            The error code when the response from the server indicates an authentication failure.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AuthenticateParameterNames.ErrorDescription">
            <summary>
            The description of the error when the response from the server indicates an 
            authentication failure.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient">
            <summary>
            Represents an authentication client.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential)">
            <summary>
            Initializes a new instance of the AuthenticationClient class.
            </summary>
            <param name="clientCredential">The client credential object.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts)">
            <summary>
            Initializes a new instance of the AuthenticationClient class.
            </summary>
            <param name="clientCredential">The client credential object.</param>
            <param name="clientHomeSts">An object containing information about the client's home STS.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the AuthenticationClient class.
            </summary>
            <param name="clientCredential">The client credential object.</param>
            <param name="clientHomeSts">An object containing information about the client's home STS.</param>
            <param name="trustedStsCertificateThumbprints">A list of thumbprints of STS certificates known 
            to the client. This list is used to validate the SSL certificate of all STS's along the trust
            chain between the client and the server. Thumbprints are used when PKI cannot be done.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IAuthenticationClientConfiguration)">
            <summary>
            Initializes a new instance of the AuthenticationClient class.
            </summary>
            <param name="clientCredential">The client credential object.</param>
            <param name="clientHomeSts">An object containing information about the client's home STS.</param>
            <param name="configuration">The configuration of authentication client.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient.PurgeTokenCache">
            <summary>
            Purges all security tokens from the per-process cache.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient.GetSecurityToken(System.String,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata)">
            <summary>
            Requests a security token for the specified service from the datacenter security 
            token service using custom certificate selection logic provided.
            </summary>
            <param name="serviceName">The service name.</param>
            <param name="dnsHostName">The DNS host name of the service.
            This parameter is ignored if it is null, an empty string, or an IP address.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <remarks>The <paramref name="serviceName"/> and <paramref name="dnsHostName"/> are used
            to construct the service realm (a.k.a. the service SPN), which uniquely identifies the
            service. The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism.</remarks>
            <returns>>An object that represents a response to the request for security token.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient.GetSecurityToken(System.Uri,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata)">
            <summary>
            Requests a security token for the specified service from the datacenter security 
            token service.
            </summary>
            <param name="serviceRealmUri">Service realm (a.k.a. the service SPN), which uniquely identifies the
            service.</param>
            <param name="dnsHostName">The DNS host name of the service.
            This parameter is ignored if it is null, an empty string, or an IP address.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <remarks>The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism.</remarks>
            <returns>>An object that represents a response to the request for security token.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient.GetSecurityToken(System.String,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata,Microsoft.WindowsAzure.Security.Authentication.Contracts.ICertificateSelector)">
            <summary>
            Requests a security token for the specified service from the security 
            token service using custom certificate selection logic provided.
            </summary>
            <param name="serviceName">The service name</param>
            <param name="dnsHostName">The DNS host name of the service.
            This parameter is ignored if it is null, an empty string, or an IP address.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <param name="certificateSelector">Custom certificate selection logic implementation</param>
            <remarks>The <paramref name="serviceName"/> and <paramref name="dnsHostName"/> are used
            to construct the service realm (a.k.a. the service SPN), which uniquely identifies the
            service. The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism.</remarks>
            <returns>An object that represents a response to the request for security token</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient.GetSecurityToken(System.String,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata,System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Requests a security token for the specified service from the datacenter security 
            token service using ActAs security token
            </summary>
            <param name="serviceName">The service name.</param>
            <param name="dnsHostName">The DNS host name of the service.
            This parameter is ignored if it is null, an empty string, or an IP address.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <param name="actAsToken">Security token for ActAs</param>
            <remarks>The <paramref name="serviceName"/> and <paramref name="dnsHostName"/> are used
            to construct the service realm (a.k.a. the service SPN), which uniquely identifies the
            service. The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism.</remarks>
            <returns>>An object that represents a response to the request for security token.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient.GetSecurityToken(System.Uri,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata,System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Requests a security token for the specified service from the datacenter security 
            token service using ActAs security token
            </summary>
            <param name="serviceRealmUri">Service realm (a.k.a. the service SPN), which uniquely identifies the
            service.</param>
            <param name="dnsHostName">The DNS host name of the service.
            This parameter is ignored if it is null, an empty string, or an IP address.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <param name="actAsToken">Security token for ActAs</param>
            <remarks>The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism.</remarks>
            <returns>>An object that represents a response to the request for security token.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient.Initialize(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IAuthenticationClientConfiguration)">
            <summary>
            Initializes a new instance of the AuthenticationClient class.
            </summary>
            <param name="clientCredential">The client credential object.</param>
            <param name="clientHomeSts">An object containing information about the client's home STS.</param>
            <param name="configuration">The configuration of authentication client.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration">
            <summary>
            Implements the configuration of authentication client.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration"/> class.
            </summary>
            <param name="loadConfiguration">true to initialize from the application configuration.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.StsRetryOption">
            <summary>
            Gets or sets the STS retry option.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.SelfFederationMode">
            <summary>
            Gets or sets the SelfFederationMode
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.DstsStressMode">
            <summary>
            Gets or sets the DstsStressMode
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.TrustedStsCertificateThumbprints">
            <summary>
            Gets the collection of trusted STS certificate thumbprints.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.DstsPortOverride">
            <summary>
            Gets or sets the dSTS port number which would override the dSTS port
            returned by the service.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.DstsProxyAddress">
            <summary>
            Gets or sets the address of the proxy that should be used when getting
            a security token from dSTS.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.WebProxyDstsDnsNameFilter">
            <summary>
            Gets or sets the regular expression that matches the DNS names of the dSTSes for which
            the web proxy should be used. If the value is null or empty, the web proxy is used 
            for all dSTSes (i.e. the default value "*"). 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.IsInteractive">
            <summary>
            Gets or sets whether or not AuthenticationClient will prompt the user.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.FederatedAuthenticationMethod">
            <summary>
            Gets or sets the authentication method to use when connecting to federated token issuance endpoints.
            This overrides IsInteractive=false if an interactive mehtod is specified.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.StsHighAvailibilityOption">
            <summary>
            Gets or sets the STS high availibility option.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.AlternateStsHosts">
            <summary>
            Gets the set of alternate STS hosts. Only used if StsHighAvailibilityOption == LoadAlternatesFromConfig
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.DstsNamespaceExpansions">
            <summary>
            Mapping from original dSTS namespaces to additional supported namespaces.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.CustomRequestMetadata">
            <summary>
            Metadata that will be sent to dSTS as HTTP headers
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.MsiCredentials">
            <summary>
            Mapping of Managed Service Identity credentials. This is only used when setting up MSI credentials
            using the configuration file.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientConfiguration.Initialize(Microsoft.WindowsAzure.Security.Authentication.AuthenticationSection)">
            <summary>
            Initializes the configuration from <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationSection"/>.
            </summary>
            <param name="section">The authentication section.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientFactory">
            <summary>
            Implements a factory that creates instances of <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient"/>.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientFactory.Instance">
            <summary>
            Gets or sets the singleton factory.
            </summary>
            <remarks>
            The default singleton factory is meant to be replaced by unit tests with
            a factory that creates a fake authentication client that mints security
            tokens in memory.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientFactory.Create(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates an authentication client.
            </summary>
            <param name="clientCredential">The client credential.</param>
            <param name="clientHomeSts">The client home dSTS.</param>
            <param name="trustedStsCertificateThumbprints">The dSTS certificate thumbprint.</param>
            <returns>The authentication client object.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClientFactory.Create(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IAuthenticationClientConfiguration)">
            <summary>
            Creates an authentication client.
            </summary>
            <param name="clientCredential">The client credential.</param>
            <param name="clientHomeSts">The client home dSTS.</param>
            <param name="authenticationClientConfiguration">Client configuration</param>
            <returns>The authentication client object.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationException">
            <summary>
            The exception that is thrown when an authentication credential cannot
            be obtained or initialized.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationException.#ctor">
            <summary>
            Initializes a new instance of the AuthenticationException class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AuthenticationException class
            with a specified error message.
            </summary>
            <param name="message">The error message string.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the AuthenticationException class
            with a specified error message and a reference to the inner 
            exception that is the cause of this exception.
            </summary>
            <param name="message">The error message string.</param>
            <param name="innerException">The exception that is the cause of the 
            current exception.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the AuthenticationException class
            from the serialization information.
            </summary>
            <param name="info">The serialization information.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata">
            <summary>
            Encapsulates the authentication metadata returned from the server.
            The metadata can be in different formats depending on the application
            protocol. We currently support only WCF Message object or 
            WWW-Authenticate header in a 401 Unauthorized response. 
            A new format can be supported by adding a new creator overload to 
            this class.
            </summary>
            <remarks>
            This object is essentially a wrapper around the actual authentication metadata. 
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata.#ctor(System.ServiceModel.Channels.Message)">
            <summary>
            Initializes a new instance of the AuthenticationMetadata class by deserializing a WCF Message.
            </summary>
            <param name="message">A Message object containing authentication metadata from the server.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata.#ctor(Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> class.
            </summary>
            <param name="metadata">The internal metadata object.</param>
            <remarks>This constructor is internal so that unit tests can invoke it.</remarks>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata.Metadata">
            <summary>
            Gets the metadata object. This object contains the actual data of 
            the authentication metadata.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata.TryCreate(System.Net.HttpWebResponse,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata@)">
            <summary>
            Creates an <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> object from the server's 
            http web response.
            </summary>
            <param name="webResponse">The server's http web response.</param>
            <param name="authenticationMetadata">When this method returns, contains the 
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> created from the server's response.</param>
            <returns>true if the metadata can be created; otherwise, false.</returns>
            <remarks>The status code of the response must be "401 Unauthorized" and the 
            authentication metadata must be encoded in the "WWW-Authenticate" or 
            "WWW-Authenticate-dSTS" header.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata.TryCreate(Microsoft.WindowsAzure.Security.Authentication.IIncomingResponse,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata@)">
            <summary>
            Creates an <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> object from the server's response.
            </summary>
            <param name="response">The server's response.</param>
            <param name="authenticationMetadata">When this method returns, contains the 
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> constructed from the server's response.</param>
            <returns>true if the metadata can be constructed from the response; otherwise, false.</returns>
            <remarks>The status code of the response must be "401 Unauthorized" and the authentication 
            metadata must be in the WWW-Authenticate or WWW-Authenticate-dSTS header.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata.TryCreate(Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata@)">
            <summary>
            Creates the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> from the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader"/> object.
            </summary>
            <param name="header">The WWW-Authenticate response header.</param>
            <param name="authenticationMetadata">When the method returns true, 
            contains the authentication metadata.</param>
            <returns>true if the method can create the metadata object; otherwise, false.</returns>
            <remarks>This helper method is used by the wrapper layer that accesses the 
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader"/> object directly for better error handling.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata.TryCreateInternal(Microsoft.WindowsAzure.Security.Authentication.IIncomingResponse,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata@,System.String@)">
            <summary>
            Creates an <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> object from the server's response.
            </summary>
            <param name="response">The server's response.</param>
            <param name="authenticationMetadata">When this method returns, contains the 
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> constructed from the server's response.</param>
            <param name="error">If the method fails to create the metadata, this parameter contains the
            error message.</param>
            <returns>true if the metadata can be constructed from the response; otherwise, false.</returns>
            <remarks>The status code of the response must be "401 Unauthorized" and the authentication 
            metadata must be in the WWW-Authenticate or WWW-Authenticate-dSTS header.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata.TryCreateInternal(Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata@,System.String@)">
            <summary>
            Creates the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> from the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader"/> object.
            </summary>
            <param name="header">The WWW-Authenticate response header.</param>
            <param name="authenticationMetadata">When the method returns true, 
            contains the authentication metadata.</param>
            <param name="error">If the method fails to create the metadata, this parameter contains the
            error message.</param>
            <returns>true if the method can create the metadata object; otherwise, false.</returns>
            <remarks>This helper method is used by the wrapper layer that accesses the 
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader"/> object directly for better error handling.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata.ValidateMetadata(Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata,System.String@)">
            <summary>
            Validates the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata"/> and throws 
            an appropriate ArgumentException.
            </summary>
            <param name="metadata">The metadata object to be validated.</param>
            <param name="error">If the method returns false, this parameter contains the 
            error message of the validation.</param>
            <returns>true if the metadata is valid; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadataFactory">
            <summary>
            Represents a factory that creates opaque authentication 
            metadata objects.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadataFactory.#ctor(System.String,System.Uri,System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadataFactory"/> class.
            </summary>
            <param name="dstsDnsHostName">The DNS host name of the dSTS.</param>
            <param name="dstsRealm">The realm name of the dSTS.</param>
            <param name="overrideDstsPort">The port the dSTS accepts token issuance requests on.</param>
            <param name="serviceDnsHostName">The DNS host name of the service.</param>
            <param name="knownDstsCertificates">The list of dSTS certificates trusted by the service.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadataFactory.#ctor(System.UInt32,System.String,System.Uri,System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2},Microsoft.WindowsAzure.Security.Authentication.AuthenticationSection)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadataFactory"/> class.
            </summary>
            <param name="version">The version of the metadata.</param>
            <param name="dstsDnsHostName">The DNS host name of the dSTS.</param>
            <param name="dstsRealm">The realm name of the dSTS.</param>
            <param name="overrideDstsPort">The port the dSTS accepts token issuance requests on.</param>
            <param name="serviceDnsHostName">The DNS host name of the service.</param>
            <param name="knownDstsCertificates">The list of dSTS certificates trusted by the service.</param>
            <param name="authenticationSection">The authentication section in the application
            configuration.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadataFactory.TrustedDstsCertificates">
            <summary>
            Gets or sets the list of thumbprints of dSTS certificates trusted by the service.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMethods.windowsTransportCredentialFactory">
            <summary>
            Allow UTs to override windows credential creation
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMethods.smartCardCertificateCredentialFactory">
            <summary>
            Allow UTs to override smartcard cert credential creation
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationSection">
            <summary>
            Represents the authentication section in the application configuration file.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationSection.ClientSettings">
            <summary>
            Gets the settings of the client.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationSection.ServiceSettings">
            <summary>
            Gets the settings of the service.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationSection.AlternateStsSettings">
            <summary>
            A map from primary host to alternate hosts.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationSection.DstsNamespaceExpansions">
            <summary>
            A map from original dsts namespaces to expanded namespaces.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AuthenticationSection.ManagedServiceIdentities">
            <summary>
            Managed Service Identies settings
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AlternateStsConfiguration">
            <summary>
            Configuration that represents a map from primary sts hosts to a list of alternate sts hosts.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AlternateStsConfiguration.CreateNewElement">
            <summary>
            Create a new element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.AlternateStsConfiguration.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the primary host for a given alternate sts configuration.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AlternateStsConfiguration.Item(System.String)">
            <summary>
            Get an alternate sts configuration by primary host.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.AlternateSts">
            <summary>
            Represents the alternate STSes for a particular primary.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AlternateSts.PrimaryHost">
            <summary>
            Primary host.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.AlternateSts.AlternateHosts">
            <summary>
            Comma seperated list of alternate hosts.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentities">
            <summary>
            Configuration that represents a list of Managed Service Identities
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentities.CreateNewElement">
            <summary>
            Creates a new element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentities.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the Msi for a given MsiName
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentities.Item(System.String)">
            <summary>
            Get an MSI back by name
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Msi">
            <summary>
            Configuration that represents a Managed Service Identity
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.Msi.Name">
            <summary>
            Name of the MSI
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.Msi.ClientHomeStsList">
            <summary>
            List of client home sts for MSI
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.Msi.Identities">
            <summary>
            List of identities for a MSI
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IdenityCollection">
            <summary>
            Configuration that represents a list of Identites
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IdenityCollection.CreateNewElement">
            <summary>
            Creates a new element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IdenityCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the Identity
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Idenity">
            <summary>
            Configuration that represents an Idenity for MSI
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.Idenity.CertificateFile">
            <summary>
            Certificate file name
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.Idenity.Password">
            <summary>
            Password for the certficate
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DstsNamespaceExpansionsConfiguration">
            <summary>
            Represents a list of namespace expansions
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsNamespaceExpansionsConfiguration.CreateNewElement">
            <summary>
            Create a new element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsNamespaceExpansionsConfiguration.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the original name to be expanded
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DstsNamespaceExpansionsConfiguration.Item(System.String)">
            <summary>
            Get expanded names by original name
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DstsNamespaceExpansion">
            <summary>
            Expansion for a dSTS namespace
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DstsNamespaceExpansion.OriginalNamespace">
            <summary>
            Original namespace
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DstsNamespaceExpansion.ExpandedNamespaces">
            <summary>
            Comma seperated list of expanded namespaces
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.BindingConfigurationCollection">
            <summary>
            Represents a binding configuration that applies a collection of
            other binding configurations in order.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.BindingHelpers">
            <summary>
            Represents helper methods that operate on Binding objects.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Cache`2">
            <summary>Represents a cache whose contents expire at a fixed time.</summary>
            <typeparam name="TKey">The type of keys in the cache.</typeparam>
            <typeparam name="TValue">The type of values in the cache.</typeparam>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.Cache`2.RemoveExpiredItemsFromRefreshQueue">
            <summary>Removes expired items from the cache.</summary>
            <remarks>The caller must take <see cref="F:Microsoft.WindowsAzure.Security.Authentication.Cache`2.refreshLock"/> before calling this method.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.Cache`2.TryGet(`0,`1@)">
            <summary>Gets items from the cache.</summary>
            <remarks>The caller must check if cached items are expired.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.Cache`2.RemoveExpiredItems">
            <summary>Removes expired items from the cache.</summary>
            <remarks>The caller must take <see cref="F:Microsoft.WindowsAzure.Security.Authentication.Cache`2.storesLock"/> before calling this method.</remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CacheManager`2">
            <summary>Represents a cache manager.</summary>
            <typeparam name="TKey">The type of keys in the cache.</typeparam>
            <typeparam name="TValue">The type of values in the cache.</typeparam>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CachingSecurityTokenService">
            <summary>Represents a security token service that caches responses.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CachingSecurityTokenService.RefreshToken(Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Refreshes expiring items in the cache.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore">
            <summary>
            Class to store certificates in an in-memory cert store.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.ImportFlags">
            <summary>
            Flags used while importing certificates to this container.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.MaxRetryCount">
            <summary>
            Max retry count for recreation of certificate
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.inMemoryCertStore">
            <summary>
            InMemory certificate store instance
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.certStore">
            <summary>
            An in-memory certificate store for storing the certificates added to this container.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.lockObject">
            <summary>
            Synchronization lock object
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.disposed">
            <summary>
            Indicates if this object is already disposed.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore" /> class by creating an in-memory
            certificate store.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.ImportPfxFunc">
            <summary>
            Internal Func for unit testing. With singleton implementations unit testing is harder with mocks.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.Instance">
            <summary>
            Instance of InMemoryCertificateStore
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.AddOrGetCertificate(System.Byte[])">
            <summary>
            Gets the certificate if its in the in-memory cert store. If it is not present then it adds it to the store.
            It also Validate that the certificate has the private key and re-creates the cert if the PrivateKey API throws a CryptographicException
            </summary>
            <param name="certBytes">Certificate bytes</param>
            <returns>X509Certificate2 object</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.Clear">
            <summary>
            Clears the certificate store
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.GetCert(System.String)">
            <summary>
            Gets the certificates in this container using thumbprint.
            </summary>
            <param name="thumbprint">The thumbprint of a certificate</param>
            <returns>The certificate.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.RemoveCert(System.String)">
            <summary>
            Remove a certain cert with thumbprint and return true if removed.
            </summary>
            <param name="thumbprint">The thumbprint of a certificate</param>
            <returns>Return true if removed.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.ImportFromPfx(System.Byte[],System.String)">
            <summary>
            Imports certificates from the specified PFX into this certificate container.
            </summary>
            <param name="pfxBytes">Byte array of the PFX to be imported.</param>
            <param name="pfxPassword">Password of the PFX to be imported.</param>
            <returns>X509Certificate2 object</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.Dispose">
            <summary>
            Dispose the certificate container object
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.InMemoryCertificateStore.Dispose(System.Boolean)">
            <summary>
            Dispose the certificate container object
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ConfigurationManagedServiceIdentityProvider">
            <summary>
            Class that respresents Managed Service Identity provider using configuration
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.ConfigurationManagedServiceIdentityProvider.configuration">
            <summary>
            Authentication client configuration
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.ConfigurationManagedServiceIdentityProvider.msiName">
            <summary>
            Msi name
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ConfigurationManagedServiceIdentityProvider.#ctor(System.String,Microsoft.WindowsAzure.Security.Authentication.Contracts.IAuthenticationClientConfiguration)">
            <summary>
            Creates an instance of the ConfigurationManagedServiceIdentityProvider class
            </summary>
            <param name="msiName">Msi name</param>
            <param name="configuration">Client configuration</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ConfigurationManagedServiceIdentityProvider.GetManagedServiceIdentityCredential">
            <summary>
            Gets the Managed Service Identity credentials by reading configuration
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper">
            <summary>
            Class which wraps the native crypto calls
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums">
            <summary>
            The value for members of all the enums directly come from the corresponding defines in unmanaged code
            ***IMPORTANT***: Do NOT change the values ***
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.PfxImportFlags">
            <summary>
            See description for dwFlags parameter of PFXImportCertStore Win32 API
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.PfxExportFlags">
            <summary>
            See description for dwFlags parameter of PFXExportCertStoreEx Win32 API
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.KeyBlobType">
            <summary>
            See description for dwBlobType parameter of CryptImportKey/CryptExportKey Win32 API.
            We have defined only those blob types that we want to use for our purposes...
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.KeyBlobType.SIMPLEBLOB">
            <summary>
            Symmetric Key is encrypted with a public-private key pair
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.KeyBlobType.SYMMETRICWRAPKEYBLOB">
            <summary>
            Symmetric Key is encrypted with another symmetric key
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.KeyBlobType.PLAINTEXTKEYBLOB">
            <summary>
            Any key exported in clear, use with CAUTION
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.ImportCapiKeyBlobFlags">
            <summary>
            See description for dwFlags parameter of CryptImportKey Win32 API.
            We have defined only those flags that we want to use for our purposes...
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.ExportCapiKeyBlobFlags">
            <summary>
            See description for dwFlags parameter of CryptExportKey Win32 API.
            We have defined only those flags that we want to use for our purposes...
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.CertOpenStoreFlags">
            <summary>
            See description for dwFlags parameter of CertOpenStore Win32 API.
            We have defined only those flags that we want to use for our purposes...
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.CryptGenKeyFlags">
            <summary>
            See description for dwFlags parameter of CryptGenKey Win32 API.
            We have defined only those flags that we want to use for our purposes...
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.AddCertificateLinkDisposition">
            <summary>
            See description for dwAddDisposition parameter of CertAddCertificateLinkToStore Win32 API.
            We have defined only those values that we want to use for our purposes...
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.CryptProviderType">
            <summary>
            See description for dwProvType parameter of CryptAcquireContext Win32 API.
            We have defined only those values that we want to use for our purposes...
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.CryptAcquireContextFlags">
            <summary>
            See description for dwFlags parameter of CryptAcquireContext Win32 API.
            We have defined only those values that we want to use for our purposes...
            </summary>
            [Flags]
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DefaultSmartCardCertificateSelector">
            <summary>
            Default CertificaticateSelector
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DefaultSmartCardCertificateSelector.SelectCertificate(System.String,System.Uri,System.Uri)">
            <summary>
            Defines custom certification selection logic.
            Realm name and applies to parameters help in remembering which certificate to use for which realm and service account. 
            </summary>
            <param name="message">Message associated with federation url on Dsts. For example "Please use smart card for authentication"</param>
            <param name="realmName">Realm name for which token is requested.</param>
            <param name="appliesTo">For which service account the token is requested</param>
            <returns>The certificate to be used </returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DefaultSmartCardCertificateSelector.SelectCertificate(System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2},System.String)">
            <summary>
            Show UI for selecting a certificate.
            </summary>
            <param name="candidateCertificates"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DefaultSmartCardCertificateSelector.PromptForCertificateInstallation">
            <summary>
            Show UI to allow the user to install a new certificate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DefaultSmartCardCertificateSelector.GetCandidateCertificates">
            <summary>
            Get a list of candidate certificates.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DiscoveryMetadata">
            <summary>
            DiscoveryMetadata
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DiscoveryMetadata.SelfFederationGroups">
            <summary>
            Groups to require SelfFederation
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DsmsManagedServiceIdentityCredential">
            <summary>
            DsmsManagedServiceIdentityCredential class that supports automatic rollover of managed service identities
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.DsmsManagedServiceIdentityCredential.CredentialsCache">
            <summary>
            This is a cache for the msi credentials. This ensures that there is a static root for all msi credentials created and that reference is not lost 
            after the credentials are created. Also improves performance when caller repeatedly calls get msi credentials.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DsmsManagedServiceIdentityCredential.MsiCredential">
            <summary>
            Gets the MSI Credential
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DsmsManagedServiceIdentityCredential.GetManagedServiceIdentityCredential(System.String)">
            <summary>
            Gets the MSI Credential for a given MSI name
            </summary>
            <param name="msiName">MSI name</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DsmsManagedServiceIdentityProvider">
            <summary>
            Represents the class that provides the Managed Service Identity using Dsms
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DsmsManagedServiceIdentityProvider.GetManagedServiceIdentityCredential">
            <summary>
            Gets the Managed Service Identity credentials
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DstsCertificateCache">
            <summary>
            Represents a persistent dSTS certificate cache in the cert store.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DstsCertificateCache.SigningKeysCertificateStoreName">
            <summary>
            Name of certificate store where signing certs will be cached
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsCertificateCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DstsCertificateCache"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsCertificateCache.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DstsCertificateCache"/> class.
            <param name="storeName">Certificate store name to use</param>
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsCertificateCache.RefreshOrAddItems(System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Adds a new entry or updates the existing certificates in the cache.
            </summary>
            <param name="certificates">The list of certificates.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsCertificateCache.GetAllItems">
            <summary>
            Get all items in cache
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsCertificateCache.Clear">
            <summary>
            Clears the entire certificate cache in the registry.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DstsFederationMetadataRetryPolicy">
            <summary>
            Represents the security token service retry policy.
            </summary>
            <remarks>
            The dSTS federation metadata retry policy:
            - Try up to 3 times.
            - The initial timeout is 10s. For each Exception, add 10s to the timeout.
              Retry on all exceptions. 
            </remarks>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.DstsFederationMetadataRetryPolicy.MaxNumberOfTrial">
            <summary>
            The maximum number of trial.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.DstsFederationMetadataRetryPolicy.WaitTimeInSeconds">
            <summary>
            The wait time before retrying if waiting is necessary.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.DstsFederationMetadataRetryPolicy.InitialTimeoutInSeconds">
            <summary>
            The initial timeout used when requesting a federation metadata.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ExpiringClaimsAuthenticationManager">
            <summary>
            Allows services to filter claims coming from JIT for expiration before overall token expiration.
            JIT sets claim value of form ClaimValue::StartTimestamp::EndTimestamp::RequestID to indicate a claim that will expire
            and will only set such claims for services that support this filtering.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.ExpiringClaimsAuthenticationManager.StartTimePropertyKey">
            <summary> Start time of claim validity </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.ExpiringClaimsAuthenticationManager.ExpirationTimePropertyKey">
            <summary> Expiration time of claim </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.ExpiringClaimsAuthenticationManager.expectedExpiringClaimFields">
            <summary>
            Expiring claims take the format Claim:StartTimestamp:EndTimestamp:RequestID as set by JIT </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ExpiringClaimsAuthenticationManager.Authenticate(System.String,Microsoft.IdentityModel.Claims.IClaimsPrincipal)">
            <summary>
            Filter claims for expiring claims.
            </summary>
            <param name="resourceName">he address of the resource that is being requested.</param>
            <param name="incomingPrincipal">The claims principal that represents the authenticated user that is attempting to access the resource.</param>
            <returns>Update IClaimsPrincipal with expired claims removed, and non-expired claims stripped of their expiry info</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ExpiringClaimsAuthenticationManager.FilterExpiringClaims(Microsoft.IdentityModel.Claims.IClaimsPrincipal)">
            <summary>
            Filter claims for expiring claims.
            </summary>
            <param name="incomingPrincipal">The claims principal that represents the authenticated user that is attempting to access the resource.
            This is updated with expired claims removed, and non-expired claims stripped of their expiry info</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ExpiringClaimsAuthenticationManager.IsWithinTimeContraints(System.String,System.String)">
            <summary>
            Check if claim is still within its time constraints
            </summary>
            <param name="startTimeTicks">Start time of claim validity in UTC ticks</param>
            <param name="expirationTimeTicks">Expiration time of claim in UTC ticks</param>
            <returns>true if claim is within time constraints plus grace period, false otherwise</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ExpiringClaimsAuthenticationManager.IsSuperUserClaim(System.String,System.String)">
            <summary>
            Check if type value is a super user claim.
            </summary>
            <param name="type">Claim type</param>
            <param name="value">Claim value</param>
            <returns>true if super user claim, false otherwise</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.FederationMetadataEndpointResponseException">
            <summary>
            Custom Exception class when Federation Metadata Endpoint response is not as expected
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.FederationMetadataEndpointResponseException.#ctor">
            <summary>
            Constructing the class
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.FederationMetadataEndpointResponseException.#ctor(System.String)">
            <summary>
            Constructing the class
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.FederationMetadataEndpointResponseException.#ctor(System.String,System.Exception)">
            <summary>
            Constructing the class
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.GetSigningCertificates.GetDstsSigningCertificates">
            <summary>
            This class exposes functionality for clients to call into and get the signing certificates
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.GetSigningCertificates.GetDstsSigningCertificates.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.GetSigningCertificates.GetDstsSigningCertificates.GetSigningCertificates(System.String)">
            <summary>
            Fetches the signing certificates from home dsts using its federation metadata
            </summary>
            <param name="homeDsts">Home Dsts for the service which is calling this api</param>
            <returns>Array of signing certificates.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.GetSigningCertificates.IGetSigningCertificates">
            <summary>
            Defining contract of getting signing certificates
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.GetSigningCertificates.IGetSigningCertificates.GetSigningCertificates(System.String)">
            <summary>
            Fetches the signing certificates from home dsts using its federation metadata
            </summary>
            <param name="homeDsts">Home Dsts for the service which is calling this api</param>
            <returns>Array of signing certificates.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.HttpRequestWrapper">
            <summary>
            Wrapper class over http request method
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.HttpRequestWrapper.GetResponse(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Get the response from the endpoint
            </summary>
            <param name="endpoint">The endpoint from where to get the response</param>
            <param name="serviceIdentity">A semicolon-delimited string consisting of the service's audience URIs</param>
            <param name="trustedCertificates">The list of certificates which are trusted</param>
            <returns>Tuple containing the http status code and response string</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IManagedServiceIdentityProvider">
            <summary>
            Defines an interface which helps query the client credentials for managed service identity
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IManagedServiceIdentityProvider.GetManagedServiceIdentityCredential">
            <summary>
            Gets the Managed Service Idenity credentials
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IRequestClient">
            <summary>
            Contract for Request for web response
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IRequestClient.GetResponse(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Get the response from the endpoint
            </summary>
            <param name="endpoint">The endpoint from where to get the response</param>
            <param name="serviceIdentity">A semicolon-delimited string consisting of the service's audience URIs</param>
            <param name="trustedCertificates">The list of certificates which are trusted</param>
            <returns>Tuple containing the http status code and response string</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ITimer">
            <summary>
            Timer need to be mocked for Unit Tests. 
            </summary>
        </member>
        <member name="E:Microsoft.WindowsAzure.Security.Authentication.ITimer.Tick">
            <summary>
            Delegate for callback
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ITimer.Change(System.TimeSpan,System.TimeSpan)">
            <summary>
            Changes the start time and the interval between method invocations for a time. Similar to System.Threading.Timer
            </summary>
            <param name="dueTime">A TimeSpan representing the amount of time to delay before invoking the callback method specified when the Timer was constructed</param>
            <param name="period">The time interval between invocations of the callback method specified when the Timer was constructed</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ITimer.Change(System.Int32,System.Int32)">
            <summary>
            Changes the start time and the interval between method invocations for a time. Similar to System.Threading.Timer
            </summary>
            <param name="dueTime">The amount of time to delay before the invoking the callback method specified when the Timer was constructed, in milliseconds</param>
            <param name="period">The time interval between invocations of the callback method specified when the Timer was constructed, in milliseconds</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ManagedNativeCrypt.GetX509StoreAndCloseStoreHandle(Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.SafeHandles.CertStoreSafeHandle)">
            <summary>
            Gets the X509Store and closes the store handle
            </summary>
            <param name="storeHandle">Store handle</param>
            <returns>X509Store object</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ManagedNativeCrypt.ImportPfxBlob(System.Byte[],System.String,Microsoft.WindowsAzure.Security.Authentication.CryptNativeWrapper.Enums.PfxImportFlags)">
            <summary>
            Imports the pfx blob and returns the store handle that must be disposed by the caller
            </summary>
            <param name="pfxBytes">The raw pfx bytes</param>
            <param name="pfxPassword">
            Password for the pfx blob. This is not SecureString since that doesn't interop with unmanaged
            </param>
            <param name="importFlags">Flags that specialize the behavior of the import. See the standard
            win32 API PFXImportCertStore for the meaning of the values</param>
            <returns>Store handle for the temporary store created by the win32 PFXImportCertStore API</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ManagedNativeCrypt.CreateInMemoryCertificateStore">
            <summary>
            Creates an in-memory certificate store
            </summary>
            <returns>X509Store object</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ManagedNativeCrypt.AddCertificateLinkToStore(System.Security.Cryptography.X509Certificates.X509Store,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            The CertAddCertificateLinkToStore function adds a link in a certificate store to a certificate context in a different store. 
            Instead of creating and adding a duplicate of the certificate context, this function adds a link to the original certificate.
            </summary>
            <param name="certStore">X509Store store</param>
            <param name="certLinkToAdd">X509Certificate2 certificate</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentityCredential">
            <summary>
            Implements the IManagedServiceIdentityCredential interface
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentityCredential.Name">
            <summary>
            Gets or sets MSI Name
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentityCredential.ClientHomeStsList">
            <summary>
            Gets or sets Client STS list
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentityCredential.ServiceIdentityCredentials">
            <summary>
            Gets or sets Service credentials
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentityExecutor">
            <summary>
            Represents the executor of Managed Service Identity credentials
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentityExecutor.Execute(System.Action{Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential},Microsoft.WindowsAzure.Security.Authentication.IManagedServiceIdentityProvider)">
            <summary>
            Executes a action using the credentials provided by IManagedServiceIdentityProvider
            Each of the credentials are tried if there is a SecurityTokenIssuanceException
            </summary>
            <param name="action">The specified action.</param>
            <param name="provider">Managed Service Identity provider</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentityExecutor.IsMessageSecurityException(System.Exception)">
            <summary>
            Looks through all the inner exceptions to find MessageSecurityException
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentityStsProxy">
            <summary>
            Represents a security token service that retries with all credentials associated with a Managed Service Identity
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.NoSigningCertificatesFoundException">
            <summary>
            Custom Exception class when no signing certificates are found
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.NoSigningCertificatesFoundException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.NoSigningCertificatesFoundException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.NoSigningCertificatesFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.RequestMetadataBehavior">
            <summary>
            EndpointBehavior to add custom http headers to outgoing requests.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IConnectionGroup">
            <summary>
            Identifies a connection group managed by the service point manager.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IConnectionGroup.Name">
            <summary>
            Gets the name of the connection group.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.NamespaceExpandingSubjectAlternativeNameProvider">
            <summary>
            SubjectAlternativeNameProvider that expands the SANs provided by an inner provider with a user configured list.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManagerSettings">
            <summary>
            Settings for RevokeClaimsAuthenticationManager
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManagerSettings.#ctor(System.String)">
            <summary>
            Create an instance of RevokeClaimsAuthenticationManagerSettings
            </summary>
            <param name="msiName">Msi name for the client</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManagerSettings.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType,Microsoft.WindowsAzure.Security.Authentication.ClientHomeSts)">
            <summary>
            Create an instance of RevokeClaimsAuthenticationManagerSettings
            </summary>
            <param name="clientCertificate">X509Certificate2 certificate for the client</param>
            <param name="credentialType">Credential type</param>
            <param name="clientHomeSts">ClientHomeSts value</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManagerSettings.MsiName">
            <summary>
            Msi name for the client
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManagerSettings.ClientCertificate">
            <summary>
            Client X509Certificate 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManagerSettings.ClientHomeSts">
            <summary>
            Client home sts
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManagerSettings.CertCredentialType">
            <summary>
            Client X509Certificate credential type
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManagerSettings.Enabled">
            <summary>
            RevokeClaimsAuthenticationManager can be disabled by setting to false. Default is set to true.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManagerSettings.SrsServiceUri">
            <summary>
            SRS address to be used. This should only be used when you want to override SRS address from dsts AL.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManagerSettings.UnitTestMode">
            <summary>
            Unit test mode
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManager">
            <summary>
            Extension of the ClaimAuthenticationManager class to revoke incoming claims using the Security Response Service (SRS) metadata.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManager.#cctor">
            <summary>
            static constructor
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManager.#ctor(Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManagerSettings,System.String)">
            <summary>
            Creates an instance of RevokeClaimsAuthenticationManager
            </summary>
            <param name="revokeClaimsAuthenticationManagerSettings">RevokeClaimsAuthenticationManagerSettings object</param>
            <param name="homeDsts">Server home dsts</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManager.Authenticate(System.String,Microsoft.IdentityModel.Claims.IClaimsPrincipal)">
            <summary>
            Revoke Claims using the Security Response Service metadata
            </summary>
            <param name="resourceName">Target Resource Request Url</param>
            <param name="incomingPrincipal">Incoming Claims Principal object</param>
            <returns>IClaimsPrincipal object after revocation</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.RevokeClaimsAuthenticationManager.RevokeClaims(System.String,Microsoft.IdentityModel.Claims.IClaimsPrincipal)">
            <summary>
            Revoke Claims using the Security Response Service metadata
            </summary>
            <param name="resourceName">Target Resource Request Url</param>
            <param name="incomingPrincipal">Incoming Claims Principal object</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.DstsAuthenticationRequestBroker">
            <summary>
            This class implements the authentication request broker which handles dSTS authentication process on the given request
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.DstsAuthenticationRequestBroker.#ctor(System.String)">
            <summary>
            constructs an instance of AuthenticationRequestBroker
            </summary>
            <param name="serviceIdentityName">the managed service identity name for current executing service</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.DstsAuthenticationRequestBroker.#ctor(System.String,Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.IClientAccessFactory)">
            <summary>
            constructs an instance of AuthenticationRequestBroker
            </summary>
            <param name="serviceIdentityName">the managed service identity name for current executing service</param>
            <param name="clientAccessFactory">client access factory</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.DstsAuthenticationRequestBroker.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts)">
            <summary>
            constructs an instance of AuthenticationRequestBroker
            </summary>
            <param name="certificate">the X509 certificate as service credential</param>
            <param name="certCredentialType">cert credential type</param>
            <param name="clienthomeSts">the optional client home STS</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.DstsAuthenticationRequestBroker.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType,Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.IClientAccessFactory,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts)">
            <summary>
            constructs an instance of AuthenticationRequestBroker
            </summary>
            <param name="certificate">the X509 certificate as service credential</param>
            <param name="certCredentialType">cert credential type</param>
            <param name="clientAccessFactory">the client access factory</param>
            <param name="clienthomeSts">the optional client home STS</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.DstsAuthenticationRequestBroker.SendRequestAsync(System.String,System.Net.Http.HttpRequestMessage)">
            <summary>
            Sends dSTS authenticated request
            </summary>
            <param name="serviceName">the current executing service name</param>
            <param name="request">the request being sent</param>
            <returns>an instance of response</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.ClientAccessFactory">
            <summary>
            This class provides default implementation of IClientAccessFactory
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.ClientAccessFactory.CreateClientCredential(System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType)">
            <summary>
            Create client credential from the given certificate
            </summary>
            <param name="certificate">the service certificate</param>
            <param name="certCredentialType">cert credential type</param>
            <returns>an instance of client credential</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.ClientAccessFactory.CreateClientCredential(System.String)">
            <summary>
            Create client credential from the given service identity name
            </summary>
            <param name="serviceIdentityName">the service MSI name</param>
            <returns>an instance of client credential</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.ClientAccessFactory.CreateWebAuthenticationClient(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts)">
            <summary>
            Create web authentication client
            </summary>
            <param name="clientCredential">the MSI identity name</param>
            <param name="clientHomeSts">client home sts</param>
            <returns>an instance of web authentication client</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.ClientAccessFactory.CreateClientForOutgoingRequest">
            <summary>
            Create client for making outgoing request
            </summary>
            <returns>an instance of Http client</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.IClientAccessFactory">
            <summary>
            This interface provides an abstraction for creating set of client accessor
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.IClientAccessFactory.CreateClientCredential(System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType)">
            <summary>
            Create client credential from the given certificate
            </summary>
            <param name="certificate">the service certificate</param>
            <param name="certCredentialType">cert credential type</param>
            <returns>an instance of client credential</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.IClientAccessFactory.CreateClientCredential(System.String)">
            <summary>
            Create client credential from the given service identity name
            </summary>
            <param name="serviceIdentityName">the service MSI name</param>
            <returns>an instance of client credential</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.IClientAccessFactory.CreateWebAuthenticationClient(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts)">
            <summary>
            Create web authentication client
            </summary>
            <param name="clientCredential">the client credential</param>
            <param name="clientHomeSts">client home STS</param>
            <returns>an instance of web authentication client</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.IClientAccessFactory.CreateClientForOutgoingRequest">
            <summary>
            Create client for making outgoing request
            </summary>
            <returns>an instance of Http client</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.InputResponseMessage">
            <summary>
            This class wraps the http response message as an instance of IIncomingResponse
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.InputResponseMessage.#ctor(System.Net.Http.HttpResponseMessage)">
            <summary>
            constructs an instance of InputResponseMessage
            </summary>
            <param name="response">the HTTP response message</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.InputResponseMessage.StatusCode">
            <summary>
            Gets the status code
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.InputResponseMessage.WwwAuthenticateHeader">
            <summary>
            Gets the authentication header
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.OutputRequestMessage">
            <summary>
            This class wraps the http request message into an instance of IOutgoingRequest
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.OutputRequestMessage.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            constructs an instance of OutputRequestMessage
            </summary>
            <param name="request">the HTTP Request message</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.OutputRequestMessage.AuthorizationHeader">
            <summary>
            Gets or sets the authenticastion header
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.OutputRequestMessage.ConfigureServiceCertificates(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator,System.IDisposable@)">
            <summary>
            Configure service certificate
            </summary>
            <param name="serviceCertificateValidator">the service certificate validator</param>
            <param name="requestContext">the request context</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.SecurityResponseTraceUtility">
            <summary>
            This class implements ITraceUtility to produce trace from SRS Client and share the same log output as dSTS AL
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.SecurityResponseTraceUtility.TraceErrorMessage(System.String,System.Exception,System.String)">
            <summary>
            Trace the error message
            </summary>
            <param name="message">the error message being logged</param>
            <param name="exception">any exception that caused the failure</param>
            <param name="operationName">the operation name</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.SecurityResponseTraceUtility.TraceInfoMessage(System.String,System.String)">
            <summary>
            Trace the information message
            </summary>
            <param name="message">the informational message being logged</param>
            <param name="operationName">the operation name</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityResponse.SecurityResponseTraceUtility.TraceWarnMessage(System.String,System.String)">
            <summary>
            Trace warning message
            </summary>
            <param name="message">the warning message being logged</param>
            <param name="operationName">the operation name</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ServiceAuthenticationMetadataFactory">
            <summary>
            Represents a factory that creates authentication metadata for services.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DstsAddressProvider">
            <summary>
            Provides different dSTS addresses.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.GullibleIssuerNameRegistry">
            <summary>
            Represents an issuer name registry that accepts any issuers. The issuer certificate
            should be checked separately by the certificate validator.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.GullibleIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)">
            <summary>
             Returns the issuer Name from the security token.
            </summary>
            <param name="securityToken">The security token that contains the STS's certificates.</param>
            <returns>The name of the issuer who signed the security token.</returns>
            <remarks>
            This overload is never called for SAML tokens; it's only called for things like X.509 TLS 
            client certificates, where no issuer name is available.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.GullibleIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)">
            <summary>
            Returns the name of the issuer of the specified security token.
            </summary>
            <param name="securityToken">
            A <see cref="T:System.IdentityModel.Tokens.SecurityToken"/> that represents the security token for which to return the issuer
            name.
            </param>
            <param name="requestedIssuerName">
            A string that contains an issuer name to consider in the request (for example, the issuer name as
            specified in a SAML token).
            </param>
            <returns>
            A string that contains the trusted issuer name, or <see langword="null"/> if the issuer
            is not recognized.
            </returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IPersistentCache`1">
            <summary>Defines a cache whose contents can be renewed but not expire.</summary>
            <typeparam name="T">The type of values in the cache.</typeparam>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IPersistentCache`1.RefreshOrAddItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a new entry or updates the existing entry in the cache.
            </summary>
            <param name="items">The list of cache items.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IPersistentCache`1.GetAllItems">
            <summary>
            Gets all items in cache
            </summary>
            <returns>All elements in cache</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IPersistentCache`1.Clear">
            <summary>
            Clear all of the cache content.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyChain">
            <summary>
            Represents a signing key chain.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SigningKeyChain.#ctor(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Security.Authentication.SigningKeyNode})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyChain"/> class.
            </summary>
            <param name="nodes">A list of signing keys.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SigningKeyChain.Count">
            <summary>
            Gets the number of signing keys in the chain.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SigningKeyChain.Item(System.Int32)">
            <summary>
            Gets a signing key at a given index in the chain.
            </summary>
            <param name="index">The zero-based index of the signing key.</param>
            <returns>The signing key.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SigningKeyChain.GetEnumerator">
            <summary>
            Gets the enumerator for the list of signing key nodes.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ISigningKeyDiscoveryProxyFactory">
            <summary>
            Defines a factory to create instances of <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ISigningKeyDiscoveryService"/>.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyChainSerializer">
            <summary>
            Contains helper methods to serialize and deserialize instances of <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyChain"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SigningKeyChainSerializer.Serialize(Microsoft.WindowsAzure.Security.Authentication.SigningKeyChain)">
            <summary>
            Serialize the signing key chain.
            </summary>
            <param name="chain">The chain to serialize.</param>
            <returns>The serialized data in a string format.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SigningKeyChainSerializer.Deserialize(System.String,System.String@)">
            <summary>
            Deserialize the signing key chain.
            </summary>
            <param name="serializedData">The serialized data in a string format. The content of the string 
            must be returned by the <see cref="M:Microsoft.WindowsAzure.Security.Authentication.SigningKeyChainSerializer.Serialize(Microsoft.WindowsAzure.Security.Authentication.SigningKeyChain)"/> method.</param>
            <param name="error">The error message if the method fails to deserialize.</param>
            <returns>The signing key chain if the method succeeds, or null if the method fails.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoverySettings">
            <summary>
            Class representing Signing Key Discovery Settings
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoverySettings.MinimumRefreshTimeAllowed">
            <summary>
            Limiting refresh time to minimum 10 minutes. This will reduce chances of services flooding us by paranoid cert renewal checks
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoverySettings.DefaultRefreshTime">
            <summary>
            Default refresh time
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoverySettings.signingKeyRefreshInterval">
            <summary>
             Refresh interval of signing certificate discovery
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoverySettings.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoverySettings" /> class 
            </summary>
            <param name="disableSigningKeyDiscovery">Whether services should automatically retrieve
            the latest signing key chain from dSTS</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoverySettings.DiscoverSigningKeyDuringInitialization">
            <summary>
            Gets or sets a value indicating whether services should discover signing certificate during initialization code. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoverySettings.SigningKeyRefreshInterval">
            <summary>
            Gets or sets a value of how often signing key is discovered. Any value less than MinimumRefreshTimeAllowed is overridden to be MinimumRefreshTimeAllowed. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoverySettings.DisableSigningKeyDiscovery">
            <summary>
            Gets or sets a value indicating whether services should automatically retrieve
            the latest signing key chain from dSTS. 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyNode">
            <summary>
            Represents a node in the signing key chain.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SigningKeyNode.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyNode"/> class.
            </summary>
            <param name="certificate">The public certificate.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SigningKeyNode.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyNode"/> class.
            </summary>
            <param name="certificate">The public certificate.</param>
            <param name="signature">The signature used to verify <paramref name="certificate"/>, 
            signed by the certificate of the next node in the chain</param>
            <param name="signatureAlgorithm">The algorithm used to generate <paramref name="signature"/>.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SigningKeyNode.Certificate">
            <summary>
            Gets the public certificate.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SigningKeyNode.Signature">
            <summary>
            Gets the signature used to verify the public certificate.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SigningKeyNode.SignatureAlgorithm">
            <summary>
            Gets the signature algorithm.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IssuerCertificateConfigurationElement">
            <summary>
            Encapsulates how the issuer certificate validator is configured in the service host.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.IssuerCertificateConfigurationElement.dstsIssuerX509CertificateValidator">
            <summary>
            Ideally there must be a single Datacenterconfiguration instance per service role, that implies single DstsIssuerX509CertificateValidator timer thread to fetch signing certificates.
            However, we see teams are creating new datacenterconfiguration per incoming request. This in turns adds load to DSTS for fetching signing certificates. Making this instance static will help in that.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IssuerCertificateConfigurationElement.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IssuerCertificateConfigurationElement"/> class.
            The instance will configure a simple certificate validator for issuers (dSTS)
            of incoming security tokens.
            </summary>
            <param name="homeDsts">The service's home dSTS. This parameter is used to
            get the known dSTS certificate configured with the service.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IssuerCertificateConfigurationElement.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts,Microsoft.WindowsAzure.Security.Authentication.IPersistentCache{System.Security.Cryptography.X509Certificates.X509Certificate2},Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity,System.Boolean,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IssuerCertificateConfigurationElement"/> class.
            The instance will configure a certificate validator for issuers (dSTS)
            of incoming security tokens. The validator will automatically get the 
            latest signing keys from dSTS.
            </summary>
            <param name="homeDsts">The service's home dSTS. This parameter is used to
            get the known dSTS certificate configured with the service.</param>
            <param name="serviceIdentity"> This parameter is used to get to know service realm</param>
            <param name="signingKeyCache">The cache of dSTS signing key.</param>
            <param name="discoverSigningKeyDuringInitialization">Parameter indicates whether to discover signing cert during initialization</param>
            <param name="signingKeyRefreshInterval">How often to discover signing certificate</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IssuerCertificateConfigurationElement.ApplyConfiguration(Microsoft.IdentityModel.Configuration.ServiceConfiguration)">
            <summary>
            Implements the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IServiceConfigurationElement"/> interface.
            </summary>
            <param name="serviceConfiguration">The service configuration.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistrarLog">
            <summary>Represents a log for a <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistrar"/>.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistrarLog.#ctor(Microsoft.WindowsAzure.Security.Authentication.IEventLog)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistrarLog"/> class.
            </summary>
            <param name="eventLog">The event log to which to write events.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistrarLog.LogReregistered(System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Logs an event indicating that <see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback"/> has been
            re-registered.
            </summary>
            <param name="previousCallback">The previous callback.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistry">
            <summary>
            Represents a certificate validate callback registry, which registers certificate validation callbacks on a
            per-URI basis.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistry.#ctor(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistrar)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistry"/> class.
            </summary>
            <param name="registrar">The registrar through which to register the certificate validation callback.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistry.Instance">
            <summary>Gets the sole instance of this class.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistry.Add(System.Uri,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>Adds the specified callback for the specified URI.</summary>
            <param name="uri">The URI for which to add a callback.</param>
            <param name="callback">The callback to use for certificate validation when the URI is accessed.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistry.Remove(System.Uri,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>Removes the specified callback for the specified URI.</summary>
            <param name="uri">The URI for which to remove a callback.</param>
            <param name="callback">The previously registered certificate validation callback.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistry.Add(System.Net.WebRequest,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Adds the specified callback for the specified web request.
            </summary>
            <param name="request">A comparable reference to the web request.</param>
            <param name="callback">The callback  to use for certification validation when the web request is sent.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistry.Remove(System.Net.WebRequest,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Removes the specified callback for the specified web request.
            </summary>
            <param name="request">A comparable reference to the web request whose previously 
            registered callback should be removed.</param>
            <param name="callback">The previously registered certificate validation callback.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistry.SetInstance(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistry)">
            <summary>For testing purposes, updates the value used for <see cref="P:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistry.Instance"/>.</summary>
            <param name="instance">The instance, or <see langword="null"/> to reset the instance.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistry.Factory">
            <summary>
            Represents a Chain of Responsibility factory for <see cref="T:System.Net.Security.RemoteCertificateValidationCallback"/>.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackRegistry.Factory.Create(System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Creates a <see cref="T:System.Net.Security.RemoteCertificateValidationCallback"/> chained to a previous callback.
            </summary>
            <param name="previousCallback">The previous callback, if any.</param>
            <returns>The <see cref="T:System.Net.Security.RemoteCertificateValidationCallback"/> chained to the previous callback.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackScope">
            <summary>Represents a scope in which a <see cref="T:System.Net.Security.RemoteCertificateValidationCallback"/> is in effect.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackScope.#ctor(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistry,System.Uri,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackScope"/> class.
            </summary>
            <param name="registry">The registry through which to create the scope.</param>
            <param name="uri">The URI to be registered for the scope.</param>
            <param name="callback">The callback to be registered for the scope.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackScope.#ctor(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistry,System.Net.WebRequest,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackScope"/> class.
            </summary>
            <param name="registry">The registry through which to create the scope.</param>
            <param name="request">The web request to be registered for the scope.</param>
            <param name="callback">The callback to be registered for the scope.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackScope.Callback">
            <summary>Gets the callback registered.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackScope.Registry">
            <summary>Gets the registry through which the scope is created.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackScope.Uri">
            <summary>Gets the URI registered for the scope.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackScope.Request">
            <summary>Gets the request registered for the scope.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackScope.Dispose">
            <summary>Un-registers the certificate validation callback.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationHelpers">
            <summary>
            Contains helper methods for the server certificate validators.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationHelpers.ValidatePersistentConnection(System.Uri,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Determines whether a given certificate validation callback would 
            accept the remote certificate of a persistent (cached) connection, 
            if any, to a particular URI. This is needed because WCF/System.Net 
            would reuse any persistent https connection for new requests, 
            which would not invoke the certificate validation callback. We have 
            to validate the persistent connections to ensure the server 
            certificate is trusted.
            </summary>
            <param name="uri">The URI of the server endpoint.</param>
            <param name="validationCallback">The certificate validation callback used 
            to validate the server certificate.</param>
            <returns>true if the validation callback accepts the certificate of 
            any persistent connection; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidationHelpers.GetConnectionUri(System.Uri)">
            <summary>
            Gets the base URI that is used by .NET as the key to look up the persistent
            connection cache. This is actually just the host and port of the original URI.
            </summary>
            <param name="uri">The full URI of the connection.</param>
            <returns>The base URI.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CertificateValidatorScope">
            <summary>Represents a disposable scope containing a registered certificate validator.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidatorScope.Create(System.Uri,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator)">
            <summary>Creates a scope that contains a registered certificate validator.</summary>
            <param name="uri">The URI for which to register the validator.</param>
            <param name="validator">The validator to register.</param>
            <returns>A scope that contains a registered certificate validator.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidatorScope.Create(System.Net.WebRequest,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator)">
            <summary>Creates a scope that contains a registered certificate validator.</summary>
            <param name="webRequest">The web request for which to register the validator.</param>
            <param name="validator">The validator to register.</param>
            <returns>A scope that contains a registered certificate validator.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidatorScope.Create(System.Net.WebRequest,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistry)">
            <summary>Creates a scope that contains a registered certificate validator.</summary>
            <param name="webRequest">The web request for which to register the validator.</param>
            <param name="validator">The validator to register.</param>
            <param name="registry">The registry in which to register.</param>
            <returns>A scope that contains a registered certificate validator.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidatorScope.Create(System.Uri,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistry)">
            <summary>Creates a scope that contains a registered certificate validator.</summary>
            <param name="uri">The URI for which to register the validator.</param>
            <param name="validator">The validator to register.</param>
            <param name="registry">The registry in which to register.</param>
            <returns>A scope that contains a registered certificate validator.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidatorScope.Create(System.Uri,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>Creates a scope that contains a registered remote certificate validation callback.</summary>
            <param name="uri">The URI for which to register the validator.</param>
            <param name="callback">The callback to register.</param>
            <returns>A scope that contains a registered certificate validator.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidatorScope.Create(System.Uri,System.Net.Security.RemoteCertificateValidationCallback,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistry)">
            <summary>Creates a scope that contains a registered remote certificate validation callback.</summary>
            <param name="uri">The URI for which to register the validator.</param>
            <param name="callback">The callback to register.</param>
            <param name="registry">The registry in which to register.</param>
            <returns>A scope that contains a registered certificate validator.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidatorScope.ValidateScope(Microsoft.WindowsAzure.Security.Authentication.CertificateValidationCallbackScope,System.Uri)">
            <summary>
            <para>Validate the server certificate of any persistent (cached) connection to a 
            given target. This ensures that any persistent connection created outside the 
            validation scope has the expected server certificate. If we were not to check the 
            persistent connections, System.Net may reuse the connections and bypass the 
            remote certificate validation callback.</para>
            <para>It is important to validate the persistent connection within
            the validation scope (i.e. after the construction and before 
            the disposal of the scope object). This is to prevent a race condition in which 
            a new connection can be created right after we validate existing connections. 
            By validating within the scope, we ensure that new connections will be 
            also be validated.</para>
            </summary>
            <param name="scope">The scope object used to validate the server certificate.</param>
            <param name="uri">The URI of the target.</param>
            <returns>The certificate validation scope.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CertificateValidatorScopeFactory">
            <summary>Defines a factory that creates certificate validator scopes.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateValidatorScopeFactory.Create(System.Uri)">
            <summary>Creates a certificate validator scope.</summary>
            <param name="endpointAddress">Endpoint to validate.</param>
            <returns>The certificate validator scope created.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ClientCredential">
            <summary>
            Represents a client credential factory.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ClientCredential.CreateWindowsCredential">
            <summary>
            Creates a client credential with the default Windows credential of the current 
            logon session.
            </summary>
            <returns>The client credential.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ClientCredential.CreateX509CertificateCredential(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Creates a client credential with the specified X.509 certificate.
            </summary>
            <param name="certificate">An X.509 certificate.</param>
            <returns>A client credential object.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ClientCredential.CreateX509CertificateCredential(System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType)">
            <summary>
            Creates a client credential with the specified X.509 certificate with specified X509CertCredentialType
            </summary>
            <param name="certificate">An X.509 certificate.</param>
            <param name="x509CredentialType">Represents X509Certifcate CredentialType to specify SubjectNameBased Auth or Classic X509 certificate based auth.</param>
            <returns>A client credential object.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ClientCredential.CreateManagedServiceIdentityCredential(System.String)">
            <summary>
            Creates a client credential with the specified Msi Name
            </summary>
            <param name="msiName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ClientCredential.Create(System.ServiceModel.Description.ClientCredentials)">
            <summary>
            Creates an instance of IClientCredential from the WCF's ClientCredentials object.
            </summary>
            <param name="wcfCredentials">The WCF client credential.</param>
            <returns>The client credentials.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ClientCredential.CreateCertificateCredentials(System.ServiceModel.Description.ClientCredentials,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType)">
            <summary>
            Creates an instance of IClientCredential from the WCF's ClientCredentials object.
            </summary>
            <param name="wcfCredentials">The WCF client credential.</param>
            <param name="credentialType">Hint to perform Auth based on credentialType ex. SubjectNameBasedAuth</param>
            <returns>The client credentials.</returns>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WSTrustClientCredential.CredentialTypeName">
            <summary>
            Gets the display string of the credential type.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WSTrustClientCredential.ApplyCredential(System.ServiceModel.Description.ClientCredentials)">
            <summary>
            Applies the credential to the specified ClientCredentials object, which
            is used to request a security token. 
            </summary>
            <param name="credentials">The ClientCredential member of the 
            WSTrustChannelFactory class.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WSTrustClientCredential.ApplyCredential(Microsoft.IdentityModel.Protocols.WSTrust.WSTrustChannel)">
            <summary>
            Applies the credential to the specified WSTrustChannel object.
            This class provides a default implementation since most of the credential
            types do not need to configure the channel object.
            </summary>
            <param name="channel">The WSTrustChannel object.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WSTrustClientCredential.CreateEndpointAddress(System.Uri)">
            <summary>
            Creates the EndpointAddress for the WS-Trust channel to the 
            security token service.
            </summary>
            <param name="stsEndpoint">The URL of the STS endpoint.</param>
            <returns>The EndpointAddress object.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WSTrustClientCredential.CreateBinding">
            <summary>
            Creates a client binding for the credential.
            </summary>
            <returns>The binding for the credential.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WSTrustClientCredential.Equals(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential)">
            <summary>
            Indicates whether the current <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential"/> is equal to another
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential"/>.
            </summary>
            <param name="other">A client credential to compare with this client credential.</param>
            <returns>Returns <see langword="true"/> if the current object is equal to the other parameter; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WindowsWSTrustClientCredential.#ctor">
            <summary>
            Initializes a new instance of the WindowsWSTrustClientCredential class.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WindowsWSTrustClientCredential.FullyQualifiedDomainName">
            <summary>
            Gets the fully qualified Windows domain name.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WindowsWSTrustClientCredential.CreateEndpointAddress(System.Uri)">
            <summary>
            Creates the EndpointAddress for the WS-Trust channel to the 
            security token service. When the client is using Windows credential
            to talk to ADFS, WCF constructs the SPN based on the DNS resolution.
            If supplied DNS name of the endpoint is a CNAME alias, WCF would derive an 
            incorrect SPN from the resolved DNS name (e.g. adfsint.gtm.corp.microsoft.com)
            instead of from the supplied DNS name (e.g. corp.sts.microsoft.com).
            To workaround this issue, we set the SPN explicitly.
            </summary>
            <param name="stsEndpoint">The URL of the STS endpoint.</param>
            <returns>The EndpointAddress object.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WindowsWSTrustClientCredential.Equals(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential)">
            <summary>
            Indicates whether the current <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential"/> is equal to another
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential"/>.
            </summary>
            <param name="other">A client credential to compare with this client credential.</param>
            <returns>Returns <see langword="true"/> if the current object is equal to the other parameter; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WindowsWSTrustClientCredential.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>Returns <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the current
            <see cref="T:System.Object"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WindowsWSTrustClientCredential.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WindowsWSTrustClientCredential.GetCurrentDomainName">
            <summary>
            Gets the domain name of the current user (the security principal
            underwhich the current thread is running).
            </summary>
            <returns>The fully qualified domain name.</returns>
            <remarks>Unit tests can override this method.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateWSTrustClientCredential.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Initializes a new instance of the CertificateWSTrustClientCredential class
            with a specified certificate.
            </summary>
            <param name="certificate">The certificate that has a private key.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateWSTrustClientCredential.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType)">
            <summary>
            Initializes a new instance of the CertificateWSTrustClientCredential class
            with a specified certificate.
            </summary>
            <param name="certificate">The certificate that has a private key.</param>
            <param name="x509CredentialType">Represents X509Certifcate CredentialType to specify SubjectNameBased Auth or Classic X509 certificate based auth.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.CertificateWSTrustClientCredential.X509CredentialType">
            <summary>
            Represents X509Certifcate CredentialType to be used in conjeunction with CertificateWSTrustClientCredential
            to differentiate b/n SubjectNameBased Auth and Classic X509 certificate based auth
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateWSTrustClientCredential.Equals(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential)">
            <summary>
            Indicates whether the current <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential"/> is equal to another
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential"/>.
            </summary>
            <param name="other">A client credential to compare with this client credential.</param>
            <returns>Returns <see langword="true"/> if the current object is equal to the other parameter; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateWSTrustClientCredential.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>Returns <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the current
            <see cref="T:System.Object"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CertificateWSTrustClientCredential.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IssuedTokenWSTrustClientCredential.#ctor(System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Initializes a new instance of the IssuedTokenWSTrustClientCredential class
            with a specified security token.
            </summary>
            <param name="issuedToken">The security token.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IssuedTokenWSTrustClientCredential.IssuedToken">
            <summary>
            Gets the security token associated with the credential.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IssuedTokenWSTrustClientCredential.Equals(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential)">
            <summary>
            Indicates whether the current <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential"/> is equal to another
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential"/>.
            </summary>
            <param name="other">A client credential to compare with this client credential.</param>
            <returns>Returns <see langword="true"/> if the current object is equal to the other parameter; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IssuedTokenWSTrustClientCredential.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>Returns <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the current
            <see cref="T:System.Object"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IssuedTokenWSTrustClientCredential.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentityClientCredential.MsiName">
            <summary>
            Unique name for the MSI
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentityClientCredential.#ctor(System.String)">
            <summary>
            Initializes a new instance of ManagedServiceIdentityClientCredential class
            </summary>
            <param name="msiName">Msi name</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentityClientCredential.Equals(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential)">
            <summary>
            Indicates whether the current <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential"/> is equal to another
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential"/>.
            </summary>
            <param name="other">A client credential to compare with this client credential.</param>
            <returns>Returns <see langword="true"/> if the current object is equal to the other parameter; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ManagedServiceIdentityClientCredential.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>Returns <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the current
            <see cref="T:System.Object"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType">
            <summary>
            Represents X509Certifcate CredentialType to be used in conjunction with CertificateWSTrustClientCredential
            to differentiate b/n SubjectNameBased Auth and Classic X509 certificate based auth
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType.CertificateCredential">
            <summary>
            Represents classic x509 Certifcate based Authentication, meaning the sts authenticates the client with it's certificate.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType.SubjectNameCredential">
            <summary>
            Represents SubjectName based Authentication, meaning the sts authenticates the client based on the SubjectName/Dns in the cetificate and not the certificate itself.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ClientCredentialEqualityComparer">
            <summary>Represents an <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for an <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential"/>.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ClientStsCertificateValidator">
            <summary>Represents validator for a client's home STS.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ClientHomeSts">
            <summary>
            Represents the client's home STS information.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ClientHomeSts.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ClientHomeSts"/> class with a security token service endpoint
            address.
            </summary>
            <param name="stsEndpoint">The URL of the security token service endpoint.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ClientHomeSts.#ctor(System.Uri,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ClientHomeSts"/> class with a realm name and a security token
            service endpoint address.
            </summary>
            <param name="realmName">The realm name of the client's STS.</param>
            <param name="stsEndpoint">The URL of the security token service endpoint.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ClientHomeSts.RealmName">
            <summary>
            Gets the realm name of the client's STS.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ClientHomeSts.StsEndpoint">
            <summary>
            Gets the security token service endpoint address of the client's STS.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Clock">
            <summary>Represents a clock.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.Clock.Instance">
            <summary>
            Gets or sets the singleton clock. This property should
            only be modified by unit tests.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CommunicationHelpers">
            <summary>
            Represents shared helpers dealing with communication objects.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CommunicationHelpers.CloseCommunicationObject(System.ServiceModel.ICommunicationObject)">
            <summary>
            Closes the communication object safely. This addresses the limitation of 
            ChannelFactory.Dispose() implementation which could throw an exception.
            </summary>
            <param name="communicationObject">The communication object.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CompleteWebAuthenticationContext">
            <summary>
            Represents a complete web authentication context.
            </summary>
            <remarks>The web security token of a complete context is expected to be valid.
            If the client fails to authenticate with a complete context, it must get a new
            security token with a call to WebAuthenticationClient.OnUnauthorized.
            A complete context is guaranteed to be thread-safe.
            See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IncompleteWebAuthenticationContext"/> for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CompleteWebAuthenticationContext.#ctor(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.CompleteWebAuthenticationContext"/> class
            from an existing web authentication context.
            </summary>
            <param name="context">The existing web authentication context.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ConfigurationConstants">
            <summary>
            Represents constants used in the configuration file.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.ConfigurationConstants.SigningKeyDiscoveryKey">
            <summary>
            The name of a service setting whose value determines whether the service 
            should register an issuer certificate validator that automatically
            gets the latest signing key chain from dSTS. 
            Possible setting values are: 'enabled' and 'disabled' (default). 
            See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration"/>
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.ConfigurationConstants.SigningKeyCertificateStoreName">
            <summary>
            The name of a service setting whose value specifies the certificate store
             containing cached dSTS certificate certificates.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.ConfigurationConstants.SigningKeyRefreshIntervalInMinutesKey">
            <summary>
            The interval (in minutes) between calls to GetSigningKeyChain in the background.
            See <seealso cref="T:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator"/>.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.ConfigurationConstants.DiscoverSigningKeyDuringInitialization">
            <summary>
            Switch to enable/disable discovery of signing keys during initialization
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CrossDatacenterStsProxyChain">
            <summary>
            Implements a proxy chain between proxies of two datacenter 
            security token services (dSTS's).
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CrossDatacenterStsProxyChain.#ctor(System.Uri,Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenService,Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenService)">
            <summary>
            Initializes a new instance of the CrossDatacenterStsProxyChain class.
            </summary>
            <param name="serverRealmName">The realm name of the server's STS as it is registered
            on the client's STS.</param>
            <param name="clientSts">The client's security token service.</param>
            <param name="serverSts">The server's security token service.</param>
            <remarks>The chain first requests a realm token from the STS <paramref name="clientSts"/> 
            for the realm <paramref name="serverRealmName"/>. Then, it uses the realm token to 
            request a service token from the STS <paramref name="serverSts"/>.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.CrossDatacenterStsProxyChain.Issue(Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Issues a security token with server certificates.
            </summary>
            <param name="request">The security token request object.</param>
            /// <param name="requestMetadata">Dictionary containing custom request metadata.</param>
            <returns>The security token response containing the requested security 
            token and an optional list of one or more server certificates.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CustomFederationQueryProxy">
            <summary>
            Represents a proxy with custom configuration to query federation URLs.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.CustomStsProxy">
            <summary>
            Represents a proxy to STS with custom configurations.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceCertificateValidator">
            <summary>
            Represents a factory to create validators for SSL certificates of datacenter
            services. Clients authenticate to these services through dSTS.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceCertificateValidator.Create(Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceResponse,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata)">
            <summary>
            Creates a new instance of the validator from the Request for Security Token 
            Response (RSTR) returned by dSTS.
            </summary>
            <param name="tokenResponse">The security token response.</param>
            <param name="serviceDnsName">The DNS or IP address of the service. Default is null and if not set, IP only cert validation will not be available.</param>
            <param name="metadata">Authentication metadata used to verify service in IP address cases. Default is null and if not set, IP only cert validation will not be available.</param>
            <returns>The validator of service certificates.</returns>
            <remarks>
            If there is a non-empty list of server certificates in the RSTR, the
            method returns a validator that matches the remote SSL certificate with one of 
            the server certificates. If there is no server certificate in the RSTR, and the
            serviceDns name is an IP address the method returns a ServiceIpOnlyCertificateValidator,
            otherwise returns a singleton of <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IgnorableCertificateValidator"/>.
            This validator returns the default PKI validation result and is ignored by the 
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.RoutingCertificateValidator`1"/> class.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceCertificateValidator.Create(Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceResponse)">
            <summary>
            Creates a new instance of the validator from the Request for Security Token 
            Response (RSTR) returned by dSTS.
            </summary>
            <param name="tokenResponse">The security token response.</param>
            <remarks>
            Backwards compatibility version of Create.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebServiceAuthorizationManager">
            <summary>
            Represents the service authorization manager for services in the datacenter.
            </summary>
            <remarks>
            There are three ways server applications can extend the behavior of this class:
            1. Derive from <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator"/> and pass a custom token authenticator
            to construct <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebServiceAuthorizationManager"/>.
            2. Configure the SecurityTokenHandler, ClaimsAuthenticationManager, and 
            ClaimsAuthorizationManager, IssuerNameRegistry, and other properties in 
            the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration"/>.
            3. Derive from this class and override the <see cref="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)"/> method.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebServiceAuthorizationManager.#ctor(Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebServiceAuthorizationManager"/> class.
            </summary>
            <param name="configuration">Datacenter service configuration.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebServiceAuthorizationManager.#ctor(Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration,Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebServiceAuthorizationManager"/> class.
            </summary>
            <param name="configuration">Datacenter service configuration.</param>
            <param name="tokenAuthenticator">The optional token authenticator. If this parameter
            is null, a default token authenticator is created from the specified
            service configuration.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebServiceAuthorizationManager.TokenAuthenticator">
            <summary>
            Gets the web security token authenticator.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
            <summary>
            Overrides the <see cref="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)"/>.
            Checks authorization for the given operation context based on policy evaluation
            specified in the service configuration.
            </summary>
            <param name="operationContext">The current operation context.</param>
            <returns>true if access is allowed; otherwise, false.</returns>
            <remarks>Applications can override this method to modify the access check behavior.
            For example, if applications want to use authenticate clients 
            via either certificate or federated credential, it can extract the IClaimsPrincipal
            from OperationContext.ServiceSecurityContext.AuthorizationContext.Properties["Principal"]
            property, which is set by this method, and add additional IClaimsIdentity.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebServiceAuthorizationManager.Authenticate(System.String,System.Uri,System.String@)">
            <summary>
            Authenticates the authorization header.
            </summary>
            <param name="authorizationHeader">The authorization header. This value
            can be null if there is no authorization header.</param>
            <param name="requestUri">The request URI.</param>
            <param name="wwwAuthenticateHeader">If this method returns null, this parameter
            contains the content of WWW-Authenticate header that should be returned to
            the client.</param>
            <returns>If the authorization header contains a valid security token, returns a
            IClaimsIdentityCollection extracted from the security token in the
            authorization header; otherwise, return false.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterSecurityTokenRequirement">
            <summary>
            This class overrides the WIF's standard implementation of token validation to 
            address the security issue with how WIF uses the Uri class for 
            equality comparison of audience URIs.
            </summary>
            <remarks>
            This class is necessary because the WIF implementation compares URI using 
            Uri.Equals method, which ignores the UserInfo member of the Uri. The implementation
            of Datacenter STS allows two service accounts whose SPNs (i.e. service realms) 
            differ only in the UserInfo part. Thus, the client is subject to spoofing attack 
            when one service forwards the token from the client to successfully authenticate
            to the other service.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterSecurityTokenRequirement.ValidateAudienceRestriction(System.Collections.Generic.IList{System.Uri},System.Collections.Generic.IList{System.Uri})">
            <summary>
            Ensures one of the audience URIs in the security token is in the 
            list of the allowed the audience URIs specified by the service.
            </summary>
            <param name="allowedAudienceUris">The list of allowed audience URIs.</param>
            <param name="tokenAudiences">The list of audience URIs in the security token.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration">
            <summary>
            Represents the configuration of a datacenter service.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration"/> class.
            </summary>
            <param name="serverHomeDsts">The server's home dSTS.</param>
            <param name="serviceIdentity">The service identity.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration"/> class.
            </summary>
            <param name="serverHomeDsts">The server's home dSTS.</param>
            <param name="serviceIdentity">The service identity.</param>
            <param name="metadataUrl">The URL of the authentication metadata endpoint.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity,Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoverySettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration"/> class.
            </summary>
            <param name="serverHomeDsts">The server's home dSTS.</param>
            <param name="serviceIdentity">The service identity.</param>
            <param name="signingKeyDiscoverySettings">Signing key discovery settings</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity,System.Uri,Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoverySettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration"/> class.
            </summary>
            <param name="serverHomeDsts">The server's home dSTS.</param>
            <param name="serviceIdentity">The service identity.</param>
            <param name="metadataUrl">The URL of the authentication metadata endpoint.</param>
            <param name="signingKeyDiscoverySettings">Signing key discovery settings</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.HomeDsts">
            <summary>
            Gets or sets the servers home dSTS.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.ServiceIdentity">
            <summary>
            Gets or sets the service identity.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.MetadataUrl">
            <summary>
            Gets or sets the authentication metadata URL.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.SigningKeyCache">
            <summary>
            Gets or sets the cache of the dSTS signing keys. 
            </summary>
            <remarks>
            This property allows services to replace the default registry cache with 
            their own cache of signing key. The  cache is not persisted across
            machines or service deployments. By implementing their own cache, the services
            can be more robust when the signing key cannot be retrieved from dSTS
            (e.g. intermittent network issues).
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.SigningKeyDiscoverySetting">
            <summary>
            Gets or sets a value of signing Key Discovery setting
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.DisableSigningKeyDiscovery">
            <summary>
            Gets or sets a boolean indicating whether services should automatically retrieve
            the latest signing key chain from dSTS. 
            </summary>
            <remarks>
            The default value of this property is specified by the service setting 
            <seealso cref="F:Microsoft.WindowsAzure.Security.Authentication.ConfigurationConstants.SigningKeyDiscoveryKey"/>.
            This property is just a wrapper. Its maintained due to backward compatibility.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.RevokeClaimsAuthenticationManagerSettings">
            <summary>
            Gets or sets a value of RevokeClaimsAuthenticationManagerSettings
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.Initialize">
            <summary>
            Initializes the properties in service configuration for federated authentication.
            Also, calls the base class to update properties in the SecurityTokenHandlerConfiguration 
            objects for the SecurityTokenHandlerCollection objects contained in 
            SecurityTokenHandlerCollectionManager to be consistent with the property values on this 
            ServiceConfiguration instance.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.ToLogString">
            <summary>
            Returns a string that represents the current configuration.
            </summary>
            <returns>A string that represents the current configuration.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.IssuerNameConfigurationElement.ApplyConfiguration(Microsoft.IdentityModel.Configuration.ServiceConfiguration)">
            <summary>
            Implements the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IServiceConfigurationElement"/> interface.
            </summary>
            <param name="serviceConfiguration">The service configuration.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration.RevokeClaimsAuthenticationManagerConfigurationElement.ApplyConfiguration(Microsoft.IdentityModel.Configuration.ServiceConfiguration)">
            <summary>
            Implements the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IServiceConfigurationElement"/> interface.
            </summary>
            <param name="serviceConfiguration">The service configuration.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebChannel">
            <summary>
            Represents the WCF request channel that handles the authentication handshake
            before sending the request to the server.
            </summary>
            <remarks>
            This channel is not thread-safe by design. It is because the authentication 
            context is not thread-safe. To support thread-safety, the channel must
            use multiple authentication contexts.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebChannel.HandleSecurityException(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext,System.ServiceModel.Security.MessageSecurityException)">
            <summary>
            Handles the security exception and updates the current authentication context
            if necessary.
            </summary>
            <param name="context">The authentication context in use when receiving the exception.</param>
            <param name="securityException">The security exception to handle.</param>
            <returns>A new authentication context if the exception has been handled 
            and the request should be reconfigured with the new authentication context; otherwise,
            returns null and the caller should rethrow the original security exception.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebChannelFactory">
            <summary>
            Represents a factory that creates channels to web-based services in the datacenter.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebChannelFactory.#ctor(System.ServiceModel.Channels.IChannelFactory{System.ServiceModel.Channels.IRequestChannel},Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient,System.Uri,Microsoft.WindowsAzure.Security.Authentication.IWebRequestInspector)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebChannelFactory"/> class.
            </summary>
            <param name="innerFactory">The factory that creates the inner channels.</param>
            <param name="client">The web authentication client.</param>
            <param name="metadataUrl">The authentication metadata URL.</param>
            <param name="metadataRequestInspector">The optional inspector that intercepts authentication 
            metadata requests.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebClient">
            <summary>
            Represents the web client.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebClient.#ctor(Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient,System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebClient"/> class.
            </summary>
            <param name="authenticationClient">The web authentication client.</param>
            <param name="serviceName">The service name part of the service realm that has been
            registered with dSTS.</param>
            <param name="metadataUrl">The URL specifying the address to get the authentication
            metadata. This can be the same URL as the service.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebClient.#ctor(Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebClient"/> class.
            </summary>
            <param name="authenticationClient">The web authentication client.</param>
            <param name="serviceName">The service name part of the service realm that has been
            registered with dSTS.</param>
            <param name="metadata">The authentication metadata from the server.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebClient.WebRequestInspector">
            <summary>
            Gets the web request inspector. The inspector allows the caller to modify 
            properties of web requests before they are sent to the service. This is 
            necessary in cases where the client has to send protocol-specific web 
            requests to the service to perform authentication handshake.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebClient.GetResponse(System.Func{System.Collections.Generic.KeyValuePair{System.Net.HttpWebRequest,System.IO.Stream}})">
            <summary>
            Sends a web request to the service and gets a web response.
            </summary>
            <param name="createRequest">A delegate to create the web request and optionaly the request body to be sent to the service.
            The delegate can be invoked multiple times in order to retry authentication.
            The stream will be consumed and disposed.</param>
            <returns>The HTTP web response to the request.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebClient.GetResponse(System.Func{System.Net.HttpWebRequest})">
            <summary>
            Sends a web request to the service and gets a web response.
            </summary>
            <param name="createRequest">A delegate to create the web request to be sent to the service.
            The delegate can be invoked multiple times in order to retry authentication.</param>
            <returns>The HTTP web response to the request.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebEndpointIdentity">
            <summary>
            Represents the endpoint identity of the service.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebEndpointIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebEndpointIdentity"/> class.
            </summary>
            <param name="serviceName">The service name.</param>
            <param name="serviceDnsName">The optional service DNS name. If this value is null, empty, or
            an IP address, there will be no server authentication.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebEndpointIdentity.ServiceName">
            <summary>
            Gets the service name.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebEndpointIdentity.ServiceDnsName">
            <summary>
            Gets the service DNS name.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBinding">
            <summary>
            Represents a web binding to authenticate to datacenter services.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBinding.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBinding"/> class.
            </summary>
            <param name="metadataUrl">The authentication metadata URL.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBinding.ClientHomeSts">
            <summary>
            Gets or sets the client home STS.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBinding.TrustedStsCertificateThumbprints">
            <summary>
            Gets or sets the trusted STS certificate thumbprints.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBinding.AuthenticationClientConfiguration">
            <summary>
            Gets or sets the AuthenticationClientConfiguration. This overrides any specified trusted STS certificate thumbprints.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBinding.MetadataUrl">
            <summary>
            Gets the authentication metadata URL.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBinding.IsSubjectNameBasedAuthentication">
            <summary>
            Hint to perform SubjectNAme Based Authentication
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBinding.MetadataRequestInspector">
            <summary>
            Gets or sets the metadata web request inspector. The inspector is invoked
            for every request to the <see cref="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBinding.MetadataUrl"/>.
            This is used, for example, in scenarios where the client application must 
            configure the proxy for outgoing requests. The request inspector is applied 
            to the metadata request only. The service request must be configured separately 
            through the WebHttpBinding.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBinding.CreateBindingElements">
            <summary>
            Creates binding elements.
            </summary>
            <returns>A collection of binding elements.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement">
            <summary>
            Represents the binding element for dSTS authentication.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement"/> class.
            </summary>
            <param name="metadataUrl">The authentication metadata URL.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement.ClientHomeSts">
            <summary>
            Gets or sets the client home STS.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement.TrustedStsCertificateThumbprints">
            <summary>
            Gets or sets the trusted STS certificate thumbprints.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement.IsSubjectNameBasedAuthentication">
            <summary>
            Hint to perform SubjectNAme Based Authentication
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement.AuthenticationClientConfiguration">
            <summary>
            Gets or sets the AuthenticationClientConfiguration, overrides TrustedStsCertificateThumbprints
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement.MetadataUrl">
            <summary>
            Gets the authentication metadata URL.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement.MetadataRequestInspector">
            <summary>
            Gets or sets the authentication metadata request inspector.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement.Clone">
            <summary>
            Clones a new instance of the this object.
            </summary>
            <returns>The new cloned instance.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Gets the binding element property.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="context">The binding context.</param>
            <returns>The property with the specified type.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Determines if this binding element can build a channel factory.
            </summary>
            <typeparam name="TChannel">The channel type.</typeparam>
            <param name="context">The binding context.</param>
            <returns>true if the binding element can build a factory; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHttpBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Builds a channel factory.
            </summary>
            <typeparam name="TChannel">The channel type.</typeparam>
            <param name="context">The binding context.</param>
            <returns>A new channel factory.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHeaders">
            <summary>
            Represents the proprietary web headers used by services in the datacenter.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.DatacenterWebHeaders.WwwAuthenticateDsts">
            <summary>
            The HTTP header name for the alternate WWW-Authenticate response header.
            </summary>
            <remarks>
            This alternate header is needed because WCF does not allow the server 
            to set the WWW-Authenticate header (it uses WebHeaderCollection class 
            which prevents modifying the WWW-Authenticate header). To work around 
            this limitation, the client should look for the alternate header first.
            Only if the alternate header does not exist, should it look for the 
            WWW-Authenticate header.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DnsBasedAlternateStsPolicy">
            <summary>
            Queries DNS SRV records to get the alternate STS endpoints for achieving high availability. Given a dSTS
            service name such as sn1-dsts.dsts.core.windows.net, _dsts._tcp.sn1-dsts.dsts.core.windows.net SRV records are
            queried to get the primary and backup dSTS host names. Among all the SRV records of a service the primary will
            have the highest priority.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DnsQueryProxy">
            <summary>
            Wrapper over the native DnsQuery function.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DnsQueryProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DnsQueryProxy"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DnsQueryProxy.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DnsQueryProxy"/> class.
            </summary>
            <param name="bypassCache">Specifies if the resolver cache has to be bypassed on the lookup.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DnsQueryProxy.GetSrvRecords(System.String)">
            <summary>
            PInvokes the DnsQuery function to query SRV records with the specified service name.
            </summary>
            <param name="serviceName">Service name of SRV records.</param>
            <returns>Set of SRV records for the specified service name.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DnsQueryProxy.GetARecords(System.String)">
            <summary>
            Get the list of A records for a service name
            </summary>
            <param name="serviceName">The service name to query</param>
            <returns>List IP addresses</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DstsAddressConverter">
            <summary>
            Converts dSTS addresses.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator">
            <summary>
            Implements X509CertificateValidator to verify dSTS signing certificate. If the dSTS certificate
            has been rolled over, the latest signing key chain is retrieved from the discovery service
            interface of dSTS.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator.RefreshInterval">
            <summary>
            Refresh interval on which to refresh federation metadata
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator.knownDstsCertificates">
            <summary>
            The list of dSTS certificates configured with the service. These are trusted in addition to what is received as part of federation metadata.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator.trustedDstsCertificates">
            <summary>
            The list of dSTS certificates currently trusted by the service. This is union of known dsts certificates and what is received from federation metadata
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator.#ctor(System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2},Microsoft.WindowsAzure.Security.Authentication.ISigningKeyDiscoveryService,Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator"/> class.
            </summary>
            <param name="knownDstsCertificates">The list of known dSTS certificates.</param>
            <param name="signingKeyDiscoveryService">The object used to get the signing keys.</param>
            <param name="serviceIdentity">Service Identity</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator.#ctor(System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2},Microsoft.WindowsAzure.Security.Authentication.ISigningKeyDiscoveryService,Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity,Microsoft.WindowsAzure.Security.Authentication.IPersistentCache{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator"/> class.
            </summary>
            <param name="knownDstsCertificates">The list of known dSTS certificates.</param>
            <param name="signingKeyDiscoveryService">The object used to get the signing keys.</param>
            <param name="serviceIdentity">Service Identity</param>
            <param name="cache">A cache storing the signing key certificates.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator.#ctor(System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2},Microsoft.WindowsAzure.Security.Authentication.ISigningKeyDiscoveryService,Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity,Microsoft.WindowsAzure.Security.Authentication.IPersistentCache{System.Security.Cryptography.X509Certificates.X509Certificate2},System.Boolean,System.TimeSpan,Microsoft.WindowsAzure.Security.Authentication.ITimer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator"/> class.
            </summary>
            <param name="knownDstsCertificates">The list of known dSTS certificates.</param>
            <param name="signingKeyDiscoveryService">The object used to get the signing keys.</param>
            <param name="serviceIdentity">Service Identity</param>
            <param name="cache">A cache storing the signing key certificates.</param>
            <param name="discoverSigningKeyDuringInitialization">Discover signing during initialization or not</param>
            <param name="refreshInterval">Refresh interval on which to refresh federation metadata. Minimum allowed value is 10 minutes</param>
            <param name="fetchFederationMetadataTimer">Timer implementation to use. If Null then ThreadingTimer implementation is used</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator.#ctor(System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2},Microsoft.WindowsAzure.Security.Authentication.ISigningKeyDiscoveryService,Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity,Microsoft.WindowsAzure.Security.Authentication.IPersistentCache{System.Security.Cryptography.X509Certificates.X509Certificate2},System.Boolean,System.TimeSpan,Microsoft.WindowsAzure.Security.Authentication.ITimer,Microsoft.WindowsAzure.Security.Authentication.IClock)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator"/> class.
            </summary>
            <param name="knownDstsCertificates">The list of known dSTS certificates.</param>
            <param name="signingKeyDiscoveryService">The object used to get the signing keys.</param>
            <param name="serviceIdentity">Service Identity</param>
            <param name="cache">A cache storing the signing key certificates.</param>
            <param name="discoverSigningKeyDuringInitialization">Discover signing during initialization or not</param>
            <param name="refreshInterval">Refresh interval on which to refresh federation metadata. Minimum allowed value is 10 minutes</param>
            <param name="fetchFederationMetadataTimer">Timer implementation to use. If Null then ThreadingTimer implementation is used</param>
            <param name="clock">The clock object used to simulate system time.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator.TrustedSigningCertificates">
            <summary>
            Gets the list of signing certificates trusted by this validator.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator.ServiceRealms">
            <summary>
            Gets string of service realms used by this validator.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator.UpdateServiceRealms(Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity)">
            <summary>
            Adds new realms to serviceRealms
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.DstsIssuerX509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Validates the token issuer's certificate.
            </summary>
            <param name="certificate">The certificate to be validated.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.DstsRetryPolicy">
            <summary>
            Represents the security token service retry policy.
            </summary>
            <remarks>
            The dSTS retry policy:
            - Try up to 3 times.
            - The initial timeout is 10s. For each TimeoutException, add 10s to the timeout.
            - Only retry if the exception from dSTS is one of the following:
                + TimeoutException.
                + CommunicationException that is not a FaultException nor MessageSecurityException.
                FaultException indicates that that the server has received the request. The 
                MessageSecurityException is thrown when the client fails to authenticate to the dSTS. In
                both cases, we should not retry because it is not network-related issues.
                + FaultException with ExceptionDetail containing ServerTooBusyException. 
                This works around bug #345883 in pre-FC121 where the FFE does not fail over correctly. 
                + FaultException{ServiceUnavailableFault}. This exception is thrown by the FFE
                when it cannot contact its backend (either primary is not identified or the backend's
                endpoitn is not available). This retry is probably too aggressive given FFE also retries
                in such conditions today.
            - If the exception is not TimeoutException, pause for 5 seconds before retrying.
            </remarks>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.DstsRetryPolicy.MaxNumberOfTrial">
            <summary>
            The maximum number of trial.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.DstsRetryPolicy.WaitTimeInSeconds">
            <summary>
            The wait time before retrying if waiting is necessary.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.DstsRetryPolicy.InitialTimeoutInSeconds">
            <summary>
            The initial timeout used when requesting a security token.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ExceptionHelpers">
            <summary>
            Represents a collection of helper methods to filter exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ExceptionHelpers.IsTransientDstsException(System.Exception)">
            <summary>
            Determines whether a given exception from dSTS is transient.
            See the remarks of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DstsRetryPolicy"/> class for more information.
            </summary>
            <param name="exception">The inner exception of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceException"/></param>
            <returns>true if the exception is transient; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ExceptionHelpers.IsTransientFederationMetadataException(System.Exception)">
            <summary>
            Determines whether a given exception from dSTS federation metadata is transient.
            See the remarks of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.DstsRetryPolicy"/> class for more information.
            </summary>
            <param name="exception">Failure Exception</param>
            <returns>true if the exception is transient; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ExceptionHelpers.IsTransientAdfsException(System.Exception)">
            <summary>
            Determines whether a given exception from ADFS is transient.
            See the remarks of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AdfsRetryPolicy"/> class for more information.
            </summary>
            <param name="exception">The inner exception of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceException"/></param>
            <returns>true if the exception is transient; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ExceptionHelpers.CreateWcfRequestException(System.Net.WebException,System.Uri)">
            <summary>
            Creates a WCF exception object from a WebException that is received
            when sending a request.
            </summary>
            <param name="webException">The web exception.</param>
            <param name="requestUri">The original request URI.</param>
            <returns>The WCF exception.</returns>
            <remarks>The implementation of this method is similar to how WCF's
            internal class WebRequestHttpOutput converts a web exception to a WCF
            exception.</remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.EventLog">
            <summary>Represents an ETW-style event log for authentication-related events.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.EventLog.LogServerCertificateValidationCallbackReregistered(System.String)">
            <summary>
            Logs an event indicating that the <see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback"/> has
            been re-registered.
            </summary>
            <param name="previousCallback">The previous callback.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.EventLog.LogRequestSecurityTokenFailed(System.String,System.String,System.String,System.String)">
            <summary>
            Logs an event indicating a failure when requesting a security token.
            </summary>
            <param name="stsAddress">The absolute URL of the STS.</param>
            <param name="appliesTo">The AppliesTo field of the token request.</param>
            <param name="credentialType">The credential type used to authenticate to the STS.</param>
            <param name="exceptionMessage">A message from the exceptions.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.EventLog.LogGetSigningKeyChainSucceeded(System.String,System.String,System.String)">
            <summary>
            Logs an event indicating a success when getting the signing key chain from the dSTS.
            </summary>
            <param name="discoveryAddress">The address of the discovery endpoint from which the signing keys 
            were retrieved.</param>
            <param name="knownCertificate">The currently known certificate that can be used to verify
            the signing key chain.</param>
            <param name="signingKeys">The list of signing keys returned by the dSTS.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.EventLog.LogGetFederationMetadataSucceeded(System.String,System.String,System.String)">
            <summary>
            Logs an event indicating a success when getting the signing keys from federation metadata.
            </summary>
            <param name="federationMetadataAddress">The address of the federation metadata endpoint from which the signing keys 
            were retrieved.</param>
            <param name="trustedCertificates">The currently trusted certificates.</param>
            <param name="signingKeys">The list of signing keys returned by the federation metadata.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.EventLog.LogCriticalMessage(System.String)">
            <summary>Logs a critical message.</summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.EventLog.LogErrorMessage(System.String)">
            <summary>Logs an error message.</summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.EventLog.LogWarningMessage(System.String)">
            <summary>Logs a warning message.</summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.EventLog.LogInformationalMessage(System.String)">
            <summary>Logs an informational message.</summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.EventLog.LogVerboseMessage(System.String)">
            <summary>Logs a verbose message.</summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.EventLog.LogRevokeClaimsCriticalMessage(System.String)">
            <summary>
            Logs a critical message during claims revocation 
            </summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.EventLog.LogRevokeClaimsErrorMessage(System.String)">
            <summary>
            Logs a error message during claims revocation 
            </summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.FederatedStsProxy.#ctor(Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenService,System.Uri,Microsoft.WindowsAzure.Security.Authentication.IFederationQueryService)">
            <summary>
            Initializes a new instance of the FederatedStsProxy class.
            </summary>
            <param name="securityTokenService">The proxy to the STS endpoint on the dSTS.</param>
            <param name="realmName">The realm name of the dSTS.</param>
            <param name="federationQueryService">An object used to query federation information
            from the dSTS.</param>
            <returns>A security token service interface for the federated dSTS.</returns>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.FederatedStsProxy.RealmName">
            <summary>
            Gets the realm name of the federated STS.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.FederatedStsProxy.Issue(Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Issues a security token with server certificates.
            See the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenService"/> interface.
            </summary>
            <param name="request">The request for a security token.</param>
            <param name="requestMetadata">A Dictionary with custom request metadata</param>
            <returns>The response to the request for a security token.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.FederatedStsProxyChain">
            <summary>
            Implements a proxy chain of federated STS's.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.FederatedStsProxyChain.CacheKeyCredential">
            <summary>
            For caching ADFS tokens we want to avoid repromting the user for a cert, but the token cache is 
            keyed on the credential.
            We use this fake credential as the cache key instead of the original credential used to request the token.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.FederatedStsProxyChain.#ctor(Microsoft.WindowsAzure.Security.Authentication.IFederatedSecurityTokenService,Microsoft.WindowsAzure.Security.Authentication.IStsProxyFactory,Microsoft.WindowsAzure.Security.Authentication.IStsRetryPolicy,System.Collections.Generic.IEnumerable{System.String},Microsoft.WindowsAzure.Security.Authentication.ICache{Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest,Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceResponse},System.Boolean,Microsoft.WindowsAzure.Security.Authentication.Contracts.ICertificateSelector)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.FederatedStsProxyChain"/> class.
            </summary>
            <param name="federatedSts">The proxy to the server's federated dSTS.</param>
            <param name="stsProxyFactory">The factory to create a proxy to the client's STS.</param>
            <param name="clientStsRetryPolicy">The retry policy talking to the client's STS.</param>
            <param name="trustedStsCertificateThumbprints">
            The STS certificate thumbprints trusted by the client.
            </param>
            <param name="tokenCache">The cache to use for federated tokens.</param>
            <param name="isInteractive">Is the caller an interactive application.</param>
            <param name="certificateSelector">Custom certificate selection logic implementation</param>
            <remarks>
            The proxy chain implements the security token service function as follows:
               1. Call the <paramref name="federatedSts"/> proxy to get the federation URLs.
               2. Call the <paramref name="stsProxyFactory"/> to create a proxy to ADFS with the URL
               obtained from step (1).
               3. Call proxy from step (2) to request an ADFS token.
               4. Call the <paramref name="federatedSts"/> proxy to request a token for 
               the server.
               5. If either 4. fails retry 2-4 the next federation URL.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.FederationQueryProxy">
            <summary>
            Implements the interface to query federation information from the dSTS.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.FederationQueryProxy.#ctor(System.Uri,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidatorScopeFactory,System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Security.Authentication.Contracts.AuthenticationMethod},Microsoft.WindowsAzure.Security.Authentication.Contracts.SelfFederationMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.FederationQueryProxy"/> class.
            </summary>
            <param name="queryEndpoint">The endpoint from which the client can query for 
            security token issuance URLs of the federation server.</param>
            <param name="certificateValidatorFactory">The factory to create SSL certificate
            validator when querying federation URLs from the dSTS.</param>
            <param name="availableAuthenticationMethods"></param>
            SelfFederationMode
            <param name="selfFederationMode"></param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.FederationQueryProxy.GetFederationTokenIssuanceUrls(System.String,System.String,System.String)">
            <summary>
            Gets the STS endpoint address on the federation server for the specified domain. 
            </summary>
            <param name="domainName">The fully qualified domain name.</param>
            <param name="serviceRealm">The realm to be authenticated to</param>
            <param name="requestId">Request Id for logging</param>
            <returns>
            The URLs of the STS endpoints.
            </returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.FederationQueryProxy.CreateBinding">
            <summary>
            Creates the binding used to query federation information.
            Unit tests can override this method to test against to an 
            in-memory service host.
            </summary>
            <returns>The binding.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.FederationQueryProxy.CreateChannelFactory">
            <summary>
            Creates a channel factory used to query federation information.
            Unit tests can override this method to test against to an 
            in-memory service host.
            </summary>
            <returns>The channel factory.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.FederationQueryProxy.QueryFederationStsUrl(System.String,System.String,System.String)">
            <summary>
            Queries for the federation STS URL.
            </summary>
            <param name="domainName">The domain name of the client.</param>
            <param name="realm">The realm to be authenticated to</param>
            <param name="requestId">Request Id for logging</param>
            <returns>The federation STS URL.</returns>
            <remarks>
            If more than one URL is returned, the method selects the first URL.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.FederationQueryProxyFactory.CreateFederationQueryProxy(Microsoft.WindowsAzure.Security.Authentication.IStsProxyConfiguration,System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Security.Authentication.Contracts.AuthenticationMethod})">
            <summary>
            Creates a proxy to query the federation information from the dSTS.
            </summary>
            <param name="configuration">The configuration of the proxy.</param>
            <param name="availableAuthenticationMethods"></param>
            <returns>The proxy that can query for federation information.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.GenericXmlSecurityTokenSerializer">
            <summary>
            Implements the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenSerializer"/> to serialize
            the <see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken"/>.
            </summary>
            <remarks>
            This class is used by the client to serialize a security token and put it 
            in the authorization header.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.GenericXmlSecurityTokenSerializer.CanSerialize(System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Determines whether the specified security token can be serialized.
            </summary>
            <param name="token">The security token to serialize.</param>
            <returns>true if the token can be serialized; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.GenericXmlSecurityTokenSerializer.Serialize(System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Serializes a security token to a string.
            </summary>
            <param name="token">The security token to serialize.</param>
            <returns>A string representing the serialized token.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.GenericXmlSecurityTokenSerializer.CanDeserialize(System.String)">
            <summary>
            Determines whether the specified string that represents a serialized token
            can be deserialized into a token.
            </summary>
            <param name="serializedToken">The string representing a serialized token.</param>
            <returns>true if the string can be deserialized into a token; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.GenericXmlSecurityTokenSerializer.Deserialize(System.String)">
            <summary>
            Deserialize a string into a security token.
            </summary>
            <param name="serializedToken">The string representing a serialized token.</param>
            <returns>The security token.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.HighAvailabilityFederationQueryProxy">
            <summary>
            Federation query proxy that will fallback to alternate endpoint if the primary  endpoint fails to respond in time
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.HighAvailabilityStsProxy">
            <summary>
            A security token service that will fallback to alternate STSes if the primary fails to respond in time.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IAlternateStsPolicy">
            <summary>
            Represents the authentication client's policy for using alternate STS endpoints
            to achieve high availability.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IAlternateStsPolicy.PrimaryStsWaitTime">
            <summary>
            How long to wait for a response from the primary endpoint after receiving a successful response from an alternate.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IAlternateStsPolicy.StsTimeout">
            <summary>
            How long to wait for all STSes to respond before giving up.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IAlternateStsPolicy.AlternateStsRequestCreationWaitTime">
            <summary>
            How long to wait for a response from the primary endpoint before creating requests for alternate sts
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IAlternateStsPolicy.GetEndpoints(System.Uri)">
            <summary>
            Determine which endpoints are available for the given primary endpoint.
            </summary>
            <param name="primaryEndpoint"></param>
            <returns>Set of endpoints with the prefered endpoint first</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IAuthenticationClient">
            <summary>
            Defines an interface for the authentication client.
            See <seealso cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationClient"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IAuthenticationClient.GetSecurityToken(System.String,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata)">
            <summary>
            Requests a security token for the specified service from the datacenter security 
            token service.
            </summary>
            <param name="serviceName">The service name.</param>
            <param name="dnsHostName">The DNS host name of the service.
            This parameter is ignored if it is null, an empty string, or an IP address.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <remarks>The <paramref name="serviceName"/> and <paramref name="dnsHostName"/> are used
            to construct the service realm (a.k.a. the service SPN), which uniquely identifies the
            service. The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism.</remarks>
            <returns>>An object that represents a response to the request for security token.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IAuthenticationClient.GetSecurityToken(System.Uri,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata)">
            <summary>
            Requests a security token for the specified service from the datacenter security 
            token service.
            </summary>
            <param name="serviceRealmUri">Service realm (a.k.a. the service SPN), which uniquely identifies the
            service.</param>
            <param name="dnsHostName">The DNS host name of the service.
            This parameter is ignored if it is null, an empty string, or an IP address.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <remarks>The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism.</remarks>
            <returns>>An object that represents a response to the request for security token.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IAuthenticationClient.GetSecurityToken(System.String,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata,Microsoft.WindowsAzure.Security.Authentication.Contracts.ICertificateSelector)">
            <summary>
            Requests a security token for the specified service from the datacenter security 
            token service using custom certificate selection logic provided.
            </summary>
            <param name="serviceName">The service name.</param>
            <param name="dnsHostName">The DNS host name of the service.
            This parameter is ignored if it is null, an empty string, or an IP address.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <param name="certificateSelector">Custom certificate selection logic implementation. This is optional parameter and in case nothing is passed we fall back to standard way of certificate selection.</param>
            <remarks>The <paramref name="serviceName"/> and <paramref name="dnsHostName"/> are used
            to construct the service realm (a.k.a. the service SPN), which uniquely identifies the
            service. The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism.</remarks>
            <returns>>An object that represents a response to the request for security token.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IAuthenticationClient.GetSecurityToken(System.String,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata,System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Requests a security token for the specified service from the datacenter security 
            token service using ActAs security token
            </summary>
            <param name="serviceName">The service name.</param>
            <param name="dnsHostName">The DNS host name of the service.
            This parameter is ignored if it is null, an empty string, or an IP address.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <param name="actAsToken">Security token for ActAs</param>
            <remarks>The <paramref name="serviceName"/> and <paramref name="dnsHostName"/> are used
            to construct the service realm (a.k.a. the service SPN), which uniquely identifies the
            service. The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism.</remarks>
            <returns>>An object that represents a response to the request for security token.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IAuthenticationClient.GetSecurityToken(System.Uri,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata,System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Requests a security token for the specified service from the datacenter security 
            token service using ActAs security token
            </summary>
            <param name="serviceRealmUri">Service realm (a.k.a. the service SPN), which uniquely identifies the
            service.</param>
            <param name="dnsHostName">The DNS host name of the service.
            This parameter is ignored if it is null, an empty string, or an IP address.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <param name="actAsToken">Security token for ActAs</param>
            <remarks>The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism.</remarks>
            <returns>>An object that represents a response to the request for security token.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IAuthenticationClientFactory">
            <summary>
            Represents an interface that creates <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IAuthenticationClient"/>.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IAuthenticationClientFactory.Create(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates an authentication client.
            </summary>
            <param name="clientCredential">The client credential.</param>
            <param name="clientHomeSts">The client's home dSTS.</param>
            <param name="trustedStsCertificateThumbprints">The dSTS certificate thumbprint.</param>
            <returns>A new <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IAuthenticationClient"/> object.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IAuthenticationClientFactory.Create(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IAuthenticationClientConfiguration)">
            <summary>
            Creates an authentication client.
            </summary>
            <param name="clientCredential">The client credential.</param>
            <param name="clientHomeSts">The client's home dSTS.</param>
            <param name="authenticationClientConfiguration">Client configuration to use when requesting tokens.</param>
            <returns>A new <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IAuthenticationClient"/> object.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IBindingConfiguration">
            <summary>
            Defines the binding configuration.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IDnsQueryProxy">
            <summary>
            Proxy for querying DNS server.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IDnsQueryProxy.GetSrvRecords(System.String)">
            <summary>
            Queries DNS SRV records of a service.
            </summary>
            <param name="serviceName">Service name of SRV records.</param>
            <returns>Set of SRV records for the specified service name.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IDnsQueryProxy.GetARecords(System.String)">
            <summary>
            Queries DNS for A records for a service
            </summary>
            <param name="serviceName">Service name of A records.</param>
            <returns>Set of A records for the specified service name.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SrvRecord">
            <summary>
            A DNS SRV record.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.SrvRecord.HostName">
            <summary>
            Hostname of the SRV record.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.SrvRecord.Priority">
            <summary>
            Priority of the SRV record.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.SrvRecord.Weight">
            <summary>
            Weight of the SRV record.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.SrvRecord.Port">
            <summary>
            Port of the SRV record.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SrvRecord.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IgnorableCertificateValidator">
            <summary>
            Represents an ignorable certificate validator. This validator is used when there is no
            server certificate in the RSTR.
            </summary>
            <remarks>
            When the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.RoutingCertificateValidator`1"/> sees the singleton of this validator,
            it would ignore the validator. If all registered validators are the same singleton
            of this validator, the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.RoutingCertificateValidator`1"/> would pass the call
            to the previously registered validator.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IgnorableCertificateValidator.Instance">
            <summary>
            Gets the singleton of this class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IgnorableCertificateValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication.</summary>
            <param name="sender">An object that contains state information for this validation.</param>
            <param name="certificate">The certificate used to authenticate the remote party.</param>
            <param name="chain">The chain of certificate authorities associated with the remote certificate.</param>
            <param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
            <returns>
            true if there is no policy error; otherwise, false. Note that the return value is only meaningful to
            applications that invoke this validator, such as in a WCF's custom certificate validator. 
            If the validator is registered with this library's global certificate validation callback, 
            the return value is irrelevant because the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.RoutingCertificateValidator`1"/> ignores this 
            validator's callback.
            </returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IIncomingResponse">
            <summary>
            Defines a web response from the server.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IIncomingResponse.StatusCode">
            <summary>
            Gets the status code.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IIncomingResponse.WwwAuthenticateHeader">
            <summary>
            Gets the WWW-Authenticate header.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IOutgoingRequest">
            <summary>
            Defines an interface that represents the outgoing web request from the client.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IOutgoingRequest.AuthorizationHeader">
            <summary>
            Gets or sets the authorization header.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IOutgoingRequest.ConfigureServiceCertificates(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator,System.IDisposable@)">
            <summary>
            Configures the web request to allow the specified service certificates over https.
            </summary>
            <param name="serviceCertificateValidator">Validator of the service certificate.</param>
            <param name="requestContext">A context object that the client must dispose after sending 
            the request. This value can be null if there is no context to dispose.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ICache`2">
            <summary>Defines a cache whose contents expire at a fixed time.</summary>
            <typeparam name="TKey">The type of keys in the cache.</typeparam>
            <typeparam name="TValue">The type of values in the cache.</typeparam>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ICacheManager`1">
            <summary>Defines a cache manager.</summary>
            <typeparam name="TValue">The type of the cached values.</typeparam>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ICacheManager`1.Clear">
            <summary>Clears the cache.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ICacheManager`1.Remove(`0)">
            <summary>Removes all cache entries with the specified value from the cache.</summary>
            <param name="cachedValue">The value of the cached entry to remove.</param>
            <returns>true if at least one object was found and removed from the cache; otherwise, 
            if no object with the specified value was found, false.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IClock">
            <summary>Defines a clock.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IEventLog">
            <summary>Defines an ETW-style event log for authentication-related events.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IEventLog.LogServerCertificateValidationCallbackReregistered(System.String)">
            <summary>
            Logs an event indicating that <see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback"/> has been
            re-registered.
            </summary>
            <param name="previousCallback">The previous callback.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IFederatedSecurityTokenService">
            <summary>
            Defines an interface for a federated security token service.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IFederationQueryProxyFactory">
            <summary>
            Defines an interface to create an STS proxy.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IFederationQueryProxyFactory.CreateFederationQueryProxy(Microsoft.WindowsAzure.Security.Authentication.IStsProxyConfiguration,System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Security.Authentication.Contracts.AuthenticationMethod})">
            <summary>
            Creates a proxy to query the federation information from the dSTS.
            </summary>
            <param name="proxyConfiguration"></param>
            <param name="availableAuthenticationMethods"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IFederationQueryService">
            <summary>
            Defines an interface to query for federation information from the dSTS.
            This interface wraps the service contract interface to the dSTS.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IFederationQueryService.GetFederationTokenIssuanceUrls(System.String,System.String,System.String)">
            <summary>
            Get the list of STS address in the order that they should be tried 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IncompleteWebAuthenticationContext">
            <summary>
            Represents an incomplete web authentication context.
            </summary>
            <remarks>
            An incomplete context is returned by WebAuthenticationClient.OnUnauthorized
            to indicate that the previous security token did not work and the context contains 
            a new security token for the client to retry authentication. To retry, the client
            passes the incomplete context to <see cref="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.ConfigureRequest(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext,Microsoft.WindowsAzure.Security.Authentication.IOutgoingRequest,System.IDisposable@)"/>
            to reconfigure the web request and then resends it. If a retried request also fails, 
            the client application should pass the incomplete context to the
            WebAuthenticationClient.OnUnauthorized method to obtain a 
            new incomplete context and retry again. This continues until authentication 
            succeeds or the returned new context is null. 
            If authentication succeeds with an incomplete context, the application should obtain a 
            complete context via <see cref="P:Microsoft.WindowsAzure.Security.Authentication.IncompleteWebAuthenticationContext.CompleteContext"/> property and use it 
            for subsequent requests. This ensures correct behavior when the security token
            needs to be refreshed again. Also, since the incomplete context is mutable and not
            guaranteed to be thread-safe, client applications should convert it to a 
            complete context before the context can be shared by multiple threads.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IncompleteWebAuthenticationContext.#ctor(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IncompleteWebAuthenticationContext"/> class
            from an existing web authentication context.
            </summary>
            <param name="context">The existing web authentication context.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IncompleteWebAuthenticationContext.CompleteContext">
            <summary>
            Gets a complete context instance.
            </summary>
            <remarks>
            The client applications gets this property to convert from an incomplete
            context to a complete context after the authentication succeeds.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IncompleteWebAuthenticationContext.IsValid">
            <summary>
            Gets a boolean indicating the current context is still valid. 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IncompleteWebAuthenticationContext.Invalidate">
            <summary>
            Invalidates the current context so that it cannot be used for future requests.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IPriorityQueue`2">
            <summary>Defines a priority queue.</summary>
            <typeparam name="TPriority">The type of priorties in the queue.</typeparam>
            <typeparam name="TValue">The type of values in the queue.</typeparam>
            <remarks>The values are retrieved based on their priorities. (The priorities are used for sorting.)</remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IRealmSuffixProvider">
            <summary>
            Defines a provider that determines the realm suffix from a subject DNS name as used in an X.509 certificate.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IRealmSuffixProvider.GetSuffix(System.String)">
            <summary>Extracts the realm suffix from a subject DNS name.</summary>
            <param name="subjectDnsName">The subject DNS name, as used in an X.509 certificate.</param>
            <returns>
            The realm suffix from the subject DNS name, or <see langword="null"/> if the subject DNS name does not
            represent a dSTS realm.
            </returns>
            <example>*.dsts.localhost: localhost</example>
            <example>*.dsts.example.com: example.com</example>
            <example>*.dsts.root: null</example>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackContext">
            <summary>Defines a context in which certificate validation occurs (a validation callback).</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackContext.CurrentCallback">
            <summary>Gets or sets the current callback.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackFactory">
            <summary>
            Defines a Chain of Responsibility factory for <see cref="T:System.Net.Security.RemoteCertificateValidationCallback"/>.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackFactory.Create(System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Creates a <see cref="T:System.Net.Security.RemoteCertificateValidationCallback"/> chained to a previous callback.
            </summary>
            <param name="previousCallback">The previous callback, if any.</param>
            <returns>The <see cref="T:System.Net.Security.RemoteCertificateValidationCallback"/> chained to the previous callback.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistrar">
            <summary>
            Defines a registrar for a certificate validation callback, which implements a policy for where and how
            frequently such a callback is registered.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistrar.RegisterAsNeeded(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackFactory)">
            <summary>
            Registers the callback, if necessary according to current state and this registrar's policy.
            </summary>
            <param name="factory">The factory to use to create the callback, if registration is necessary.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistrarLog">
            <summary>Defines a log for a <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistrar"/>.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistrarLog.LogReregistered(System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Logs an event indicating that <see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback"/> has been
            re-registered.
            </summary>
            <param name="previousCallback">The previous callback.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistry">
            <summary>
            Defines a certificate validate callback registry, which registers certificate validation callbacks on a per-URI
            basis.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistry.Add(System.Uri,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>Adds the specified callback for the specified URI.</summary>
            <param name="uri">The URI for which to add a callback.</param>
            <param name="callback">The callback to use for certificate validation when the URI is accessed.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistry.Remove(System.Uri,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>Removes the specified callback for the specified URI.</summary>
            <param name="uri">The URI for which to remove a callback.</param>
            <param name="callback">The previously registered certificate validation callback.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistry.Add(System.Net.WebRequest,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Adds the specified callback for the specified web request.
            </summary>
            <param name="request">A web request for which to register the callback.</param>
            <param name="callback">The callback  to use for certification validation when the web request is sent.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidationCallbackRegistry.Remove(System.Net.WebRequest,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Removes the specified callback for the specified web request.
            </summary>
            <param name="request">The web request whose previously registered.</param>
            <param name="callback">The previously registered certificate validation callback.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator">
            <summary>Defines a certificate validator.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication.</summary>
            <param name="sender">An object that contains state information for this validation.</param>
            <param name="certificate">The certificate used to authenticate the remote party.</param>
            <param name="chain">The chain of certificate authorities associated with the remote certificate.</param>
            <param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
            <returns>
            A <see cref="T:System.Boolean"/> value that determines whether the specified certificate is accepted for authentication.
            </returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidatorScopeFactory">
            <summary>Defines a factory that creates certificate validator scopes.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ICertificateValidatorScopeFactory.Create(System.Uri)">
            <summary>Creates a certificate validator scope.</summary>
            <param name="endpointAddress">Address to register the validator against</param>
            <returns>The certificate validator scope created.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IncomingWebResponse">
            <summary>
            Represents a web response from the server.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IncomingWebResponse.#ctor(System.Net.HttpWebResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IncomingWebResponse"/> class.
            </summary>
            <param name="webResponse">The HTTP web response from the server.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IncomingWebResponse.StatusCode">
            <summary>
            Gets the status code.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IncomingWebResponse.WwwAuthenticateHeader">
            <summary>
            Gets the WWW-Authenticate header.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenSerializer">
            <summary>
            Defines an interface used to serialize and deserialize a security token.
            </summary>
            <remarks>
            The security token is serialized on the client side and deserialized on the server side.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenSerializer.CanSerialize(System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Determines whether the specified security token can be serialized.
            </summary>
            <param name="token">The security token to serialize.</param>
            <returns>true if the token can be serialized; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenSerializer.Serialize(System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Serialize a security token to a string.
            </summary>
            <param name="token">The security token to serialize.</param>
            <returns>A string representing the serialized token. For SAML2 tokens, this
            is an XML text.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenSerializer.CanDeserialize(System.String)">
            <summary>
            Determines whether the specified string that represents a serialized token
            can be deserialized into a token.
            </summary>
            <param name="serializedToken">The string representing a serialized token.</param>
            <returns>true if the string can be deserialized into a token; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenSerializer.Deserialize(System.String)">
            <summary>
            Deserialize a string into a security token.
            </summary>
            <param name="serializedToken">The string representing a serialized token.
            For SAML token, this is an XML text.</param>
            <returns>The security token.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenService">
            <summary>
            Defines an interface to issue a security token.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenService.Issue(Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Issues a security token with server certificates.
            </summary>
            <param name="request">The security token request object.</param>
            <param name="requestMetadata">Dictionary containing custom request metadata.</param>
            <returns>The security token response containing the requested security 
            token and an optional list of one or more server certificates.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IServiceConfigurationElement">
            <summary>
            Defines an interface to encapsulate how different WIF service 
            configurations are applied.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IServiceConfigurationElement.ApplyConfiguration(Microsoft.IdentityModel.Configuration.ServiceConfiguration)">
            <summary>
            Apply some settings to a given WIF service configuration object.
            </summary>
            <param name="serviceConfiguration">The service configuration to be applied to.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ISigningKeyDiscoveryService">
            <summary>
            Obtains a list of signing certificates from a known certificate.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ISigningKeyDiscoveryService.GetSigningKeys(System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Gets the list of signing certificates.
            </summary>
            <param name="serviceIdentity">A semicolon-delimited string consisting of the service's audience URIs (for logging purposes).</param>
            <param name="currentlyTrustedCertificates">Certificates trusted by the service currently. This is used for logging details on server side</param>
            <returns>The signing certificates.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ISleep">
            <summary>
            Defines the interface to sleep on the current thread.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IStringSettings">
            <summary>
            Defines string key value pair settings.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IStsChainFactory">
            <summary>Defines a factory that creates an STS chain.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IStsChainFactory.Create(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,System.Uri,System.Uri,System.Uri,System.Uri,System.Uri,System.String,Microsoft.WindowsAzure.Security.Authentication.Contracts.ICertificateSelector,Microsoft.WindowsAzure.Security.Authentication.IManagedServiceIdentityProvider)">
            <summary>
            Creates the STS chain that can talk to any number of intermediary security token services and discovery
            services to get the final requested security token. Also allows caller to pass in custom cert selection logic in case of smart card authentication
            </summary>
            <param name="clientCredential">
            The client credentials value
            </param>
            <param name="federationQueryUrl">The URL of the federation query endpoint on the server's STS.</param>
            <param name="clientCertificateStsUrl">
            The URL from which to request a token when using a certificate as credentials to talk to the client's STS.
            </param>
            <param name="serverCertificateStsUrl">
            The URL from which to request a token when using a certificate as credentials to talk to the server's STS.
            </param>
            <param name="serverIssuedTokenStsUrl">
            The URL from which to request a token when using an issued token as credentials to talk to the server's STS.
            </param>
            <param name="serverStsRealmName">The STS realm name of the server.</param>
            <param name="serverDnsHostName">The DNS host name of the server.</param>
            <param name="selector">Custom certificate selection logic implementation</param>
            <param name="managedServiceIdentityProvider">The managed service identity provider for MSI based authentication</param>
            <returns>An service that process a <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest"/> through the entire STS chain.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IStsProxyConfiguration">
            <summary>
            Defines the configuration of an STS proxy. This configuration will be used
            by the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IStsProxyFactory"/> and the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IFederationQueryProxyFactory"/>
            to create the desired proxy.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IStsProxyConfiguration.UpdateRequestMetadata(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Updates request metadata with key/value pairs from requestMetadata.</summary>
            <param name="requestMetadata">Dictionary containing custom request metadata.</param>
            <remarks>The caller should clone the configuration before calling this method.</remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IStsProxyFactory">
            <summary>
            Defines an interface to create an STS proxy.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IStsProxyFactory.CreateStsProxy(Microsoft.WindowsAzure.Security.Authentication.IStsProxyConfiguration)">
            <summary>
            Creates a simple security token service proxy.
            </summary>
            <param name="configuration">The configuration of the STS proxy.</param>
            <returns>The security token service proxy.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IStsRetryContext">
            <summary>
            Defines an interface for the retry context, created by the 
            retry policy and consumed by the retrying proxy.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IStsRetryPolicy">
            <summary>
            Defines an interface that specifies the policy to retry a security token service request.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IStsRetryPolicy.CreateContext">
            <summary>
            Creates the initial context before the first attempt to get a security token. This
            context is used to keep track of information about the retrials such as 
            the number of retrials.
            If the STS fails to issue a token, the caller should pass the returned context 
            to <see cref="M:Microsoft.WindowsAzure.Security.Authentication.IStsRetryPolicy.ShouldRetry(Microsoft.WindowsAzure.Security.Authentication.IStsRetryContext,System.Exception)"/> to determine whether it should retry the operation.
            </summary>
            <returns>The context.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IStsRetryPolicy.ShouldRetry(Microsoft.WindowsAzure.Security.Authentication.IStsRetryContext,System.Exception)">
            <summary>
            Determines whether the caller should retry the security token request.
            </summary>
            <param name="context">The context returned by <see cref="M:Microsoft.WindowsAzure.Security.Authentication.IStsRetryPolicy.CreateContext"/>.</param>
            <param name="exception">The exception thrown when requesting a token.</param>
            <returns>true if the caller should retry; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.IStsRetryPolicy.TotalRequestTime">
            <summary>
            The total time allowed for all requests made by this retry policy.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ISubjectAlternativeNameProvider">
            <summary>Defines a provider that retrieves subject alternative names from an X.509 certificate.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ISubjectAlternativeNameProvider.GetDnsNames(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>Extracts the DNS subject alternative names from an X.509 certificate.</summary>
            <param name="certificate">The certificate from which to extract the names.</param>
            <returns>
            The DNS subject alternative names extracted, or <see langword="null"/> if the certificate does not include
            the subject alternative name extension.
            </returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ISubjectCommonNameProvider">
            <summary>Defines a provider that retrieves subject common name from an X.509 certificate.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ISubjectCommonNameProvider.GetCommonName(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>Extracts the subject common name from an X.509 certificate.</summary>
            <param name="certificate">The certificate from which to extract the name.</param>
            <returns>
            The common name extracted, or <see langword="null"/> if the certificate does not contain a common name.
            </returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient">
            <summary>
            Defines the interface for web authentication client.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient.CreateContext(System.String,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata)">
            <summary>
            Creates a context that can be used to authenticate to the specified service. The
            same context can be reused for multiple requests.
            </summary>
            <param name="serviceName">The service name. The service name is part of the realm
            of the service account on dSTS.</param>
            <param name="serviceDnsName">The optional DNS host name of the service. If this value is null,
            empty, or an IP address, the service DNS name returned by the server is used and 
            there is no server authentication.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <returns>The authentication context. The context can be shared by multiple threads.</returns>
            <remarks>The <paramref name="serviceName"/> and <paramref name="serviceDnsName"/> are used
            to construct the service realm (a.k.a. the service SPN), which uniquely identifies the
            service. 
            The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism. For example, the client can send an http request to the metadata
            endpoint or sends a normal unauthenticated service request. In either case, the server 
            returns a 401 Unauthorized response whose WWW-Authenticate header contains the 
            authentication metadata. See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> on how to construct 
            an instance of this class.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient.CreateContext(System.Uri,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata)">
            <summary>
            Creates a context that can be used to authenticate to the specified service. The
            same context can be reused for multiple requests.
            </summary>
            <param name="serviceRealmUri">Service realm (a.k.a. the service SPN), which uniquely identifies the service.</param>
            <param name="serviceDnsName">The optional DNS host name of the service. If this value is null,
            empty, or an IP address, the service DNS name returned by the server is used and 
            there is no server authentication.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <returns>The authentication context. The context can be shared by multiple threads.</returns>
            <remarks>The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism. For example, the client can send an http request to the metadata
            endpoint or sends a normal unauthenticated service request. In either case, the server 
            returns a 401 Unauthorized response whose WWW-Authenticate header contains the 
            authentication metadata. See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> on how to construct 
            an instance of this class.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient.ConfigureRequest(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext,Microsoft.WindowsAzure.Security.Authentication.IOutgoingRequest,System.IDisposable@)">
            <summary>
            Configures the outgoing request for authentication.
            </summary>
            <param name="context">The authentication context returned by CreateContext
            or OnUnauthorized>.</param>
            <param name="request">The outgoing request.</param>
            <param name="requestContext">The request context that the caller must dispose after 
            sending the request over the HTTPS channel.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient.OnUnauthorized(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext,Microsoft.WindowsAzure.Security.Authentication.IIncomingResponse)">
            <summary>
            Handles an unauthorized response from the service.
            </summary>
            <param name="context">The authentication context associated with the 
            previous request.</param>
            <param name="response">The service's error response to the previous request.</param>
            <returns>A new authentication context that should be used to retry the request.</returns>
            <remarks>
            The returned authentication context is incomplete. The caller should pass this context to 
            see <see cref="M:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient.ConfigureRequest(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext,Microsoft.WindowsAzure.Security.Authentication.IOutgoingRequest,System.IDisposable@)"/> to configure authentication on a new request 
            and resend the request. If the authentication succeeds with the new request, the 
            caller should convert the incomplete context to a <see cref="T:Microsoft.WindowsAzure.Security.Authentication.CompleteWebAuthenticationContext"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient.CreateContext(System.String,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata,System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Creates a context that can be used to authenticate to the specified service. The
            same context can be reused for multiple requests. The context is created using the ActAs security token.
            </summary>
            <param name="serviceName">The service name. The service name is part of the realm
            of the service account on dSTS.</param>
            <param name="serviceDnsName">The optional DNS host name of the service. If this value is null,
            empty, or an IP address, the service DNS name returned by the server is used and 
            there is no server authentication.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <param name="actAsToken">Security token for ActAs</param>
            <returns>The authentication context. The context can be shared by multiple threads.</returns>
            <remarks>The <paramref name="serviceName"/> and <paramref name="serviceDnsName"/> are used
            to construct the service realm (a.k.a. the service SPN), which uniquely identifies the
            service. 
            The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism. For example, the client can send an http request to the metadata
            endpoint or sends a normal unauthenticated service request. In either case, the server 
            returns a 401 Unauthorized response whose WWW-Authenticate header contains the 
            authentication metadata. See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> on how to construct 
            an instance of this class.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient.CreateContext(System.Uri,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata,System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Creates a context that can be used to authenticate to the specified service. The
            same context can be reused for multiple requests. The context is created using the ActAs security token.
            </summary>
            <param name="serviceRealmUri">Service realm (a.k.a. the service SPN), which uniquely identifies the service.</param>
            <param name="serviceDnsName">The optional DNS host name of the service. If this value is null,
            empty, or an IP address, the service DNS name returned by the server is used and 
            there is no server authentication.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <param name="actAsToken">Security token for ActAs</param>
            <returns>The authentication context. The context can be shared by multiple threads.</returns>
            <remarks>The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism. For example, the client can send an http request to the metadata
            endpoint or sends a normal unauthenticated service request. In either case, the server 
            returns a 401 Unauthorized response whose WWW-Authenticate header contains the 
            authentication metadata. See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> on how to construct 
            an instance of this class.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient.OnUnauthorized(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext,Microsoft.WindowsAzure.Security.Authentication.IIncomingResponse,System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Handles an unauthorized response from the service. This API should be used for ActAs scenarios.
            </summary>
            <param name="context">The authentication context associated with the 
            previous request.</param>
            <param name="response">The service's error response to the previous request.</param>
            <param name="actAsToken">Security token for ActAs</param>
            <returns>A new authentication context that should be used to retry the request.</returns>
            <remarks>
            The returned authentication context is incomplete. The caller should pass this context to 
            see <see cref="M:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient.ConfigureRequest(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext,Microsoft.WindowsAzure.Security.Authentication.IOutgoingRequest,System.IDisposable@)"/> to configure authentication on a new request 
            and resend the request. If the authentication succeeds with the new request, the 
            caller should convert the incomplete context to a <see cref="T:Microsoft.WindowsAzure.Security.Authentication.CompleteWebAuthenticationContext"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClientFactory">
            <summary>
            Defines a factory that creates <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClientFactory.Create(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a web authentication client.
            </summary>
            <param name="clientCredential">The client credential.</param>
            <param name="clientHomeSts">The client's home dSTS.</param>
            <param name="trustedStsCertificateThumbprints">The dSTS certificate thumbprint.</param>
            <returns>A new <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient"/> object.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClientFactory.Create(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IAuthenticationClientConfiguration)">
            <summary>
            Creates a web authentication client.
            </summary>
            <param name="clientCredential">The client credential.</param>
            <param name="clientHomeSts">The client's home dSTS.</param>
            <param name="authenticationClientConfiguration">Client configuration</param>
            <returns>A new <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IWebAuthenticationClient"/> object.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.IWebRequestInspector">
            <summary>
            Defines an interface to inspect outgoing web requests. Applications can implement
            this interface to configure, for example, the proxy information on the ougoing web 
            requests.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IWebRequestInspector.BeforeSendRequest(System.Net.WebRequest)">
            <summary>
            This method is invoked before the web request is sent.
            </summary>
            <param name="request">The web request.</param>
            <returns>A correlation state to be passed to <see cref="M:Microsoft.WindowsAzure.Security.Authentication.IWebRequestInspector.AfterReceiveResponse(System.Object)"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.IWebRequestInspector.AfterReceiveResponse(System.Object)">
            <summary>
            This method is invoked after the client receives a response from the server or there is 
            failure to receive a response. Applications can use this method clean up resources
            claimed by <see cref="M:Microsoft.WindowsAzure.Security.Authentication.IWebRequestInspector.BeforeSendRequest(System.Net.WebRequest)"/>.
            </summary>
            <param name="correlationState">The correlation state returned by <see cref="M:Microsoft.WindowsAzure.Security.Authentication.IWebRequestInspector.BeforeSendRequest(System.Net.WebRequest)"/>.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.KnownCertificateValidator">
            <summary>
            Represents a validator that validates only when <see cref="M:Microsoft.WindowsAzure.Security.Authentication.KnownCertificateValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)"/> is called with an
            <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate"/> equivalent to one of the provided values.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.KnownCertificateValidator.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.KnownCertificateValidator"/> class.</summary>
            <param name="certificates">The certificates to trust.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.KnownCertificateValidator.#ctor(System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.KnownCertificateValidator"/> class.</summary>
            <param name="certificates">The certificates to trust.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.KnownCertificateValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication.</summary>
            <param name="sender">An object that contains state information for this validation.</param>
            <param name="certificate">The certificate used to authenticate the remote party.</param>
            <param name="chain">The chain of certificate authorities associated with the remote certificate.</param>
            <param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
            <returns>
            A <see cref="T:System.Boolean"/> value that determines whether the specified certificate is accepted for authentication.
            </returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.KnownIssuerX509CertificateValidator">
            <summary>
            Implements X509CertificateValidator to verify dSTS signing certificate against a list of
            known certificates.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.KnownIssuerX509CertificateValidator.#ctor(System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.KnownIssuerX509CertificateValidator"/> class.
            </summary>
            <param name="knownDstsCertificates">The list of known dSTS certificates.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.KnownIssuerX509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Validates the token issuer's certificate.
            </summary>
            <param name="certificate">The certificate to be validated.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.LogEventLevel">
            <summary>Defines the levels of event log messages.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Logger">
            <summary>Implements static methods to log authentication-related events.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.Logger.SetEventLog(Microsoft.WindowsAzure.Security.Authentication.IEventLog)">
            <summary>
            Sets the value returned from the <see cref="P:Microsoft.WindowsAzure.Security.Authentication.Logger.EventLog"/> property. 
            By default, a default event log is used. This method is consumed by unit tests
            to verify the logging behavior.
            </summary>
            <param name="instance">The new value of the <see cref="P:Microsoft.WindowsAzure.Security.Authentication.Logger.EventLog"/> property. 
            If the value of this parameter is null, the property will be set to a default
            value.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.LoggingCertificateValidator">
            <summary>
            Represents a passthrough certificate validator that logs a message
            when the inner validator rejects a certificate.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.LoggingCertificateValidator.#ctor(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator,System.String,Microsoft.WindowsAzure.Security.Authentication.LogEventLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.LoggingCertificateValidator"/> class.
            </summary>
            <param name="innerValidator">The inner validator that requires logging.</param>
            <param name="messageOnFailure">
            The message to log when the inner validator rejects a remote certificate. The message must end with
            a period.</param>
            <param name="logLevelOnFailure">The level of the log event when the inner validator rejects
            a remote certificate.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.LoggingCertificateValidator.Validator">
            <summary>
            Gets the inner certificate validator.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.LogHelpers">
            <summary>
            Contains helper methods used by logging code.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.MainRealmCertificateValidator">
            <summary>
            Represents a validator that validates only when Validate is called with a certificate whose main realm matches
            the provided value.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.NameMatchCertificateValidator">
            <summary>
            Represents a validator that validates as long as when <see cref="M:Microsoft.WindowsAzure.Security.Authentication.NameMatchCertificateValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)"/> is not called with
            <see cref="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch"/> set.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.NoPolicyErrorsCertificateValidator">
            <summary>
            Represents a validator that validates only when <see cref="M:Microsoft.WindowsAzure.Security.Authentication.NoPolicyErrorsCertificateValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)"/> is called with
            <see cref="F:System.Net.Security.SslPolicyErrors.None"/>.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.NoStsRetryPolicy">
            <summary>
            Represents a no-retry policy.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.OutgoingWcfRequest">
            <summary>
            Represents an outgoing web request from WCF htttp channel.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.OutgoingWcfRequest.#ctor(System.ServiceModel.Channels.Message,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.OutgoingWcfRequest"/> class.
            </summary>
            <param name="requestMessage">The request message being handled by the WCF channels.</param>
            <param name="requestUri">The URI of the request.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.OutgoingWcfRequest.AuthorizationHeader">
            <summary>
            Gets or sets the authorization header.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.OutgoingWcfRequest.ConfigureServiceCertificates(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator,System.IDisposable@)">
            <summary>
            Configures the web request to allow the specified service certificates over https.
            </summary>
            <param name="serviceCertificateValidator">Validator of the service certificate.</param>
            <param name="requestContext">A context object that the client must dispose after sending 
            the request. This value can be null if there is no context to dispose.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.OutgoingWebRequest">
            <summary>
            Represents the outgoing web request.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.OutgoingWebRequest.#ctor(System.Net.HttpWebRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.OutgoingWebRequest"/> class.
            </summary>
            <param name="webRequest">The web request.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.OutgoingWebRequest.AuthorizationHeader">
            <summary>
            Gets or sets the authorization header.
            </summary>
            <remarks>
            HttpWebRequest's auto-redirection drops the authorization header. 
            We disable auto-redirection to address a common issue, where a redirection 
            happens with some versions of Windows Server when the URL expected by the server 
            differs from URL specified by the client in only the trailing slash. IIS would 
            automatically return a response to redirect the client to the expected URL. 
            The HttpWebRequest's auto-redirection would cause the client to resend the 
            request without the authorization header.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.OutgoingWebRequest.ConfigureServiceCertificates(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator,System.IDisposable@)">
            <summary>
            Configures the web request to allow the specified service certificates over https.
            </summary>
            <param name="serviceCertificateValidator">Validator of the service certificate.</param>
            <param name="requestContext">A context object that the client must dispose after sending 
            the request. This value can be null if there is no context to dispose.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.PriorityQueue`2">
            <summary>Represents a priority queue.</summary>
            <typeparam name="TPriority">The type of priorties in the queue.</typeparam>
            <typeparam name="TValue">The type of values in the queue.</typeparam>
            <remarks>The values are retrieved based on their priorities. (The priorities are used for sorting.)</remarks>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.PriorityQueue`2.FirstInFirstOutIndex">
            <summary>After ordering by priority, return values in FIFO order.</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.PriorityQueue`2.HighestPriorityIndex">
            <summary>Since the list is sorted, the highest priority keys and values are at index 0.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.PriorityQueue`2.#ctor(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})">
            <summary>Constructor for the priority queue class.</summary>
            <param name="comparer">The comparer used to sort the SortedList</param>
            <param name="listComparer">Optional param used to compare security token requests.</param>
            <remarks>The second param is only used in the case where store.values contains SecurityTokenIssuanceRequests
            in all other cases the default comparer will be used.</remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.InvalidateCacheOnRejectedCertificateValidator">
            <summary>
            Represents a remote certificate validator that invokes an inner validator and invalidates
            the security token in the per-process cache if the inner validator rejects the 
            server certificate.
            </summary>
            <remarks>
            This class is used to handle the server certificate rollover scenario. In that case, 
            the old security token response in the token cache does not contain the new server 
            certificate. The client should get a fresh security token response containing both 
            the old and new server certificates.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.InvalidateCacheOnRejectedCertificateValidator.#ctor(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator,Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.InvalidateCacheOnRejectedCertificateValidator"/> class.
            </summary>
            <param name="inner">The inner certificate validator.</param>
            <param name="tokenResponse">The security token response associated with this certificate validator.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.InvalidateCacheOnRejectedCertificateValidator.#ctor(Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator,Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceResponse,Microsoft.WindowsAzure.Security.Authentication.ICacheManager{Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceResponse})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.InvalidateCacheOnRejectedCertificateValidator"/> class.
            </summary>
            <param name="inner">The inner certificate validator.</param>
            <param name="tokenResponse">The security token response associated with this certificate validator.</param>
            <param name="cacheManager">The security token cache manager.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.InvalidateCacheOnRejectedCertificateValidator.Microsoft#WindowsAzure#Security#Authentication#IConnectionGroup#Name">
            <summary>
            Gets the name of the connection group.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.InvalidateCacheOnRejectedCertificateValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication. If
            the certificate is invalid, the method removes the security token response from the cache.</summary>
            <param name="sender">An object that contains state information for this validation.</param>
            <param name="certificate">The certificate used to authenticate the remote party.</param>
            <param name="chain">The chain of certificate authorities associated with the remote certificate.</param>
            <param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
            <returns>
            A <see cref="T:System.Boolean"/> value that determines whether the specified certificate is accepted for authentication.
            </returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.RealmSuffixProvider">
            <summary>
            Represents a provider that determines the realm suffix from a subject DNS name as used in an X.509 certificate.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.RealmSuffixProvider.GetSuffix(System.String)">
            <summary>Extracts the realm suffix from a subject DNS name.</summary>
            <param name="subjectDnsName">The subject DNS name, as used in an X.509 certificate.</param>
            <returns>
            The realm suffix from the subject DNS name, or <see langword="null"/> if the subject DNS name does not
            represent a dSTS realm.
            </returns>
            <example>*.dsts.localhost: localhost</example>
            <example>*.dsts.example.com: example.com</example>
            <example>*.dsts.root: null</example>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.RetryingFederationQueryProxy">
            <summary>
            Represents a proxy capable of retrying to query the token issuance URL endpoints
            from the dSTS.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.RetryingFederationQueryProxy.#ctor(Microsoft.WindowsAzure.Security.Authentication.IStsProxyConfiguration,System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Security.Authentication.Contracts.AuthenticationMethod},Microsoft.WindowsAzure.Security.Authentication.IFederationQueryProxyFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.RetryingFederationQueryProxy"/> class.
            </summary>
            <param name="configuration">The configuration of the proxy.</param>
            <param name="innerProxyFactory">A factory to create the underlying proxy to be called for each retry.</param>
            <param name="availableAuthenticationMethods"></param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.RetryingFederationQueryProxy.GetFederationTokenIssuanceUrls(System.String,System.String,System.String)">
            <summary>
            Gets the STS endpoint address on the federation server for a specified domain. 
            </summary>
            <param name="domainName">The fully qualified domain name.</param>
            <param name="serviceRealm">The realm to be authenticated to</param>
            <param name="requestId">Request Id for logging</param>
            <returns>The URL of the STS endpoint or null if there is no federation for the specified
            domain on the dSTS.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.RetryingSigningKeyDiscoveryProxy">
            <summary>
            Represents a <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ISigningKeyDiscoveryService"/> proxy that retries the requests
            using a retry policy specified in the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IStsProxyConfiguration"/>.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.RetryingStsProxy">
            <summary>
            Represents a security token service that retries the request.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.RetryingStsProxy.Issue(Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            See the summary on the interface method definition.
            </summary>
            <param name="request">The security token issuance request.</param>
            <param name="requestMetadata">Dictionary containing custom request metadata.</param>
            <returns>The security token issuance response.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.RoutingCertificateValidator`1">
            <summary>Represents a certificate validator that routes to registered validators (per some key).</summary>
            <typeparam name="TKey">The key type used to associate the callback with a web request. For example,
            the request may be associated with a URI or a WebRequest object.</typeparam>
            <remarks>
            If a key is registered, this validator always answers based on registered validators, ignoring any previous
            validator and PKI.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.RoutingCertificateValidator`1.#ctor(System.Net.Security.RemoteCertificateValidationCallback,System.Collections.Generic.IDictionary{`0,System.Collections.Generic.IEnumerable{System.Net.Security.RemoteCertificateValidationCallback}},System.Object,System.Func{System.Object,`0})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.RoutingCertificateValidator`1"/> class.</summary>
            <param name="previousCallback">The previously-registered callback.</param>
            <param name="validators">The shared set of registered validators.</param>
            <param name="validatorsLock">The lock to use when accessing validators.</param>
            <param name="senderIdentifier">A function that can extract a key from the sender object.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.RoutingCertificateValidator`1.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication.</summary>
            <param name="sender">An object that contains state information for this validation.</param>
            <param name="certificate">The certificate used to authenticate the remote party.</param>
            <param name="chain">The chain of certificate authorities associated with the remote certificate.</param>
            <param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
            <returns>
            A <see cref="T:System.Boolean"/> value that determines whether the specified certificate is accepted for authentication.
            </returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Saml2SecurityTokenSerializer">
            <summary>
            Implements the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenSerializer"/> to deserialize
            a <see cref="T:Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityToken"/>.
            </summary>
            <remarks>
            This class is used by the server to derialize an authorization header to a SAML 2.0 
            security token.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.Saml2SecurityTokenSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Saml2SecurityTokenSerializer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.Saml2SecurityTokenSerializer.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Saml2SecurityTokenSerializer"/> class.
            </summary>
            <param name="tokenHandler">The security token handler used by this class.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.Saml2SecurityTokenSerializer.CanSerialize(System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Determines whether the specified security token can be serialized.
            </summary>
            <param name="token">The security token to serialize.</param>
            <returns>true if the token can be serialized; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.Saml2SecurityTokenSerializer.Serialize(System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Serialize a security token to a string.
            </summary>
            <param name="token">The security token to serialize.</param>
            <returns>A string representing the serialized token.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.Saml2SecurityTokenSerializer.CanDeserialize(System.String)">
            <summary>
            Determines whether the specified string can be deserialized into a token.
            </summary>
            <param name="serializedToken">The string representing a serialized token.</param>
            <returns>true if the string can be deserialized into a token; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.Saml2SecurityTokenSerializer.Deserialize(System.String)">
            <summary>
            Deserialize a string into a security token.
            </summary>
            <param name="serializedToken">The string representing a serialized token.</param>
            <returns>The security token.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityCredentialException">
            <summary>
            The exception that is thrown when an authentication credential cannot
            be obtained or initialized.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityCredentialException.#ctor">
            <summary>
            Initializes a new instance of the SecurityCredentialException class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityCredentialException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SecurityCredentialException class
            with a specified error message.
            </summary>
            <param name="message">The error message string.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityCredentialException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SecurityCredentialException class
            with a specified error message and a reference to the inner 
            exception that is the cause of this exception.
            </summary>
            <param name="message">The error message string.</param>
            <param name="innerException">The exception that is the cause of the 
            current exception.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityCredentialException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SecurityCredentialException class
            from the serialization information.
            </summary>
            <param name="info">The serialization information.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenHandlerConfigurationElement.ApplyConfiguration(Microsoft.IdentityModel.Configuration.ServiceConfiguration)">
            <summary>
            Implements the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.IServiceConfigurationElement"/> interface.
            </summary>
            <param name="configuration">The service configuration.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest">
            <summary>
            Represents a security token request.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequestEqualityComparer">
            <summary>
            Represents an <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for an <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest"/>.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceResponse">
            <summary>
            Contains the client's security token and a list of server certificates 
            to authenticate the server.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceResponse.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceResponse"/> class.</summary>
            <param name="token">The security token.</param>
            <param name="serverCertificates">The known server certificates, or null if there is no server certificate.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceResponse.SecurityToken">
            <summary>
            Gets the security token in the response.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceResponse.ServerCertificates">
            <summary>
            Gets the list of server certificates in the response.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceException">
            <summary>
            The exception that is thrown when a security token cannot be issued.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceException.#ctor">
            <summary>
            Initializes a new instance of the SecurityTokenIssuanceException class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SecurityTokenIssuanceException class
            with a specified error message.
            </summary>
            <param name="message">The error message string.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SecurityTokenIssuanceException class
            with a specified error message and a reference to the inner 
            exception that is the cause of this exception.
            </summary>
            <param name="message">The error message string.</param>
            <param name="innerException">The exception that is the cause of the 
            current exception.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SecurityTokenIssuanceException class
            from the serialization information.
            </summary>
            <param name="info">The serialization information.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenServiceCache">
            <summary>Represents a cache for an <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenService"/>.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenServiceCacheManager">
            <summary>Represents a cache manager for a security token service.</summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenServiceCacheManager.Instance">
            <summary>Gets the sole instance of this class (singleton).</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata">
            <summary>
            Define the data contract for authentication metadata from the server. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata.Version">
            <summary>
            Gets or sets the version of the authentication metadata.
            </summary>
            <remarks>
            This property is not available in version 0 of the metadata.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata.StsRealmName">
            <summary>
            Gets or sets the server's dSTS realm name as registered with the client's dSTS or ADFS server. For example:
            "realm://dsts.core.windows.net/".
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata.CertificateStsAddress">
            <summary>
            Gets or sets the URL of the STS address on this dSTS from which a client with certificate credential can
            request a security token.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata.IssuedTokenStsAddress">
            <summary>
            Gets or sets the URL of the STS address on this dSTS from which a client with a federated token, which is
            issued by the client's ADFS or another dSTS, can request a security token. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata.DstsDiscoveryAddress">
            <summary>
            Gets or sets the URL of the endpoint from which the client can query the dSTS for federations signing key
            rollover.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata.DnsHostName">
            <summary>
            Gets or sets the DNS host name of the service account used by the client to construct the service account
            realm to request a security token in case the client is not using DNS name to address the service.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata.TrustedStsThumbprints">
            <summary>
            Gets or sets a list of thumbprints of dSTS certificates trusted by the service.
            This list can change over time as the service gets the new signing key 
            chain from dSTS.
            </summary>
            <remarks>
            This propety is not available in version 0 of the metadata.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata.KnownStsThumbprints">
            <summary>
            Gets or sets a list of thumbprints of dSTS certificates configured with the service. 
            This list is used by the service to verify the signing key chain from dSTS.
            </summary>
            <remarks>
            This propety is not available in version 0 of the metadata.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata.#ctor(Microsoft.WindowsAzure.Security.Authentication.LegacyNamespace.ServerAuthenticationMetadata)">
            <summary>
            Create an instance of ServerAuthenticationMetadata with legacy namespace
            </summary>
            <param name="legacyNamespaceMetadata"></param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationMetadata.#ctor">
            <summary>
            Create an instance of ServerAuthenticationMetadata 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.LegacyNamespace.ServerAuthenticationMetadata">
            <summary>
            This is same as the above class except for the data contract namespace 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.LegacyNamespace.ServerAuthenticationMetadata.ExtensionData">
            <summary>
            Extension Data
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.LegacyNamespace.ServerAuthenticationMetadata.Version">
            <summary>
            Gets or sets the version of the authentication metadata.
            </summary>
            <remarks>
            This property is not available in version 0 of the metadata.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.LegacyNamespace.ServerAuthenticationMetadata.StsRealmName">
            <summary>
            Gets or sets the server's dSTS realm name as registered with the client's dSTS or ADFS server. For example:
            "realm://dsts.core.windows.net/".
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.LegacyNamespace.ServerAuthenticationMetadata.CertificateStsAddress">
            <summary>
            Gets or sets the URL of the STS address on this dSTS from which a client with certificate credential can
            request a security token.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.LegacyNamespace.ServerAuthenticationMetadata.IssuedTokenStsAddress">
            <summary>
            Gets or sets the URL of the STS address on this dSTS from which a client with a federated token, which is
            issued by the client's ADFS or another dSTS, can request a security token. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.LegacyNamespace.ServerAuthenticationMetadata.DstsDiscoveryAddress">
            <summary>
            Gets or sets the URL of the endpoint from which the client can query the dSTS for federations signing key
            rollover.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.LegacyNamespace.ServerAuthenticationMetadata.DnsHostName">
            <summary>
            Gets or sets the DNS host name of the service account used by the client to construct the service account
            realm to request a security token in case the client is not using DNS name to address the service.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.LegacyNamespace.ServerAuthenticationMetadata.TrustedStsThumbprints">
            <summary>
            Gets or sets a list of thumbprints of dSTS certificates trusted by the service.
            This list can change over time as the service gets the new signing key 
            chain from dSTS.
            </summary>
            <remarks>
            This propety is not available in version 0 of the metadata.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.LegacyNamespace.ServerAuthenticationMetadata.KnownStsThumbprints">
            <summary>
            Gets or sets a list of thumbprints of dSTS certificates configured with the service. 
            This list is used by the service to verify the signing key chain from dSTS.
            </summary>
            <remarks>
            This propety is not available in version 0 of the metadata.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationProvider">
            <summary>
            Represents the server authentication provider. 
            </summary>
            <remarks>
            This is the top-level class that server-side services use to configure its 
            authentication settings.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationProvider.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity)">
            <summary>
            Initializes a new instance of the ServerAuthenticationProvider class.
            </summary>
            <param name="serverHomeDsts">The server home dSTS information.</param>
            <param name="serviceIdentity">The service identity.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationProvider.#ctor(Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration)">
            <summary>
            Initializes a new instance of the ServerAuthenticationProvider class.
            </summary>
            <param name="configuration">The service configuration.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationProvider.CreateAuthenticationMetadata">
            <summary>   
            Creates opaque authentication metadata that can be used by the server
            to construct the WCF Message object returned to the client.
            </summary>
            <returns>
            The opaque authentication metadata.
            </returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationProvider.CreateAuthenticationMetadataOnClient">
            <summary>
            In certain scenarios where authentication metadata is not expected to change, client may prefer to create authentication metadata locally.
            CreateAuthenticationMetadata also has same effect but has overhead of network call to get signing cert from DSTS. Signing cert information is only required on server.
            </summary>
            <returns>The opaque authentication metadata.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServerAuthenticationProvider.ConfigureServiceHost(System.ServiceModel.ServiceHost)">
            <summary>
            Configures the WCF service host to accept federated credentials.
            </summary>
            <param name="serviceHost">The service host.</param>
            <remarks>
            This method must be called before the service host is opened. 
            In addition, it recommended that the service endpoints are added
            to the service host prior to calling this method.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ServerDstsCertificateValidator">
            <summary>Represents validator for a server's dSTS.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ServerHomeDsts">
            <summary>
            Representing the necessary information about the dSTS
            for the purpose of authentication.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServerHomeDsts.#ctor(System.Uri,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
            Initializes a new instance of the ServerHomeDsts class.
            See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts"/> for more information.
            </summary>
            <param name="dstsRealm">The realm name of the dSTS.</param>
            <param name="dstsDnsHostName">The DNS host name of the dSTS.</param>
            <param name="dstsCertificates">The list of dSTS public certificates
            that the server trusts. These certificates are used to validate
            the issuer of incoming security tokens.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServerHomeDsts.#ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Initializes a new instance of the ServerHomeDsts class.
            See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts"/> for more information.
            </summary>
            <param name="dstsRealm">The realm name of the dSTS.</param>
            <param name="dstsDnsHostName">The DNS host name of the dSTS.</param>
            <param name="dstsCertificates">The list of dSTS public certificates
            that the server trusts. These certificates are used to validate
            the issuer of incoming security tokens.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServerHomeDsts.#ctor(System.Uri,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Initializes a new instance of the ServerHomeDsts class.
            See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts"/> for more information.
            </summary>
            <param name="dstsRealm">The realm name of the dSTS.</param>
            <param name="dstsDnsHostName">The DNS host name of the dSTS.</param>
            <param name="dstsCertificates">The list of dSTS public certificates
            that the server trusts. These certificates are used to validate
            the issuer of incoming security tokens.</param>
            <param name="dstsPort">Port that the dSTS accepts token issuance request on.
            This overrides any value specified in appconfig</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServerHomeDsts.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts)">
            <summary>
            Initializes a new instance of the ServerHomeDsts class.
            </summary>
            <param name="serverHomeDsts">An object containing the server home dSTS
            information from which this class should initialize.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServerHomeDsts.DstsRealm">
            <summary>
            Gets the dSTS realm name.
            </summary>
            <remarks>
            See the comment on the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts"/> interface.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServerHomeDsts.DstsDnsHostName">
            <summary>
            Gets the dSTS host name.
            </summary>
            <remarks>
            See the comment on the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts"/> interface.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServerHomeDsts.OverrideDstsPort">
            <summary>
            Gets the dSTS token issuance port.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServerHomeDsts.DstsCertificates">
            <summary>
            Gets the list of dSTS certificates.
            </summary>
            <remarks>
            See the comment on the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts"/> interface.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ServiceIdentity">
            <summary>
            Represents the service identity.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServiceIdentity.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ServiceIdentity"/> class.
            </summary>
            <param name="serviceDnsHostName">The service DNS host name.</param>
            <param name="serviceNames">The service names.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServiceIdentity.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ServiceIdentity"/> class.
            </summary>
            <param name="serviceDnsHostName">The service DNS host name.</param>
            <param name="serviceNames">The service names.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServiceIdentity.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ServiceIdentity"/> class.
            </summary>
            <param name="serviceDnsHostName">The service DNS host name.</param>
            <param name="serviceNames">The service names.</param>
            <param name="additonalDnsHostNames">Additonal DNS names that the service will accept tokens for.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServiceIdentity.ServiceDnsHostName">
            <summary>
            Gets the service DNS host name.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServiceIdentity.ServiceNames">
            <summary>
            Gets the list of service name.
            </summary>
            <remarks>
            The service name is the UserInfo part of the service target 
            name (or service realm).
            For example: If the service realm is svc://name@host/, then 'name'
            is the service name and 'host' is the service DNS host name.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServiceIdentity.AdditonalDnsHostNames">
            <summary>
            Gets the list of host names that the service will accept tokens for in addition to ServiceDnsHostName
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ServiceIpOnlyCertificateValidator">
            <summary>
            In the case the service is being referenced by IP address, we must find another way
            to validate the certificate. In this case we verify that the certificate has authority
            over the requested DNS name from authentication metadata.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ServicePointManagerStaticCertificateValidationCallbackContext">
            <summary>
            Represents the static (AppDomain-wide) context in which ServicePointManager-based certificate validation occurs
            (a validation callback).
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServicePointManagerStaticCertificateValidationCallbackContext.CurrentCallback">
            <summary>Gets or sets the current callback.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ServiceRealmCertificateValidator">
            <summary>
            Represents a validator that validates only when Validate is called with a certificate whose main realm matches
            the provided value.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServiceRealmCertificateValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            This namespace check in this function has been disabled.
            </summary>
            <param name="sender"></param>
            <param name="certificate"></param>
            <param name="chain"></param>
            <param name="sslPolicyErrors"></param>
            <returns>Should always return true.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServiceRealmCertificateValidator.HasAuthorityOverThisService(System.String)">
            <summary>
             The check in this method that validates namespace has been disabled.
            </summary>
            <param name="subjectDnsName"></param>
            <returns>Will return true if subjectDnsName is not null</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ServiceSettings">
            <summary>
            Represents the key value pair settings of a service.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServiceSettings.Settings">
            <summary>
            Gets or sets service settings. The setter is used by unit tests
            to override some service settings.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ServiceTargetName">
            <summary>
            Represents the service target name used to identify the service for the purpose of 
            authentication.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServiceTargetName.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ServiceTargetName"/> class.
            </summary>
            <param name="serviceName">The service name.</param>
            <param name="dnsHostName">The DNS host name of the sevice.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServiceTargetName.ServiceName">
            <summary>
            Gets the service name.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ServiceTargetName.DnsHostName">
            <summary>
            Gets the service DNS host name.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ServiceTargetName.ToString">
            <summary>
            Returns the string representation of the service target name.
            </summary>
            <returns>The canonical string format of the service target name.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoveryProxy">
            <summary>
            Implements the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ISigningKeyDiscoveryService"/> interface by sending a request
            to dSTS to obtain the latest signing key chain.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoveryProxy.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoveryProxy"/> class.
            </summary>
            <param name="federationMetadataEndpointAddress">The address of the dSTS federation metadata address.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoveryProxy.#ctor(System.Uri,Microsoft.WindowsAzure.Security.Authentication.IAlternateStsPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoveryProxy"/> class.
            </summary>
            <param name="federationMetadataEndpointAddress">The address of the dSTS federation metadata address.</param>
            <param name="dnsBasedAlternateStsPolicy">Dns based alternate STS policy </param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoveryProxy.#ctor(System.Uri,Microsoft.WindowsAzure.Security.Authentication.IAlternateStsPolicy,Microsoft.WindowsAzure.Security.Authentication.IRequestClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoveryProxy"/> class.
            </summary>
            <param name="federationMetadataEndpointAddress">The address of the dSTS federation metadata address.</param>
            <param name="dnsBasedAlternateStsPolicy">Dns based alternate STS policy </param>
            <param name="requestClient">Client implementation of now to request federation metadata</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoveryProxy.GetSigningKeys(System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2})">
            <summary>
            Gets the signing keys.
            <param name="serviceIdentity">"Service Realm identifier."</param>
            <param name="trustedCertificates">"List of certificates the service trust."</param>
            </summary>
            <returns>The signing keys.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoveryProxyFactory">
            <summary>
            Represents a factory that creates a proxy that retrieves the signing key chain from dSTS.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.SigningKeyDiscoveryProxyFactory.Instance">
            <summary>
            Gets or sets the shared instance of the factory. The setter is called by unit tests.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.StsHighAvailibilityExecutor`3">
            <summary>
            Base class for performing STS operations against multiple endpoints in parallel.
            </summary>
            <typeparam name="T">Proxy type</typeparam>
            <typeparam name="U">Argument type</typeparam>
            <typeparam name="V">Return type</typeparam>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsHighAvailibilityExecutor`3.InvokeProxy(`0,`1,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Invoke the given proxy with the given arguments.
            Must be thread safe.
            </summary>
            <param name="proxy"></param>
            <param name="arg"></param>
            <param name="requestMetadata"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.StsProxy">
            <summary>
            Implements a simple proxy of the security token service.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsProxy.Issue(Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            See the summary on the interface method definition.
            </summary>
            <param name="request">The security token issuance request.</param>
            /// <param name="requestMetadataParam">Dictionary containing custom request metadata.</param>
            <returns>The security token issuance response.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsProxy.IssueWSTrustToken(Microsoft.IdentityModel.Protocols.WSTrust.IWSTrustChannelContract,Microsoft.IdentityModel.Protocols.WSTrust.RequestSecurityToken,Microsoft.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
            <summary>
            Requests a security token from the STS. 
            Unit tests can override this method to avoid going to the network.
            </summary> 
            <param name="channel">An IWSTrustChannelContractobject that can issue a security token.</param>
            <param name="wsTrustRequest">The WSTrust security token request.</param>
            <param name="wsTrustResponse">The response from the security token service.</param>
            <returns>The requested security token.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsProxy.CreateChannelFactory">
            <summary>
            Create a channel factory with the specified Binding object.
            Unit tests can override this method to verify the channel factory states.
            </summary>
            <returns>The WS-Trust channel factory.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsProxy.CreateBinding(System.ServiceModel.Channels.Binding)">
            <summary>
            Creates a binding for the WSTrust channel used to request a 
            security token. This class implementation of the protected method 
            does nothing, but derived classes can customize the binding
            as needed (e.g. configuring timeouts).
            </summary>
            <param name="baseBinding">The original binding.</param>
            <returns>The new binding or the same binding as 
            <paramref name="baseBinding"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsProxy.ExtractServerCertificatesFromTokenResponse(Microsoft.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.String)">
            <summary>
            Extracts the server certificates from the an RSTR.
            </summary>
            <param name="tokenResponse">The RequestSecurityTokenResponse object returned by the STS.</param>
            <param name="requestId">RequestId to use for logging</param>
            <returns>A list of server certificate, or null if there is none.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsProxy.ExtractAlternateIdentityCertificates(System.ServiceModel.EndpointAddress)">
            <summary>
            Extracts server's alternate certificates from the AppliesTo field of the 
            RequestSecurityTokenResponse (RSTR).
            </summary>
            <param name="appliesTo">The AppliesTo in the RSTR.</param>
            <returns>The list of server certificates including one primary certificate 
            and optional alternate certificates in the RSTR.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsProxy.GetSupportedActAsSecurityToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            If System.IdentityModel.Token.Saml2SecurityToken is provided it will return back
            Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityToken token. The library is using
            WIF 3.5 and is not able to serialize the newer Saml2SecurityToken in the ActAs field.
            All other SecurityTokens are returned as is.
            </summary>
            <param name="actAsToken">ActAs security token</param>
            <returns>Security token</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsProxyConfiguration.UpdateRequestMetadata(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Updates request metadata with key/value pairs from requestMetadata.</summary>
            <param name="requestMetadata">Dictionary containing custom request metadata.</param>
            <remarks>The caller should clone the configuration before calling this method.</remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.StsProxyFactory">
            <summary>
            Implements the factory interface to create STS proxies.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsProxyFactory.CreateStsProxy(Microsoft.WindowsAzure.Security.Authentication.IStsProxyConfiguration)">
            <summary>
            Creates a simple security token service proxy.
            </summary>
            <param name="configuration">The configuration of the STS proxy.</param>
            <returns>The security token service proxy.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.StsClientServiceFactory">
            <summary>
            Implements a factory that creates different STS client services.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsClientServiceFactory.CreateFederatedStsProxy(Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenService,System.Uri,Microsoft.WindowsAzure.Security.Authentication.IFederationQueryService)">
            <summary>
            Creates a proxy to a federated STS. 
            The method adds the federation capability to a given security token service.
            </summary>
            <param name="securityTokenService">The underlying security token service.</param>
            <param name="realmName">The realm name of the dSTS.</param>
            <param name="federationQueryService">The object that can query the federation 
            information.</param>
            <returns>The new security token service proxy.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsClientServiceFactory.CreateFederatedStsProxyChain(Microsoft.WindowsAzure.Security.Authentication.IFederatedSecurityTokenService,Microsoft.WindowsAzure.Security.Authentication.IStsProxyFactory,Microsoft.WindowsAzure.Security.Authentication.IStsRetryPolicy,System.Collections.Generic.IEnumerable{System.String},Microsoft.WindowsAzure.Security.Authentication.ICache{Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest,Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceResponse},System.Boolean,Microsoft.WindowsAzure.Security.Authentication.Contracts.ICertificateSelector)">
            <summary>
            Creates a proxy chain that can request a security token from a 
            federated STS through federation. 
            </summary>
            <param name="federatedSts">The proxy to the server's federated STS.</param>
            <param name="adfsProxyFactory">The factory used to create a proxy to the ADFS 
            security token service.</param>
            <param name="adfsRetryPolicy">The retry policy talking to the ADFS.</param>
            <param name="trustedStsCertificateThumbprints">
            The STS certificate thumbprints trusted by the client.
            </param>
            <param name="tokenCache">The cache to use for federated tokens.</param>
            <param name="isInteractive">Is the caller an interactive application.</param>
            <param name="certificateSelector">Custom certificate selection logic implementation</param>
            <returns>The security token service that represents the federation chain.</returns>
            <remarks>See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.FederatedStsProxyChain"/> for more information.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsClientServiceFactory.CreateCrossDatacenterStsProxyChain(System.Uri,Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenService,Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenService)">
            <summary>
            Creates a proxy chain that can request a security token from a
            dSTS in a different datacenter.
            </summary>
            <param name="serverRealmName">The realm name of the server's dSTS as it is registered
            on the client's dSTS.</param>
            <param name="clientSts">The client's STS.</param>
            <param name="serverSts">The server's STS.</param>
            <returns>The new security token service that represents the chain.</returns>
            <remarks>See the method implementation in <see cref="T:Microsoft.WindowsAzure.Security.Authentication.StsClientServiceFactory"/> for more information.</remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.StsChainFactory">
            <summary>Represents a factory that creates an STS chain.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsChainFactory.Create(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,System.Uri,System.Uri,System.Uri,System.Uri,System.Uri,System.String,Microsoft.WindowsAzure.Security.Authentication.Contracts.ICertificateSelector,Microsoft.WindowsAzure.Security.Authentication.IManagedServiceIdentityProvider)">
            <summary>
            Creates the STS chain that can talk to any number of intermediary security token services and discovery
            services to get the final requested security token. Also allows caller to pass in custom cert selection logic in case of smart card authentication
            </summary>
            <param name="clientCredential"></param>
            <param name="federationQueryUrl">The URL of the federation query endpoint on the server's STS.</param>
            <param name="clientCertificateStsUrl">
            The URL from which to request a token when using a certificate as credentials to talk to the client's STS.
            </param>
            <param name="serverCertificateStsUrl">
            The URL from which to request a token when using a certificate as credentials to talk to the server's STS.
            </param>
            <param name="serverIssuedTokenStsUrl">
            The URL from which to request a token when using an issued token as credentials to talk to the server's STS.
            </param>
            <param name="serverStsRealmName">The STS realm name of the server.</param>
            <param name="serverDnsHostName">The DNS host name of the server.</param>
            <param name="certificateSelector">Custom certificate selection logic implementation</param>
            <param name="managedServiceIdentityProvider"></param>
            <returns>An service that process a <see cref="T:Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest"/> through the entire STS chain.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsChainFactory.IsSameDatacenter(System.Uri,System.Uri)">
            <summary>
            Determines whether the client and the server have an account in the same datacenter security token service
            (dSTS).
            </summary>
            <param name="clientCertificateStsUrl">
            The URL from which to request a token when using a certificate as credentials to talk to the client's STS.
            </param>
            <param name="serverCertificateStsUrl">
            The URL from which to request a token when using a certificate as credentials to talk to the server's STS.
            </param>
            <returns>Returns <see langword="true"/> if the client and the server share the same dSTS.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsChainFactory.CreateFederatedStsProxyChain(System.Uri,System.Uri,System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Nullable{Microsoft.WindowsAzure.Security.Authentication.Contracts.AuthenticationMethod},Microsoft.WindowsAzure.Security.Authentication.Contracts.SelfFederationMode,Microsoft.WindowsAzure.Security.Authentication.Contracts.ICertificateSelector)">
            <summary>
            Creates a proxy that can request a security token from a federated STS. The proxy only accepts Windows
            credential and there must be a federation between the client's ADFS and the server's dSTS.
            </summary>
            <param name="federationQueryUrl">The URL of the federation query endpoint on the server's STS.</param>
            <param name="serverIssuedTokenStsUrl">
            The URL from which to request a token when using an issued token as credentials to talk to the server's STS.
            </param>
            <param name="serverStsRealmName">The STS realm name of the server.</param>
            <param name="serverDnsHostName">The DNS host name of the server.</param>
            <param name="trustedStsCertificateThumbprints">
            The STS certificate thumbprints trusted by the client.
            </param>
            <param name="isInteractive"></param>
            <param name="federatedAuthenticationMethod"></param>
            <param name="certificateSelector">Custom certificate selection logic implementation</param>
            <param name="selfFederationMode"></param>
            <returns>
            The federation proxy is constructed from other proxies, each of which adds a new unit of functionality.
            </returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsChainFactory.CreateCrossDatacenterStsProxyChain(System.Uri,System.Uri,System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.WindowsAzure.Security.Authentication.IManagedServiceIdentityProvider)">
            <summary>
            Creates a proxy that can request a security token for a server whose account in a different datacenter STS.
            </summary>
            <param name="clientCertificateStsUrl">
            The URL from which to request a token when using a certificate as credentials to talk to the client's STS.
            </param>
            <param name="serverIssuedTokenStsUrl">
            The URL from which to request a token when using an issued token as credentials to talk to the server's STS.
            </param>
            <param name="serverStsRealmName">The STS realm name of the server.</param>
            <param name="serverDnsHostName">The DNS host name of the server.</param>
            <param name="trustedStsCertificateThumbprints">
            The STS certificate thumbprints trusted by the client.
            </param>
            <param name="managedServiceIdentityProvider"></param>
            <returns>The proxy to the security token service.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsChainFactory.CreateFederationQueryProxy(System.Uri,System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Nullable{Microsoft.WindowsAzure.Security.Authentication.Contracts.AuthenticationMethod},Microsoft.WindowsAzure.Security.Authentication.Contracts.SelfFederationMode)">
            <summary>
            Create a proxy that can query federation information. This  proxy validates the dSTS certificate in the same
            way as the server dSTS proxy does except that it uses the federation query endpoint instead of the STS
            endpoint.
            </summary>
            <param name="federationQueryUrl">The URL of the federation query endpoint on the server's STS.</param>
            <param name="serverStsRealmName">The STS realm name of the server.</param>
            <param name="serverDnsHostName">The DNS host name of the server.</param>
            <param name="trustedStsCertificateThumbprints">
            The STS certificate thumbprints trusted by the client.
            </param>
            <param name="federatedAuthenticationMethod"></param>
            <param name="isInteractive"></param>
            <param name="selfFederationMode"></param>
            <returns>The proxy to the federation query service.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsProxyWithValidator.#ctor(Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenService,System.Uri,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidatorScopeFactory)">
            <summary>
            Initializes a new instance of the StsProxyWithValidator class.
            </summary>
            <param name="securityTokenService">The proxy to the STS endpoint on the STS.</param>
            <param name="endpointAddress">The endpoint that will be validated.</param>
            <param name="certificateValidatorFactory">A validator factory object which can 
            create the validator for STS certificate.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsProxyWithValidator.Issue(Microsoft.WindowsAzure.Security.Authentication.SecurityTokenIssuanceRequest,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Issues a security token with server certificates.
            </summary>
            <param name="request">The security token request object.</param>
            <param name="requestMetadata">String indicating that the call came from RefreshToken()</param>
            <returns>The security token response containing the requested security 
            token and an optional list of one or more server certificates.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.StsRetryPolicyExecutor">
            <summary>
            Represents the executor of the retry policy.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.StsRetryPolicyExecutor.Execute(System.Action{Microsoft.WindowsAzure.Security.Authentication.IStsRetryContext},Microsoft.WindowsAzure.Security.Authentication.IStsRetryPolicy,System.String)">
            <summary>
            Executes a action using a specified retry policy.
            </summary>
            <param name="action">The specified action.</param>
            <param name="retryPolicy">The retry policy.</param>
            <param name="actionDescription">The description of the action to be logged after
            each retry.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SubjectAlternativeNameProvider">
            <summary>Represents a provider that retrieves subject alternative names from an X.509 certificate.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SubjectAlternativeNameProvider.GetDnsNames(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>Extracts the DNS subject alternative names from an X.509 certificate.</summary>
            <param name="certificate">The certificate from which to extract the names.</param>
            <returns>
            The DNS subject alternative names extracted, or <see langword="null"/> if the certificate does not include
            the subject alternative name extension.
            </returns>
            <remarks>
            The caller may need to distinguish between a certificate without a subject alternative name extension and
            one with an extension containing no entries. This method returns <see langword="null"/> if the certificate
            does not include the subject alternative name extension and an empty array when the certificate does include
            the extension but contains no entries.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SubjectAlternativeNameProvider.CriticalAllocHandle">
            <summary>Represents a handle to allocated memory.</summary>
            <remarks>Copied verbatim (disassembled) from the .NET internal class of the same name.</remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SubjectCommonNameProvider">
            <summary>Represents a provider that retrieves subject common name from an X.509 certificate.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.SubjectCommonNameProvider.GetCommonName(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>Extracts the subject common name from an X.509 certificate.</summary>
            <param name="certificate">The certificate from which to extract the name.</param>
            <returns>
            The common name extracted, or <see langword="null"/> if the certificate does not contain a common name.
            </returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.SystemSleep">
            <summary>
            Encapsulates the .NET Sleep method by implementing <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ISleep"/> interface 
            so that we do not have to sleep for a long time in unit tests.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.InfrequentCallThrottler">
            <summary>
            Throttles calls so that they are made infrequently.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ThreadingTimer">
            <summary>
            Class encapsulating System.Threading.Timer
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.ThreadingTimer.timer">
            <summary>
            Instance of Threading.Timer this class is encapsulating
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ThreadingTimer.#ctor(System.Object,System.TimeSpan,System.TimeSpan,Microsoft.WindowsAzure.Security.Authentication.TimerEventHandler)">
            <summary>
            Initializes a new instance of the ThreadingTimer class, using TimeSpan values to measure time intervals
            </summary>
            <param name="state">An object containing information to be used by the callback method, or null.</param>
            <param name="dueTime">The amount of time to delay before the callback parameter invokes its methods</param>
            <param name="period">The time interval between invocations of the methods referenced by callback</param>
            <param name="worker">Delegate to be invoked when timer expires</param>
        </member>
        <member name="E:Microsoft.WindowsAzure.Security.Authentication.ThreadingTimer.Tick">
            <summary>
            Declaring event which others can subscribe to be notified when timer events happen.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ThreadingTimer.Change(System.TimeSpan,System.TimeSpan)">
            <summary>
            Changes the start time and the interval between method invocations for a time. Similar to System.Threading.Timer
            </summary>
            <param name="dueTime">A TimeSpan representing the amount of time to delay before invoking the callback method specified when the Timer was constructed</param>
            <param name="period">The time interval between invocations of the callback method specified when the Timer was constructed</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ThreadingTimer.Change(System.Int32,System.Int32)">
            <summary>
            Changes the start time and the interval between method invocations for a time. Similar to System.Threading.Timer
            </summary>
            <param name="dueTime">The amount of time to delay before the invoking the callback method specified when the Timer was constructed, in milliseconds</param>
            <param name="period">The time interval between invocations of the callback method specified when the Timer was constructed, in milliseconds</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ThreadingTimer.Dispose">
            <summary>
            Performs tasks associated with freeing, releasing, or resetting unmanaged resources
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ThreadingTimer.TimerCallback(System.Object)">
            <summary>
            Call back method when timer event triggers
            </summary>
            <param name="state">state that needs to passed</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.ThumbprintCertificateValidator">
            <summary>
            Represents a validator that validates only when <see cref="M:Microsoft.WindowsAzure.Security.Authentication.ThumbprintCertificateValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)"/> is called with an
            <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate"/> whose <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString"/> is one of the provided
            values.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ThumbprintCertificateValidator.#ctor(System.String[])">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ThumbprintCertificateValidator"/> class.</summary>
            <param name="sha1Thumbprints">The SHA-1 thumbprints of certificates to trust.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ThumbprintCertificateValidator.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.ThumbprintCertificateValidator"/> class.</summary>
            <param name="sha1Thumbprints">The SHA-1 thumbprints of certificates to trust.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.ThumbprintCertificateValidator.Sha1Thumbprints">
            <summary>
            Gets the SHA-1 thumbprints of certificates to trust.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.ThumbprintCertificateValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication.</summary>
            <param name="sender">An object that contains state information for this validation.</param>
            <param name="certificate">The certificate used to authenticate the remote party.</param>
            <param name="chain">The chain of certificate authorities associated with the remote certificate.</param>
            <param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
            <returns>
            A <see cref="T:System.Boolean"/> value that determines whether the specified certificate is accepted for authentication.
            </returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.TimerEventHandler">
            <summary>
            Delegate for when timer event occurs
            </summary>
            <param name="sender">sender of event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.TimerEventArgs">
            <summary>
            Defining Timer Event arguments
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.TimerEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.TimerEventArgs" /> class
            </summary>
            <param name="state">state to set</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.TimerEventArgs.State">
            <summary>
            Gets or set timer event args
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.TimeTracker">
            <summary>
            Contains a helper method that throws a timeout exception after the specified time
            has elapsed.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.TimeTracker.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.TimeTracker"/> class.
            </summary>
            <param name="timeout">The time limit before a timeout exception
            can be thrown.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.TokenAuthenticationSchemes">
            <summary>
            Defines the values of the scheme in the WWW-Authenticate and Authorization headers. 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.FederatedUrl">
            <summary>
            A url used to authenticate to ADFS along with the mehtod to use.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient">
            <summary>
            Represents an authentication client of web-based services in the datacenter.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient"/> class.
            </summary>
            <param name="clientCredential">The client credential.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient"/> class.
            </summary>
            <param name="clientCredential">The client credential.</param>
            <param name="clientHomeSts">The optional client home dSTS.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient"/> class.
            </summary>
            <param name="clientCredential">The client credential object.</param>
            <param name="clientHomeSts">An object containing information about the client's home STS.</param>
            <param name="trustedStsCertificateThumbprints">An opttional list of thumbprints of STS 
            certificates known to the client. This parameter can be null. If specified, the list is 
            used to validate the SSL certificate of all STS's along the trust chain between the 
            client and the server. Thumbprints are used in environments where PKI validation is 
            not possible.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IAuthenticationClientConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient"/> class.
            </summary>
            <param name="clientCredential">The client credential object.</param>
            <param name="clientHomeSts">An object containing information about the client's home STS.</param>
            <param name="authenticationClientConfiguration">Configuration to use when requesting tokens.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.CreateContext(System.Uri,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata)">
            <summary>
            Creates a context that can be used to authenticate to the specified service. The
            same context can be reused for multiple requests.
            </summary>
            <param name="serviceRealmUri">Service realm (a.k.a. the service SPN), which uniquely identifies the service.</param>
            <param name="serviceDnsName">The optional DNS host name of the service. If this value is null,
            empty, or an IP address, the service DNS name returned by the server is used and 
            there is no server authentication.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <returns>The authentication context. The context can be shared by multiple threads.</returns>
            <remarks>The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism. For example, the client can send an http request to the metadata
            endpoint or sends a normal unauthenticated service request. In either case, the server 
            returns a 401 Unauthorized response whose WWW-Authenticate header contains the 
            authentication metadata. See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> on how to construct 
            an instance of this class.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.CreateContext(System.String,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata)">
            <summary>
            Creates a context that can be used to authenticate to the specified service. The
            same context can be reused for multiple requests.
            </summary>
            <param name="serviceName">The service name. The service name is part of the realm
            of the service account on dSTS.</param>
            <param name="serviceDnsName">The optional DNS host name of the service. If this value is null,
            empty, or an IP address, the service DNS name returned by the server is used and 
            there is no server authentication.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <returns>The authentication context. The context can be shared by multiple threads.</returns>
            <remarks>The <paramref name="serviceName"/> and <paramref name="serviceDnsName"/> are used
            to construct the service realm (a.k.a. the service SPN), which uniquely identifies the
            service. 
            The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism. For example, the client can send an http request to the metadata
            endpoint or sends a normal unauthenticated service request. In either case, the server 
            returns a 401 Unauthorized response whose WWW-Authenticate header contains the 
            authentication metadata. See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> on how to construct 
            an instance of this class.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.OnUnauthorized(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext,Microsoft.WindowsAzure.Security.Authentication.IIncomingResponse)">
            <summary>
            Handles an unauthorized response from the service.
            </summary>
            <param name="context">The authentication context associated with the 
            previous request.</param>
            <param name="response">The service's error response to the previous request.</param>
            <returns>A new authentication context that should be used to retry the request.</returns>
            <remarks>
            The returned authentication context is incomplete. The caller should pass this context to 
            see <see cref="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.ConfigureRequest(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext,Microsoft.WindowsAzure.Security.Authentication.IOutgoingRequest,System.IDisposable@)"/> to configure authentication on a new request 
            and resend the request. If the authentication succeeds with the new request, the 
            caller should convert the incomplete context to a <see cref="T:Microsoft.WindowsAzure.Security.Authentication.CompleteWebAuthenticationContext"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.CreateContext(System.String,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata,System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Creates a context that can be used to authenticate to the specified service. The
            same context can be reused for multiple requests. The context is created using the ActAs security token.
            </summary>
            <param name="serviceName">The service name. The service name is part of the realm
            of the service account on dSTS.</param>
            <param name="serviceDnsName">The optional DNS host name of the service. If this value is null,
            empty, or an IP address, the service DNS name returned by the server is used and 
            there is no server authentication.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <param name="actAsToken">Security token for ActAs</param>
            <returns>The authentication context. The context can be shared by multiple threads.</returns>
            <remarks>The <paramref name="serviceName"/> and <paramref name="serviceDnsName"/> are used
            to construct the service realm (a.k.a. the service SPN), which uniquely identifies the
            service. 
            The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism. For example, the client can send an http request to the metadata
            endpoint or sends a normal unauthenticated service request. In either case, the server 
            returns a 401 Unauthorized response whose WWW-Authenticate header contains the 
            authentication metadata. See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> on how to construct 
            an instance of this class.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.CreateContext(System.Uri,System.String,Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata,System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Creates a context that can be used to authenticate to the specified service. The
            same context can be reused for multiple requests. The context is created using the ActAs security token.
            </summary>
            <param name="serviceRealmUri">Service realm (a.k.a. the service SPN), which uniquely identifies the service.</param>
            <param name="serviceDnsName">The optional DNS host name of the service. If this value is null,
            empty, or an IP address, the service DNS name returned by the server is used and 
            there is no server authentication.</param>
            <param name="authenticationMetadata">The authentication metadata from the server.</param>
            <param name="actAsToken">Security token for ActAs</param>
            <returns>The authentication context. The context can be shared by multiple threads.</returns>
            <remarks>The <paramref name="authenticationMetadata"/> must be obtained through some
            out of band mechanism. For example, the client can send an http request to the metadata
            endpoint or sends a normal unauthenticated service request. In either case, the server 
            returns a 401 Unauthorized response whose WWW-Authenticate header contains the 
            authentication metadata. See <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadata"/> on how to construct 
            an instance of this class.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.OnUnauthorized(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext,Microsoft.WindowsAzure.Security.Authentication.IIncomingResponse,System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Handles an unauthorized response from the service. This API should be used for ActAs scenarios.
            </summary>
            <param name="context">The authentication context associated with the 
            previous request.</param>
            <param name="response">The service's error response to the previous request.</param>
            <param name="actAsToken">Security token for ActAs</param>
            <returns>A new authentication context that should be used to retry the request.</returns>
            <remarks>
            The returned authentication context is incomplete. The caller should pass this context to 
            see <see cref="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.ConfigureRequest(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext,Microsoft.WindowsAzure.Security.Authentication.IOutgoingRequest,System.IDisposable@)"/> to configure authentication on a new request 
            and resend the request. If the authentication succeeds with the new request, the 
            caller should convert the incomplete context to a <see cref="T:Microsoft.WindowsAzure.Security.Authentication.CompleteWebAuthenticationContext"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient.ConfigureRequest(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext,Microsoft.WindowsAzure.Security.Authentication.IOutgoingRequest,System.IDisposable@)">
            <summary>
            Configures the outgoing request for authentication.
            </summary>
            <param name="context">The authentication context returned by CreateContext
            or OnUnauthorized.</param>
            <param name="request">The outgoing request.</param>
            <param name="requestContext">The request context that the caller must dispose after 
            sending the request over the HTTPS channel.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClientFactory">
            <summary>
            Represents a factory that creates instances of <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient"/>.
            The singleton of this factory can be replaced by unit tests to create a mock client 
            object, which mints a dSTS security token in memory.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClientFactory.Instance">
            <summary>
            Gets or sets the singleton factory.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClientFactory.Create(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a web authentication client.
            </summary>
            <param name="clientCredential">The client credential.</param>
            <param name="clientHomeSts">The client home dSTS.</param>
            <param name="trustedStsCertificateThumbprints">The dSTS certificate thumbprint.</param>
            <returns>The web authentication client object</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClientFactory.Create(Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IAuthenticationClientConfiguration)">
            <summary>
            Creates a web authentication client.
            </summary>
            <param name="clientCredential">The client credential.</param>
            <param name="clientHomeSts">The client home dSTS.</param>
            <param name="authenticationClientConfiguration">Client configuration</param>
            <returns>The web authentication client object</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext">
            <summary>
            Represents an authentication context returned from 
            the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationClient"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext.#ctor(Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext"/> class
            from an existing context.
            </summary>
            <param name="context">The existing context.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext.#ctor(Microsoft.WindowsAzure.Security.Authentication.WebSecurityToken,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2},System.String,System.String,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext"/> class.
            </summary>
            <param name="cachedToken">The cached web security token.</param>
            <param name="serverCertificates">The list of server certificates.</param>
            <param name="serviceName">The service name.</param>
            <param name="serviceDnsName">The optional service DNS name. This parameter can be null.</param>
            <param name="certificateValidator">The validator of the service certificate.</param>
            <param name="serviceRealmUri">Service realm (a.k.a. the service SPN), which uniquely identifies the service. 
            If serviceRealmUri passed in is null, the service realm is constructed from service name and service Dns Name</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext.CachedToken">
            <summary>
            Gets cached web security token.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext.ServerCertificates">
            <summary>
            Gets a list of server certificates.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext.ServiceCertificateValidator">
            <summary>
            Gets the validator of the service SSL/TLS certificate.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext.ServiceName">
            <summary>
            Gets the service name.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext.ServiceDnsName">
            <summary>
            Gets the service DNS name.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext.ServiceRealmUri">
            <summary>
            Gets the Service realm uri
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext.Initialize(Microsoft.WindowsAzure.Security.Authentication.WebSecurityToken,System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate2},System.String,System.String,Microsoft.WindowsAzure.Security.Authentication.ICertificateValidator,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationContext"/> class.
            </summary>
            <param name="cachedToken">The cached web token.</param>
            <param name="serverCertificates">The optional list of server certificates.</param>
            <param name="serviceName">The service name.</param>
            <param name="serviceDnsName">The optional service DNS name. This parameter can be null.</param>
            <param name="certificateValidator">The validator of the service certificate.</param>
            <param name="serviceRealmUri">Service realm (a.k.a. the service SPN), which uniquely identifies the service.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationErrorCode">
            <summary>
            Defines the error codes for web-based authentication failures.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationErrorCode.NoError">
            <summary>
            No authentication error.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationErrorCode.NoToken">
            <summary>
            No security token.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationErrorCode.ExpiredToken">
            <summary>
            The security token has expired.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationErrorCode.InvalidToken">
            <summary>
            The security token is invalid. 
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationErrorCode.InvalidAuthenticationScheme">
            <summary>
            The authentication scheme in the authorization header is not recognized.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.WebRequestSender">
            <summary>
            Represents helper method(s) to send a web request.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebRequestSender.Send(System.Net.HttpWebRequest,Microsoft.WindowsAzure.Security.Authentication.IWebRequestInspector)">
            <summary>
            Gets a web response for a given web request.
            </summary>
            <param name="request">The web request.</param>
            <param name="requestInspector">An optional inspector to be invoked before
            the web request is sent and after a response is received.</param>
            <returns>The http web response for the input request.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.WebSecurityToken">
            <summary>
            Represents a security token used in a web request.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebSecurityToken.#ctor(System.String,System.IdentityModel.Tokens.SecurityToken,Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebSecurityToken"/> class.
            </summary>
            <param name="scheme">The authentication scheme.</param>
            <param name="token">The security token.</param>
            <param name="tokenSerializer">The optional security token serializer to 
            serialize the token.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WebSecurityToken.Scheme">
            <summary>
            Gets the authentication scheme.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WebSecurityToken.Token">
            <summary>
            Gets the security token object.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebSecurityToken.FromAuthorizationHeader(Microsoft.WindowsAzure.Security.Authentication.ISecurityTokenSerializer,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebSecurityToken"/> from the authorization header.
            </summary>
            <param name="tokenSerializer">The security token serializer to deserialize the token.</param>
            <param name="authorizationHeader">The authorization header containing the token.</param>
            <returns>The new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebSecurityToken"/>.</returns>
            <remarks>This method can throw <see cref="T:Microsoft.IdentityModel.Tokens.InvalidSecurityTokenException"/> or 
            <see cref="T:System.ServiceModel.Security.ExpiredSecurityTokenException"/>. The return value of this method
            does not have a serializable security token.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebSecurityToken.ToAuthorizationHeader">
            <summary>
            Gets the authorization header from the web security token.
            </summary>
            <returns>The authorization header.</returns>
            <remarks>
            This method is thread-safe.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator">
            <summary>
            Represents an authenticator of the security token.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator"/> class.
            </summary>
            <param name="serverHomeDsts">The server home dSTS</param>
            <param name="serviceIdentity">The server's service identity.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator.#ctor(Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator"/> class.
            </summary>
            <param name="configuration">The service configuration.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator.Authenticate(System.String)">
            <summary>
            Authenticates the security token in the Authorization header.
            </summary>
            <param name="authorizationHeader">The authorization header.</param>
            <returns>A collection of ClaimsIdentity.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator.Authenticate(System.String,System.String)">
            <summary>
            Authenticates the security token in the Authorization header and also runs RevokeClaimsAuthenticaitonManager if it has been configured
            </summary>
            <param name="authorizationHeader">The authorization header.</param>
            <param name="resourceName">The request Url being authenticated</param>
            <returns>>A collection of ClaimsIdentity.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator.AuthenticateCore(Microsoft.WindowsAzure.Security.Authentication.WebSecurityToken)">
            <summary>
            Validates the web security token.
            </summary>
            <param name="token">The web security token.</param>
            <returns>An instance of ClaimsIdentityCollection.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator.CreateAuthorizationException(System.Int32,System.String)">
            <summary>
            Creates the exception to throw on authorization failure. This method
            builds the content WWW-Authenticate header to be included in the exception.
            </summary>
            <param name="errorCode">The error code. This can be one 
            of the values in <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationErrorCode"/> or a 
            new error code specified by applications.</param>
            <param name="errorDescription">The description of the error.</param>
            <returns>A new instance of <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationException"/>.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator.CreateAuthorizationException(System.Int32,System.String,System.Exception)">
            <summary>
            Creates the exception to throw on authorization failure. This method
            builds the content WWW-Authenticate header to be included in the exception.
            </summary>
            <param name="errorCode">The error code. This can be one 
            of the values in <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebAuthenticationErrorCode"/> or a 
            new error code specified by applications.</param>
            <param name="errorDescription">The description of the error.</param>
            <param name="innerException">The optional inner exception. This parameter
            can be null.</param>
            <returns>A new instance of <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationException"/>.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationException">
            <summary>
            Represents an authentication exception on the web server.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationException"/> class.
            </summary>
            <param name="wwwAuthenticateHeader">The content of the WWW-Authenticate header to
            be included in the exception and returned to the client.</param>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationException"/> class.
            </summary>
            <param name="wwwAuthenticateHeader">The content of the WWW-Authenticate header to
            be included in the exception and returned to the client.</param>
            <param name="message">The exception message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationException"/> class.
            </summary>
            <param name="info">The serialization information.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationException.WwwAuthenticateHeader">
            <summary>
            Gets the WWW-Authenticate header.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data 
            about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information 
            about the source or destination.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationProvider">
            <summary>
            Represents the authentication provider for web-based services.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationProvider.#ctor(Microsoft.WindowsAzure.Security.Authentication.Contracts.IServerHomeDsts,Microsoft.WindowsAzure.Security.Authentication.Contracts.IServiceIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationProvider"/> class.
            </summary>
            <param name="serverHomeDsts">The service's home dSTS.</param>
            <param name="serviceIdentity">The service identity.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationProvider.#ctor(Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationProvider"/> class.
            </summary>
            <param name="configuration">The service configuration.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationProvider.#ctor(Microsoft.WindowsAzure.Security.Authentication.DatacenterServiceConfiguration,Microsoft.WindowsAzure.Security.Authentication.WebSecurityTokenAuthenticator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationProvider"/> class.
            </summary>
            <param name="configuration">The service configuration.</param>
            <param name="tokenAuthenticator">The optional security token authenticator.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationProvider.CreateAuthenticationMetadata">
            <summary>
            Returns the authentication metadata. 
            </summary>
            <returns>The authentication metadata.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationProvider.CreateAuthenticationMetadataOnClient">
            <summary>
            In certain scenarios where authentication metadata is not expected to change, client may prefer to create authentication metadata locally.
            CreateAuthenticationMetadata also has same effect but has overhead of network call to get signing cert from DSTS. Signing cert information is only required on server.
            </summary>
            <returns>The opaque authentication metadata.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WebServerAuthenticationProvider.ConfigureServiceHost(System.ServiceModel.ServiceHost)">
            <summary>
            Configures the WCF service host to accept federated credentials.
            </summary>
            <param name="serviceHost">The service host.</param>
            <remarks>
            This method must be called before the service host is opened. 
            In addition, it recommended that the service endpoints are added
            to the service host prior to calling this method.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader">
            <summary>
            Represents the content of the WWW-Authenticate header returned by the server
            in the HTTP "401 Unauthorized" response.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader.MaxHeaderLength">
            <summary>
            The maximum length of the WWW-Authenticate header.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader.Scheme">
            <summary>
            Gets the authentication scheme.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader.TryParse(System.String,Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader@)">
            <summary>
            Parses the scheme and the parameters of the challenge in the 
            WWW-Authenticate response.
            </summary>
            <param name="wwwAuthenticateHeader">The content of the WWW-Authenticate response header.</param>
            <param name="header">When this method returns true, contains an object of type 
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader"/> representing the scheme and the parameters of 
            the first challenge in the WWW-Authenticate header.</param>
            <returns>true if the method can parse the header; otherwise, false.</returns>
            <remarks>This code assumes that there is only one challenge in the header.</remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader.TryParseInternal(System.String,Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader@,System.String@)">
            <summary>
            Parses the scheme and the parameters of the challenge in the 
            WWW-Authenticate response.
            </summary>
            <param name="wwwAuthenticateHeader">The content of the WWW-Authenticate response header.</param>
            <param name="header">When this method returns true, contains an object of type 
            <see cref="T:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeader"/> representing the scheme and the parameters of 
            the first challenge in the WWW-Authenticate header.</param>
            <param name="error">If this method returns false, contains the reason why the header
            cannot be parsed.</param>
            <returns>true if the method can parse the header; otherwise, false.</returns>
            <remarks>This code assumes that there is only one challenge in the header.</remarks>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeaderFactory">
            <summary>
            Represents a factory that creates WWW-Authenticate header strings.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeaderFactory.CreateFromMetadata(System.Object)">
            <summary>
            Creates a WWW-Authenticate header from an authentication metadata object.
            </summary>
            <param name="metadata">The authentication metadata object. This can be obtained
            from the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadataFactory"/>.</param>
            <returns>The WWW-Authenticate header.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeaderFactory.CreateFromMetadata(System.Object,System.Int32,System.String)">
            <summary>
            Creates a WWW-Authenticate header from an authentication metadata object.
            </summary>
            <param name="metadata">The authentication metadata object. This can be obtained
            from the <see cref="T:Microsoft.WindowsAzure.Security.Authentication.AuthenticationMetadataFactory"/>.</param>
            <param name="errorCode">The value of the error code parameter in the header.</param>
            <param name="errorDescription">The value of the error description parameter in the header.</param>
            <returns>A string representing the WWW-Authenticate header.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.WwwAuthenticateHeaderFactory.AddParameter(System.Text.StringBuilder,System.String,System.Object,System.Char)">
            <summary>
            Adds a parameter to the end of a challenge string.
            </summary>
            <param name="builder">The string builder prepresents the current challenge string.</param>
            <param name="name">The parameter name.</param>
            <param name="value">The unquoted parameter value.</param>
            <param name="frontSeparator">The seperating character prepended before the parameter.</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Win32.CERT_ALT_NAME_CHOICE">
            <summary>Defines values used by <see cref="F:Microsoft.WindowsAzure.Security.Authentication.Win32.CERT_ALT_NAME_ENTRY.dwAltNameChoice"/>.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Win32.CERT_ALT_NAME_ENTRY">
            <summary>Represents the native CERT_ALT_NAME_ENTRY structure.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Win32.CERT_ALT_NAME_ENTRY_UNION">
            <summary>Defines the values used by <see cref="F:Microsoft.WindowsAzure.Security.Authentication.Win32.CERT_ALT_NAME_ENTRY.Union"/>.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Win32.CERT_ENCODING_TYPE">
            <summary>Defines values used by CERT_CONTEXT.dwCertEncodingType.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Win32.CERT_STRUCT_TYPE">
            <summary>Defines values used by <see cref="M:Microsoft.WindowsAzure.Security.Authentication.Win32.NativeMethods.CryptDecodeObject(Microsoft.WindowsAzure.Security.Authentication.Win32.CERT_ENCODING_TYPE,System.IntPtr,System.IntPtr,System.UInt32,Microsoft.WindowsAzure.Security.Authentication.Win32.CRYPT_DECODE_OBJECT_FLAGS,System.IntPtr,System.UInt32@)"/> (in lpszStructType).</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Win32.CERT_ALT_NAME_INFO">
            <summary>Represents the native CERT_ALT_NAME_INFO structure.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Win32.NativeMethods">
            <summary>Represents interop wrappers for Crypt32.dll.</summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Security.Authentication.Win32.NativeMethods.GetUserNameExW(System.Int32,System.IntPtr,System.UInt32@)">
            <summary>
            Imported Windows API to get user name
            </summary>
            <param name="nameFormat">
            The format of the name. This parameter is a value from the EXTENDED_NAME_FORMAT enumeration type.
            </param>
            <param name="userName">
            A pointer to a buffer that receives the name in the specified format, including terminating null character. 
            </param>
            <param name="userNameSize">
            On input, this variable specifies the size of the lpNameBuffer buffer, in WCHARS.
            If userName buffer is too small, it receives the required buffer size, in Unicode characters.
            </param>
            <returns>Whether this API executed successful or not</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Win32.CRYPTOAPI_BLOB">
            <summary>Represents the native CRYPTO_API structure (and related typedefs).</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.Win32.CRYPT_DECODE_OBJECT_FLAGS">
            <summary>Defines values used by <see cref="M:Microsoft.WindowsAzure.Security.Authentication.Win32.NativeMethods.CryptDecodeObject(Microsoft.WindowsAzure.Security.Authentication.Win32.CERT_ENCODING_TYPE,System.IntPtr,System.IntPtr,System.UInt32,Microsoft.WindowsAzure.Security.Authentication.Win32.CRYPT_DECODE_OBJECT_FLAGS,System.IntPtr,System.UInt32@)"/> (in dwFlags).</summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.Win32.CRYPT_DECODE_OBJECT_FLAGS.CRYPT_DECODE_NOCOPY_FLAG">
            <summary>
            This flag can be set to indicate that "no copy" optimization is enabled. This optimization, where
            applicable, updates the pvStructInfo parameter to point to content residing within pbEncoded instead of
            making a copy of the content and appending it to pvStructInfo. For applicable cases, less memory needs to be
            allocated by the calling application and execution is faster because a copy is not being made. Note that the
            trade-off when performing a "no copy" decoding is that pbEncoded cannot be freed until pvStructInfo is
            freed.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.Win32.CRYPT_DECODE_OBJECT_FLAGS.CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG">
            <summary>
            This flag is applicable when decoding X509_UNICODE_NAME, X509_UNICODE_NAME_VALUE, or
            X509_UNICODE_ANY_STRING. By default, CERT_RDN_T61_STRING encoded values are initially decoded as UTF8. If
            the UTF8 decoding fails, then the value is decoded as eight-bit characters. If this flag is set, it skips
            the initial attempt to decode the value as UTF8 and decodes the value as eight-bit characters.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.Win32.CRYPT_DECODE_OBJECT_FLAGS.CRYPT_DECODE_TO_BE_SIGNED_FLAG">
            <summary>
            By default, the contents of the buffer pointed to by pbEncoded included the signed content and the
            signature. If this flag is set, the buffer includes only the "to be signed" content. This flag is applicable
            to X509_CERT_TO_BE_SIGNED, X509_CERT_CRL_TO_BE_SIGNED, X509_CRT_REQUEST_TO_BE_SIGNED, and
            X509_KEYGEN_REQUEST_TO_BE_SIGNED objects.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.Win32.CRYPT_DECODE_OBJECT_FLAGS.CRYPT_DECODE_SHARE_OID_STRING_FLAG">
            <summary>
            When this flag is set, the OID stings are allocated in Crypt32.dll and shared instead of being copied into
            the returned data structure. This flag can be set if Crypt32.dll is not unloaded before the caller is
            unloaded.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.Win32.CRYPT_DECODE_OBJECT_FLAGS.CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG">
            <summary>
            By default, the signature bytes are reversed. If this flag is set, this byte reversal is inhibited.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Security.Authentication.StressRetryPolicy">
            <summary>
            Represents the retry policy when in Dsts stress mode
            </summary>
            <remarks>
            No retry, total request time is 1 second
            </remarks>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.StressRetryPolicy.MaxNumberOfTrial">
            <summary>
            The maximum number of trial.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.StressRetryPolicy.WaitTimeInSeconds">
            <summary>
            The wait time before retrying if waiting is necessary.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Security.Authentication.StressRetryPolicy.InitialTimeoutInSeconds">
            <summary>
            The initial timeout used when requesting a security token.
            </summary>
        </member>
    </members>
</doc>
